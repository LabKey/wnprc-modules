/**
 * This class is generated by jOOQ
 */
package org.labkey.apikey.model.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import jakarta.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import org.labkey.apikey.model.jooq.tables.AllowedServices;
import org.labkey.apikey.model.jooq.tables.Apikeys;
import org.labkey.apikey.model.jooq.tables.KeyRevocations;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Apikey extends SchemaImpl {

    private static final long serialVersionUID = -260665276;

    /**
     * The reference instance of <code>apikey</code>
     */
    public static final Apikey APIKEY = new Apikey();

    /**
     * The table <code>apikey.allowed_services</code>.
     */
    public final AllowedServices ALLOWED_SERVICES = org.labkey.apikey.model.jooq.tables.AllowedServices.ALLOWED_SERVICES;

    /**
     * The table <code>apikey.apikeys</code>.
     */
    public final Apikeys APIKEYS = org.labkey.apikey.model.jooq.tables.Apikeys.APIKEYS;

    /**
     * The table <code>apikey.key_revocations</code>.
     */
    public final KeyRevocations KEY_REVOCATIONS = org.labkey.apikey.model.jooq.tables.KeyRevocations.KEY_REVOCATIONS;

    /**
     * No further instances allowed
     */
    private Apikey() {
        super("apikey", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AllowedServices.ALLOWED_SERVICES,
            Apikeys.APIKEYS,
            KeyRevocations.KEY_REVOCATIONS);
    }
}
