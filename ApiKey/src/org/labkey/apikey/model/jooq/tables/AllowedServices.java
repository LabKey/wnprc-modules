/**
 * This class is generated by jOOQ
 */
package org.labkey.apikey.model.jooq.tables;


import java.util.Arrays;
import java.util.List;

import jakarta.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.apikey.model.jooq.Apikey;
import org.labkey.apikey.model.jooq.Keys;
import org.labkey.apikey.model.jooq.tables.records.AllowedServicesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllowedServices extends TableImpl<AllowedServicesRecord> {

    private static final long serialVersionUID = 1481140186;

    /**
     * The reference instance of <code>apikey.allowed_services</code>
     */
    public static final AllowedServices ALLOWED_SERVICES = new AllowedServices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AllowedServicesRecord> getRecordType() {
        return AllowedServicesRecord.class;
    }

    /**
     * The column <code>apikey.allowed_services.apikey</code>.
     */
    public final TableField<AllowedServicesRecord, String> APIKEY = createField("apikey", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>apikey.allowed_services.modulename</code>.
     */
    public final TableField<AllowedServicesRecord, String> MODULENAME = createField("modulename", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>apikey.allowed_services.servicename</code>.
     */
    public final TableField<AllowedServicesRecord, String> SERVICENAME = createField("servicename", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>apikey.allowed_services</code> table reference
     */
    public AllowedServices() {
        this("allowed_services", null);
    }

    /**
     * Create an aliased <code>apikey.allowed_services</code> table reference
     */
    public AllowedServices(String alias) {
        this(alias, ALLOWED_SERVICES);
    }

    private AllowedServices(String alias, Table<AllowedServicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AllowedServices(String alias, Table<AllowedServicesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Apikey.APIKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AllowedServicesRecord> getPrimaryKey() {
        return Keys.PK_SERVICES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AllowedServicesRecord>> getKeys() {
        return Arrays.<UniqueKey<AllowedServicesRecord>>asList(Keys.PK_SERVICES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AllowedServices as(String alias) {
        return new AllowedServices(alias, this);
    }

    /**
     * Rename this table
     */
    public AllowedServices rename(String name) {
        return new AllowedServices(name, null);
    }
}
