/**
 * This class is generated by jOOQ
 */
package org.labkey.apikey.model.jooq.tables;


import jakarta.annotation.Generated;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.apikey.model.jooq.Apikey;
import org.labkey.apikey.model.jooq.Keys;
import org.labkey.apikey.model.jooq.tables.records.KeyRevocationsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KeyRevocations extends TableImpl<KeyRevocationsRecord> {

    private static final long serialVersionUID = -1677697884;

    /**
     * The reference instance of <code>apikey.key_revocations</code>
     */
    public static final KeyRevocations KEY_REVOCATIONS = new KeyRevocations();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<KeyRevocationsRecord> getRecordType() {
        return KeyRevocationsRecord.class;
    }

    /**
     * The column <code>apikey.key_revocations.apikey</code>.
     */
    public final TableField<KeyRevocationsRecord, String> APIKEY = createField("apikey", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>apikey.key_revocations.revokedon</code>.
     */
    public final TableField<KeyRevocationsRecord, Timestamp> REVOKEDON = createField("revokedon", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>apikey.key_revocations.revokedby</code>.
     */
    public final TableField<KeyRevocationsRecord, Integer> REVOKEDBY = createField("revokedby", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>apikey.key_revocations.reason</code>.
     */
    public final TableField<KeyRevocationsRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>apikey.key_revocations</code> table reference
     */
    public KeyRevocations() {
        this("key_revocations", null);
    }

    /**
     * Create an aliased <code>apikey.key_revocations</code> table reference
     */
    public KeyRevocations(String alias) {
        this(alias, KEY_REVOCATIONS);
    }

    private KeyRevocations(String alias, Table<KeyRevocationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private KeyRevocations(String alias, Table<KeyRevocationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Apikey.APIKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<KeyRevocationsRecord> getPrimaryKey() {
        return Keys.PK_KEY_REVOCATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<KeyRevocationsRecord>> getKeys() {
        return Arrays.<UniqueKey<KeyRevocationsRecord>>asList(Keys.PK_KEY_REVOCATIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KeyRevocations as(String alias) {
        return new KeyRevocations(alias, this);
    }

    /**
     * Rename this table
     */
    public KeyRevocations rename(String name) {
        return new KeyRevocations(name, null);
    }
}
