/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.labkey.wnprc_compliance.model.jooq.tables.AccessReportData;
import org.labkey.wnprc_compliance.model.jooq.tables.AccessReports;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedProcedures;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedProceduresToDrugRegimens;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSpecies;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSpeciesToAllowedProcedures;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSpeciesToAllowedSurgeries;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSpeciesToDrugs;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSurgeries;
import org.labkey.wnprc_compliance.model.jooq.tables.AllowedSurgeriesToDrugRegimens;
import org.labkey.wnprc_compliance.model.jooq.tables.CardInfo;
import org.labkey.wnprc_compliance.model.jooq.tables.Cards;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRegimenFrequencyThreshold;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRegimens;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRegimensToAllowedProcedures;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRegimensToDrugs;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRegimensToFrequencyThreshold;
import org.labkey.wnprc_compliance.model.jooq.tables.DrugRoutes;
import org.labkey.wnprc_compliance.model.jooq.tables.Drugs;
import org.labkey.wnprc_compliance.model.jooq.tables.MeaslesClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.PendingTbClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.Persons;
import org.labkey.wnprc_compliance.model.jooq.tables.PersonsMeaslesClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.PersonsPendingTbClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.PersonsTbClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.PersonsToCards;
import org.labkey.wnprc_compliance.model.jooq.tables.PersonsToUsers;
import org.labkey.wnprc_compliance.model.jooq.tables.ProtocolRenewals;
import org.labkey.wnprc_compliance.model.jooq.tables.ProtocolRevisions;
import org.labkey.wnprc_compliance.model.jooq.tables.Protocols;
import org.labkey.wnprc_compliance.model.jooq.tables.TbClearances;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AccessReportDataRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AccessReportsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedProceduresRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedProceduresToDrugRegimensRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesToAllowedProceduresRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesToAllowedSurgeriesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesToDrugsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSurgeriesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSurgeriesToDrugRegimensRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.CardInfoRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.CardsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRegimenFrequencyThresholdRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRegimensRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRegimensToAllowedProceduresRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRegimensToDrugsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRegimensToFrequencyThresholdRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugRoutesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.DrugsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.MeaslesClearancesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PendingTbClearancesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsMeaslesClearancesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsPendingTbClearancesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsTbClearancesRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsToCardsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsToUsersRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.ProtocolRenewalsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.ProtocolRevisionsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.ProtocolsRecord;
import org.labkey.wnprc_compliance.model.jooq.tables.records.TbClearancesRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>wnprc_compliance</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccessReportDataRecord> PK_ACCESS_REPORT_DATA = UniqueKeys0.PK_ACCESS_REPORT_DATA;
    public static final UniqueKey<AccessReportsRecord> PK_ACCESS_REPORTS = UniqueKeys0.PK_ACCESS_REPORTS;
    public static final UniqueKey<AccessReportsRecord> ACCESS_REPORTS_DATE_KEY = UniqueKeys0.ACCESS_REPORTS_DATE_KEY;
    public static final UniqueKey<AllowedProceduresRecord> PK_ALLOWED_PROCEDURES = UniqueKeys0.PK_ALLOWED_PROCEDURES;
    public static final UniqueKey<AllowedProceduresToDrugRegimensRecord> PK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS = UniqueKeys0.PK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS;
    public static final UniqueKey<AllowedSpeciesRecord> PK_ALLOWED_SPECIES = UniqueKeys0.PK_ALLOWED_SPECIES;
    public static final UniqueKey<AllowedSpeciesToAllowedProceduresRecord> PK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES = UniqueKeys0.PK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES;
    public static final UniqueKey<AllowedSpeciesToAllowedSurgeriesRecord> PK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES = UniqueKeys0.PK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES;
    public static final UniqueKey<AllowedSpeciesToDrugsRecord> PK_ALLOWED_SPECIES_TO_DRUGS = UniqueKeys0.PK_ALLOWED_SPECIES_TO_DRUGS;
    public static final UniqueKey<AllowedSurgeriesRecord> PK_SURGERY_INFO = UniqueKeys0.PK_SURGERY_INFO;
    public static final UniqueKey<AllowedSurgeriesToDrugRegimensRecord> PK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS = UniqueKeys0.PK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS;
    public static final UniqueKey<CardInfoRecord> PK_CARD_INFO = UniqueKeys0.PK_CARD_INFO;
    public static final UniqueKey<CardsRecord> PK_CARDS = UniqueKeys0.PK_CARDS;
    public static final UniqueKey<DrugRegimenFrequencyThresholdRecord> PK_DRUG_REGIMEN_FREQUENCY_THRESHOLD = UniqueKeys0.PK_DRUG_REGIMEN_FREQUENCY_THRESHOLD;
    public static final UniqueKey<DrugRegimensRecord> PK_DRUG_REGIMENS = UniqueKeys0.PK_DRUG_REGIMENS;
    public static final UniqueKey<DrugRegimensToAllowedProceduresRecord> PK_DRUG_REGIMENS_TO_PROTOCOLS = UniqueKeys0.PK_DRUG_REGIMENS_TO_PROTOCOLS;
    public static final UniqueKey<DrugRegimensToDrugsRecord> PK_DRUG_REGIMENS_TO_DRUGS = UniqueKeys0.PK_DRUG_REGIMENS_TO_DRUGS;
    public static final UniqueKey<DrugRegimensToFrequencyThresholdRecord> PK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD = UniqueKeys0.PK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD;
    public static final UniqueKey<DrugRoutesRecord> PK_DRUG_ROUTES = UniqueKeys0.PK_DRUG_ROUTES;
    public static final UniqueKey<DrugsRecord> PK_DRUGS = UniqueKeys0.PK_DRUGS;
    public static final UniqueKey<MeaslesClearancesRecord> PK_MEASLES_CLEARANCES = UniqueKeys0.PK_MEASLES_CLEARANCES;
    public static final UniqueKey<PendingTbClearancesRecord> PK_PENDING_TB_CLEARANCES = UniqueKeys0.PK_PENDING_TB_CLEARANCES;
    public static final UniqueKey<PersonsRecord> PK_PERSONS = UniqueKeys0.PK_PERSONS;
    public static final UniqueKey<PersonsMeaslesClearancesRecord> PK_PERSONS_MEASLES_CLEARANCES = UniqueKeys0.PK_PERSONS_MEASLES_CLEARANCES;
    public static final UniqueKey<PersonsPendingTbClearancesRecord> PK_PERSONS_PENDING_TB_CLEARANCES = UniqueKeys0.PK_PERSONS_PENDING_TB_CLEARANCES;
    public static final UniqueKey<PersonsTbClearancesRecord> PK_PERSONS_TB_CLEARANCES = UniqueKeys0.PK_PERSONS_TB_CLEARANCES;
    public static final UniqueKey<PersonsToCardsRecord> PK_PERSONS_TO_CARDS = UniqueKeys0.PK_PERSONS_TO_CARDS;
    public static final UniqueKey<PersonsToUsersRecord> PK_PERSONS_TO_USERS = UniqueKeys0.PK_PERSONS_TO_USERS;
    public static final UniqueKey<ProtocolRenewalsRecord> PK_PROTOCOL_RENEWALS = UniqueKeys0.PK_PROTOCOL_RENEWALS;
    public static final UniqueKey<ProtocolRevisionsRecord> PK_PROTOCOL_REVISIONS = UniqueKeys0.PK_PROTOCOL_REVISIONS;
    public static final UniqueKey<ProtocolsRecord> PK_PROTOCOL = UniqueKeys0.PK_PROTOCOL;
    public static final UniqueKey<ProtocolsRecord> PROTOCOLS_PROTOCOL_NUMBER_KEY = UniqueKeys0.PROTOCOLS_PROTOCOL_NUMBER_KEY;
    public static final UniqueKey<TbClearancesRecord> PK_TB_CLEARANCES = UniqueKeys0.PK_TB_CLEARANCES;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccessReportDataRecord, AccessReportsRecord> ACCESS_REPORT_DATA__FK_ACCESS_REPORT_DATA_ACCESS_REPORTS = ForeignKeys0.ACCESS_REPORT_DATA__FK_ACCESS_REPORT_DATA_ACCESS_REPORTS;
    public static final ForeignKey<AllowedProceduresToDrugRegimensRecord, AllowedProceduresRecord> ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_ALLOWED_PROCEDURES = ForeignKeys0.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_ALLOWED_PROCEDURES;
    public static final ForeignKey<AllowedProceduresToDrugRegimensRecord, DrugRegimensRecord> ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_DRUG_REGIMENS = ForeignKeys0.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_DRUG_REGIMENS;
    public static final ForeignKey<AllowedSpeciesRecord, ProtocolRevisionsRecord> ALLOWED_SPECIES__FK_ALLOWED_SPECIES = ForeignKeys0.ALLOWED_SPECIES__FK_ALLOWED_SPECIES;
    public static final ForeignKey<AllowedSpeciesToAllowedProceduresRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_SPECIES = ForeignKeys0.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_SPECIES;
    public static final ForeignKey<AllowedSpeciesToAllowedProceduresRecord, AllowedProceduresRecord> ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_PROCEDURES = ForeignKeys0.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_PROCEDURES;
    public static final ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SPECIES = ForeignKeys0.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SPECIES;
    public static final ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, AllowedSurgeriesRecord> ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SURGERIES = ForeignKeys0.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SURGERIES;
    public static final ForeignKey<AllowedSpeciesToDrugsRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_ALLOWED_SPECIES = ForeignKeys0.ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_ALLOWED_SPECIES;
    public static final ForeignKey<AllowedSpeciesToDrugsRecord, DrugsRecord> ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_DRUGS = ForeignKeys0.ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_DRUGS;
    public static final ForeignKey<AllowedSurgeriesToDrugRegimensRecord, AllowedSurgeriesRecord> ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_SURGERIES = ForeignKeys0.ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_SURGERIES;
    public static final ForeignKey<AllowedSurgeriesToDrugRegimensRecord, DrugRegimensRecord> ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_REGIMENS = ForeignKeys0.ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_REGIMENS;
    public static final ForeignKey<CardInfoRecord, AccessReportsRecord> CARD_INFO__FK_CARD_INFO_ACCESS_REPORTS = ForeignKeys0.CARD_INFO__FK_CARD_INFO_ACCESS_REPORTS;
    public static final ForeignKey<CardInfoRecord, CardsRecord> CARD_INFO__FK_CARD_INFO_CARDS = ForeignKeys0.CARD_INFO__FK_CARD_INFO_CARDS;
    public static final ForeignKey<DrugRegimensToAllowedProceduresRecord, AllowedSpeciesRecord> DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_ALLOWED_SPECIES = ForeignKeys0.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_ALLOWED_SPECIES;
    public static final ForeignKey<DrugRegimensToAllowedProceduresRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_DRUG_REGIMENS = ForeignKeys0.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_DRUG_REGIMENS;
    public static final ForeignKey<DrugRegimensToDrugsRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_REGIMENS = ForeignKeys0.DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_REGIMENS;
    public static final ForeignKey<DrugRegimensToDrugsRecord, DrugsRecord> DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_DRUGS = ForeignKeys0.DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_DRUGS;
    public static final ForeignKey<DrugRegimensToFrequencyThresholdRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_DRUG_REGIMENS = ForeignKeys0.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_DRUG_REGIMENS;
    public static final ForeignKey<DrugRegimensToFrequencyThresholdRecord, DrugRegimenFrequencyThresholdRecord> DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_THRESHOLDS = ForeignKeys0.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_THRESHOLDS;
    public static final ForeignKey<DrugRoutesRecord, DrugsRecord> DRUG_ROUTES__FK_DRUG_ROUTES_TO_DRUGS = ForeignKeys0.DRUG_ROUTES__FK_DRUG_ROUTES_TO_DRUGS;
    public static final ForeignKey<PersonsMeaslesClearancesRecord, PersonsRecord> PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_PERSONS = ForeignKeys0.PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_PERSONS;
    public static final ForeignKey<PersonsMeaslesClearancesRecord, MeaslesClearancesRecord> PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_CLEARANCES = ForeignKeys0.PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_CLEARANCES;
    public static final ForeignKey<PersonsPendingTbClearancesRecord, PersonsRecord> PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PERSONS = ForeignKeys0.PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PERSONS;
    public static final ForeignKey<PersonsPendingTbClearancesRecord, PendingTbClearancesRecord> PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PENDING_CLEARANCES = ForeignKeys0.PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PENDING_CLEARANCES;
    public static final ForeignKey<PersonsTbClearancesRecord, PersonsRecord> PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_PERSONS = ForeignKeys0.PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_PERSONS;
    public static final ForeignKey<PersonsTbClearancesRecord, TbClearancesRecord> PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_CLEARANCES = ForeignKeys0.PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_CLEARANCES;
    public static final ForeignKey<PersonsToCardsRecord, PersonsRecord> PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_PERSONS = ForeignKeys0.PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_PERSONS;
    public static final ForeignKey<PersonsToCardsRecord, CardsRecord> PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_CARDS = ForeignKeys0.PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_CARDS;
    public static final ForeignKey<PersonsToUsersRecord, PersonsRecord> PERSONS_TO_USERS__FK_PERSONS_TO_CARDS_PERSONS = ForeignKeys0.PERSONS_TO_USERS__FK_PERSONS_TO_CARDS_PERSONS;
    public static final ForeignKey<ProtocolRevisionsRecord, ProtocolsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PROTOCOLS = ForeignKeys0.PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PROTOCOLS;
    public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PI_PERSONS = ForeignKeys0.PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PI_PERSONS;
    public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI1_PERSONS = ForeignKeys0.PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI1_PERSONS;
    public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI2_PERSONS = ForeignKeys0.PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI2_PERSONS;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AccessReportDataRecord> PK_ACCESS_REPORT_DATA = createUniqueKey(AccessReportData.ACCESS_REPORT_DATA, "pk_access_report_data", AccessReportData.ACCESS_REPORT_DATA.REPORT_ID, AccessReportData.ACCESS_REPORT_DATA.AREA, AccessReportData.ACCESS_REPORT_DATA.CARD_ID);
        public static final UniqueKey<AccessReportsRecord> PK_ACCESS_REPORTS = createUniqueKey(AccessReports.ACCESS_REPORTS, "pk_access_reports", AccessReports.ACCESS_REPORTS.REPORT_ID);
        public static final UniqueKey<AccessReportsRecord> ACCESS_REPORTS_DATE_KEY = createUniqueKey(AccessReports.ACCESS_REPORTS, "access_reports_date_key", AccessReports.ACCESS_REPORTS.DATE);
        public static final UniqueKey<AllowedProceduresRecord> PK_ALLOWED_PROCEDURES = createUniqueKey(AllowedProcedures.ALLOWED_PROCEDURES, "pk_allowed_procedures", AllowedProcedures.ALLOWED_PROCEDURES.ID);
        public static final UniqueKey<AllowedProceduresToDrugRegimensRecord> PK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS = createUniqueKey(AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS, "pk_allowed_procedures_to_drug_regimens", AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS.ALLOWED_PROCEDURE_ID, AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS.DRUG_REGIMEN_ID);
        public static final UniqueKey<AllowedSpeciesRecord> PK_ALLOWED_SPECIES = createUniqueKey(AllowedSpecies.ALLOWED_SPECIES, "pk_allowed_species", AllowedSpecies.ALLOWED_SPECIES.PROTOCOL_REVISION_ID, AllowedSpecies.ALLOWED_SPECIES.SPECIES_CLASSIFIER);
        public static final UniqueKey<AllowedSpeciesToAllowedProceduresRecord> PK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES = createUniqueKey(AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES, "pk_allowed_species_to_allowed_procedures", AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.PROTOCOL_REVISION_ID, AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.SPECIES_CLASSIFIER, AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.ALLOWED_PROCEDURE_ID);
        public static final UniqueKey<AllowedSpeciesToAllowedSurgeriesRecord> PK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES = createUniqueKey(AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES, "pk_allowed_species_to_allowed_surgeries", AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.REVISION_ID, AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.SPECIES_CLASSIFIER, AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.SURGERY_ID);
        public static final UniqueKey<AllowedSpeciesToDrugsRecord> PK_ALLOWED_SPECIES_TO_DRUGS = createUniqueKey(AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS, "pk_allowed_species_to_drugs", AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.PROTOCOL_REVISION_ID, AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.SPECIES_CLASS, AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.DRUG_ID);
        public static final UniqueKey<AllowedSurgeriesRecord> PK_SURGERY_INFO = createUniqueKey(AllowedSurgeries.ALLOWED_SURGERIES, "pk_surgery_info", AllowedSurgeries.ALLOWED_SURGERIES.SURGERY_ID);
        public static final UniqueKey<AllowedSurgeriesToDrugRegimensRecord> PK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS = createUniqueKey(AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS, "pk_allowed_surgeries_to_drug_regimens", AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS.SURGERY_ID, AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS.DRUG_REGIMEN_ID);
        public static final UniqueKey<CardInfoRecord> PK_CARD_INFO = createUniqueKey(CardInfo.CARD_INFO, "pk_card_info", CardInfo.CARD_INFO.REPORT_ID, CardInfo.CARD_INFO.CARD_ID);
        public static final UniqueKey<CardsRecord> PK_CARDS = createUniqueKey(Cards.CARDS, "pk_cards", Cards.CARDS.CARD_ID, Cards.CARDS.CONTAINER);
        public static final UniqueKey<DrugRegimenFrequencyThresholdRecord> PK_DRUG_REGIMEN_FREQUENCY_THRESHOLD = createUniqueKey(DrugRegimenFrequencyThreshold.DRUG_REGIMEN_FREQUENCY_THRESHOLD, "pk_drug_regimen_frequency_threshold", DrugRegimenFrequencyThreshold.DRUG_REGIMEN_FREQUENCY_THRESHOLD.ID);
        public static final UniqueKey<DrugRegimensRecord> PK_DRUG_REGIMENS = createUniqueKey(DrugRegimens.DRUG_REGIMENS, "pk_drug_regimens", DrugRegimens.DRUG_REGIMENS.ID);
        public static final UniqueKey<DrugRegimensToAllowedProceduresRecord> PK_DRUG_REGIMENS_TO_PROTOCOLS = createUniqueKey(DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES, "pk_drug_regimens_to_protocols", DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES.PROTOCOL_REVISION_ID, DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES.DRUG_REGIMEN_ID);
        public static final UniqueKey<DrugRegimensToDrugsRecord> PK_DRUG_REGIMENS_TO_DRUGS = createUniqueKey(DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS, "pk_drug_regimens_to_drugs", DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS.DRUG_ID, DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS.DRUG_REGIMEN);
        public static final UniqueKey<DrugRegimensToFrequencyThresholdRecord> PK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD = createUniqueKey(DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD, "pk_drug_regimens_to_frequency_threshold", DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD.DRUG_REGIMEN_ID, DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD.THRESHOLD_ID);
        public static final UniqueKey<DrugRoutesRecord> PK_DRUG_ROUTES = createUniqueKey(DrugRoutes.DRUG_ROUTES, "pk_drug_routes", DrugRoutes.DRUG_ROUTES.DRUG_ID, DrugRoutes.DRUG_ROUTES.ROUTE);
        public static final UniqueKey<DrugsRecord> PK_DRUGS = createUniqueKey(Drugs.DRUGS, "pk_drugs", Drugs.DRUGS.ID);
        public static final UniqueKey<MeaslesClearancesRecord> PK_MEASLES_CLEARANCES = createUniqueKey(MeaslesClearances.MEASLES_CLEARANCES, "pk_measles_clearances", MeaslesClearances.MEASLES_CLEARANCES.ID);
        public static final UniqueKey<PendingTbClearancesRecord> PK_PENDING_TB_CLEARANCES = createUniqueKey(PendingTbClearances.PENDING_TB_CLEARANCES, "pk_pending_tb_clearances", PendingTbClearances.PENDING_TB_CLEARANCES.ID);
        public static final UniqueKey<PersonsRecord> PK_PERSONS = createUniqueKey(Persons.PERSONS, "pk_persons", Persons.PERSONS.PERSONID);
        public static final UniqueKey<PersonsMeaslesClearancesRecord> PK_PERSONS_MEASLES_CLEARANCES = createUniqueKey(PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES, "pk_persons_measles_clearances", PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES.PERSON_ID, PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES.CLEARANCE_ID);
        public static final UniqueKey<PersonsPendingTbClearancesRecord> PK_PERSONS_PENDING_TB_CLEARANCES = createUniqueKey(PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES, "pk_persons_pending_tb_clearances", PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES.PERSON_ID, PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES.CLEARANCE_ID);
        public static final UniqueKey<PersonsTbClearancesRecord> PK_PERSONS_TB_CLEARANCES = createUniqueKey(PersonsTbClearances.PERSONS_TB_CLEARANCES, "pk_persons_tb_clearances", PersonsTbClearances.PERSONS_TB_CLEARANCES.PERSON_ID, PersonsTbClearances.PERSONS_TB_CLEARANCES.CLEARANCE_ID);
        public static final UniqueKey<PersonsToCardsRecord> PK_PERSONS_TO_CARDS = createUniqueKey(PersonsToCards.PERSONS_TO_CARDS, "pk_persons_to_cards", PersonsToCards.PERSONS_TO_CARDS.PERSONID, PersonsToCards.PERSONS_TO_CARDS.CARDID, PersonsToCards.PERSONS_TO_CARDS.CONTAINER);
        public static final UniqueKey<PersonsToUsersRecord> PK_PERSONS_TO_USERS = createUniqueKey(PersonsToUsers.PERSONS_TO_USERS, "pk_persons_to_users", PersonsToUsers.PERSONS_TO_USERS.PERSONID, PersonsToUsers.PERSONS_TO_USERS.USERID, PersonsToUsers.PERSONS_TO_USERS.CONTAINER);
        public static final UniqueKey<ProtocolRenewalsRecord> PK_PROTOCOL_RENEWALS = createUniqueKey(ProtocolRenewals.PROTOCOL_RENEWALS, "pk_protocol_renewals", ProtocolRenewals.PROTOCOL_RENEWALS.RENEWED_PROTOCOL);
        public static final UniqueKey<ProtocolRevisionsRecord> PK_PROTOCOL_REVISIONS = createUniqueKey(ProtocolRevisions.PROTOCOL_REVISIONS, "pk_protocol_revisions", ProtocolRevisions.PROTOCOL_REVISIONS.ID);
        public static final UniqueKey<ProtocolsRecord> PK_PROTOCOL = createUniqueKey(Protocols.PROTOCOLS, "pk_protocol", Protocols.PROTOCOLS.ID);
        public static final UniqueKey<ProtocolsRecord> PROTOCOLS_PROTOCOL_NUMBER_KEY = createUniqueKey(Protocols.PROTOCOLS, "protocols_protocol_number_key", Protocols.PROTOCOLS.PROTOCOL_NUMBER);
        public static final UniqueKey<TbClearancesRecord> PK_TB_CLEARANCES = createUniqueKey(TbClearances.TB_CLEARANCES, "pk_tb_clearances", TbClearances.TB_CLEARANCES.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AccessReportDataRecord, AccessReportsRecord> ACCESS_REPORT_DATA__FK_ACCESS_REPORT_DATA_ACCESS_REPORTS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ACCESS_REPORTS, AccessReportData.ACCESS_REPORT_DATA, "access_report_data__fk_access_report_data_access_reports", AccessReportData.ACCESS_REPORT_DATA.REPORT_ID);
        public static final ForeignKey<AllowedProceduresToDrugRegimensRecord, AllowedProceduresRecord> ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_ALLOWED_PROCEDURES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_PROCEDURES, AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS, "allowed_procedures_to_drug_regimens__fk_allowed_procedures_to_drug_regimens_allowed_procedures", AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS.ALLOWED_PROCEDURE_ID);
        public static final ForeignKey<AllowedProceduresToDrugRegimensRecord, DrugRegimensRecord> ALLOWED_PROCEDURES_TO_DRUG_REGIMENS__FK_ALLOWED_PROCEDURES_TO_DRUG_REGIMENS_DRUG_REGIMENS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMENS, AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS, "allowed_procedures_to_drug_regimens__fk_allowed_procedures_to_drug_regimens_drug_regimens", AllowedProceduresToDrugRegimens.ALLOWED_PROCEDURES_TO_DRUG_REGIMENS.DRUG_REGIMEN_ID);
        public static final ForeignKey<AllowedSpeciesRecord, ProtocolRevisionsRecord> ALLOWED_SPECIES__FK_ALLOWED_SPECIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PROTOCOL_REVISIONS, AllowedSpecies.ALLOWED_SPECIES, "allowed_species__fk_allowed_species", AllowedSpecies.ALLOWED_SPECIES.PROTOCOL_REVISION_ID);
        public static final ForeignKey<AllowedSpeciesToAllowedProceduresRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_SPECIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_SPECIES, AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES, "allowed_species_to_allowed_procedures__fk_allowed_species_to_allowed_procedures_allowed_species", AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.PROTOCOL_REVISION_ID, AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.SPECIES_CLASSIFIER);
        public static final ForeignKey<AllowedSpeciesToAllowedProceduresRecord, AllowedProceduresRecord> ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES__FK_ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES_ALLOWED_PROCEDURES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_PROCEDURES, AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES, "allowed_species_to_allowed_procedures__fk_allowed_species_to_allowed_procedures_allowed_procedures", AllowedSpeciesToAllowedProcedures.ALLOWED_SPECIES_TO_ALLOWED_PROCEDURES.ALLOWED_PROCEDURE_ID);
        public static final ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SPECIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_SPECIES, AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES, "allowed_species_to_allowed_surgeries__fk_allowed_species_to_allowed_surgeries_species", AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.REVISION_ID, AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.SPECIES_CLASSIFIER);
        public static final ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, AllowedSurgeriesRecord> ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SURGERIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_SURGERY_INFO, AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES, "allowed_species_to_allowed_surgeries__fk_allowed_species_to_allowed_surgeries_surgeries", AllowedSpeciesToAllowedSurgeries.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES.SURGERY_ID);
        public static final ForeignKey<AllowedSpeciesToDrugsRecord, AllowedSpeciesRecord> ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_ALLOWED_SPECIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_SPECIES, AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS, "allowed_species_to_drugs__fk_allowed_species_to_drugs_allowed_species", AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.PROTOCOL_REVISION_ID, AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.SPECIES_CLASS);
        public static final ForeignKey<AllowedSpeciesToDrugsRecord, DrugsRecord> ALLOWED_SPECIES_TO_DRUGS__FK_ALLOWED_SPECIES_TO_DRUGS_DRUGS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUGS, AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS, "allowed_species_to_drugs__fk_allowed_species_to_drugs_drugs", AllowedSpeciesToDrugs.ALLOWED_SPECIES_TO_DRUGS.DRUG_ID);
        public static final ForeignKey<AllowedSurgeriesToDrugRegimensRecord, AllowedSurgeriesRecord> ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_SURGERIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_SURGERY_INFO, AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS, "allowed_surgeries_to_drug_regimens__fk_allowed_surgeries_to_drug_regimens_surgeries", AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS.SURGERY_ID);
        public static final ForeignKey<AllowedSurgeriesToDrugRegimensRecord, DrugRegimensRecord> ALLOWED_SURGERIES_TO_DRUG_REGIMENS__FK_ALLOWED_SURGERIES_TO_DRUG_REGIMENS_REGIMENS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMENS, AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS, "allowed_surgeries_to_drug_regimens__fk_allowed_surgeries_to_drug_regimens_regimens", AllowedSurgeriesToDrugRegimens.ALLOWED_SURGERIES_TO_DRUG_REGIMENS.DRUG_REGIMEN_ID);
        public static final ForeignKey<CardInfoRecord, AccessReportsRecord> CARD_INFO__FK_CARD_INFO_ACCESS_REPORTS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ACCESS_REPORTS, CardInfo.CARD_INFO, "card_info__fk_card_info_access_reports", CardInfo.CARD_INFO.REPORT_ID);
        public static final ForeignKey<CardInfoRecord, CardsRecord> CARD_INFO__FK_CARD_INFO_CARDS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_CARDS, CardInfo.CARD_INFO, "card_info__fk_card_info_cards", CardInfo.CARD_INFO.CARD_ID, CardInfo.CARD_INFO.CONTAINER);
        public static final ForeignKey<DrugRegimensToAllowedProceduresRecord, AllowedSpeciesRecord> DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_ALLOWED_SPECIES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_ALLOWED_SPECIES, DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES, "drug_regimens_to_allowed_procedures__fk_drug_regimens_to_protocols_allowed_species", DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES.PROTOCOL_REVISION_ID, DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES.SPECIES_CLASSIFIER);
        public static final ForeignKey<DrugRegimensToAllowedProceduresRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_ALLOWED_PROCEDURES__FK_DRUG_REGIMENS_TO_PROTOCOLS_DRUG_REGIMENS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMENS, DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES, "drug_regimens_to_allowed_procedures__fk_drug_regimens_to_protocols_drug_regimens", DrugRegimensToAllowedProcedures.DRUG_REGIMENS_TO_ALLOWED_PROCEDURES.DRUG_REGIMEN_ID);
        public static final ForeignKey<DrugRegimensToDrugsRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_REGIMENS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMENS, DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS, "drug_regimens_to_drugs__fk_drug_regimens_to_drugs_regimens", DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS.DRUG_REGIMEN);
        public static final ForeignKey<DrugRegimensToDrugsRecord, DrugsRecord> DRUG_REGIMENS_TO_DRUGS__FK_DRUG_REGIMENS_TO_DRUGS_DRUGS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUGS, DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS, "drug_regimens_to_drugs__fk_drug_regimens_to_drugs_drugs", DrugRegimensToDrugs.DRUG_REGIMENS_TO_DRUGS.DRUG_ID);
        public static final ForeignKey<DrugRegimensToFrequencyThresholdRecord, DrugRegimensRecord> DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_DRUG_REGIMENS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMENS, DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD, "drug_regimens_to_frequency_threshold__fk_drug_regimens_to_frequency_threshold_drug_regimens", DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD.DRUG_REGIMEN_ID);
        public static final ForeignKey<DrugRegimensToFrequencyThresholdRecord, DrugRegimenFrequencyThresholdRecord> DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD__FK_DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD_THRESHOLDS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUG_REGIMEN_FREQUENCY_THRESHOLD, DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD, "drug_regimens_to_frequency_threshold__fk_drug_regimens_to_frequency_threshold_thresholds", DrugRegimensToFrequencyThreshold.DRUG_REGIMENS_TO_FREQUENCY_THRESHOLD.THRESHOLD_ID);
        public static final ForeignKey<DrugRoutesRecord, DrugsRecord> DRUG_ROUTES__FK_DRUG_ROUTES_TO_DRUGS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_DRUGS, DrugRoutes.DRUG_ROUTES, "drug_routes__fk_drug_routes_to_drugs", DrugRoutes.DRUG_ROUTES.DRUG_ID);
        public static final ForeignKey<PersonsMeaslesClearancesRecord, PersonsRecord> PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES, "persons_measles_clearances__fk_persons_measles_clearances_persons", PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES.PERSON_ID);
        public static final ForeignKey<PersonsMeaslesClearancesRecord, MeaslesClearancesRecord> PERSONS_MEASLES_CLEARANCES__FK_PERSONS_MEASLES_CLEARANCES_CLEARANCES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_MEASLES_CLEARANCES, PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES, "persons_measles_clearances__fk_persons_measles_clearances_clearances", PersonsMeaslesClearances.PERSONS_MEASLES_CLEARANCES.CLEARANCE_ID);
        public static final ForeignKey<PersonsPendingTbClearancesRecord, PersonsRecord> PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES, "persons_pending_tb_clearances__fk_persons_pending_tb_clearances_persons", PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES.PERSON_ID);
        public static final ForeignKey<PersonsPendingTbClearancesRecord, PendingTbClearancesRecord> PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PENDING_CLEARANCES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PENDING_TB_CLEARANCES, PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES, "persons_pending_tb_clearances__fk_persons_pending_tb_clearances_pending_clearances", PersonsPendingTbClearances.PERSONS_PENDING_TB_CLEARANCES.CLEARANCE_ID);
        public static final ForeignKey<PersonsTbClearancesRecord, PersonsRecord> PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, PersonsTbClearances.PERSONS_TB_CLEARANCES, "persons_tb_clearances__fk_persons_tb_clearances_persons", PersonsTbClearances.PERSONS_TB_CLEARANCES.PERSON_ID);
        public static final ForeignKey<PersonsTbClearancesRecord, TbClearancesRecord> PERSONS_TB_CLEARANCES__FK_PERSONS_TB_CLEARANCES_CLEARANCES = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_TB_CLEARANCES, PersonsTbClearances.PERSONS_TB_CLEARANCES, "persons_tb_clearances__fk_persons_tb_clearances_clearances", PersonsTbClearances.PERSONS_TB_CLEARANCES.CLEARANCE_ID);
        public static final ForeignKey<PersonsToCardsRecord, PersonsRecord> PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, PersonsToCards.PERSONS_TO_CARDS, "persons_to_cards__fk_persons_to_cards_persons", PersonsToCards.PERSONS_TO_CARDS.PERSONID);
        public static final ForeignKey<PersonsToCardsRecord, CardsRecord> PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_CARDS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_CARDS, PersonsToCards.PERSONS_TO_CARDS, "persons_to_cards__fk_persons_to_cards_cards", PersonsToCards.PERSONS_TO_CARDS.CARDID, PersonsToCards.PERSONS_TO_CARDS.CONTAINER);
        public static final ForeignKey<PersonsToUsersRecord, PersonsRecord> PERSONS_TO_USERS__FK_PERSONS_TO_CARDS_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, PersonsToUsers.PERSONS_TO_USERS, "persons_to_users__fk_persons_to_cards_persons", PersonsToUsers.PERSONS_TO_USERS.PERSONID);
        public static final ForeignKey<ProtocolRevisionsRecord, ProtocolsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PROTOCOLS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PROTOCOL, ProtocolRevisions.PROTOCOL_REVISIONS, "protocol_revisions__fk_protocol_revisions_protocols", ProtocolRevisions.PROTOCOL_REVISIONS.PROTOCOL_ID);
        public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_PI_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, ProtocolRevisions.PROTOCOL_REVISIONS, "protocol_revisions__fk_protocol_revisions_pi_persons", ProtocolRevisions.PROTOCOL_REVISIONS.PRINCIPAL_INVESTIGATOR_ID);
        public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI1_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, ProtocolRevisions.PROTOCOL_REVISIONS, "protocol_revisions__fk_protocol_revisions_spi1_persons", ProtocolRevisions.PROTOCOL_REVISIONS.PRINCIPAL_INVESTIGATOR_ID);
        public static final ForeignKey<ProtocolRevisionsRecord, PersonsRecord> PROTOCOL_REVISIONS__FK_PROTOCOL_REVISIONS_SPI2_PERSONS = createForeignKey(org.labkey.wnprc_compliance.model.jooq.Keys.PK_PERSONS, ProtocolRevisions.PROTOCOL_REVISIONS, "protocol_revisions__fk_protocol_revisions_spi2_persons", ProtocolRevisions.PROTOCOL_REVISIONS.PRINCIPAL_INVESTIGATOR_ID);
    }
}
