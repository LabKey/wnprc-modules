/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.wnprc_compliance.model.jooq.Keys;
import org.labkey.wnprc_compliance.model.jooq.WnprcCompliance;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllowedSpecies extends TableImpl<AllowedSpeciesRecord> {

    private static final long serialVersionUID = -379070335;

    /**
     * The reference instance of <code>wnprc_compliance.allowed_species</code>
     */
    public static final AllowedSpecies ALLOWED_SPECIES = new AllowedSpecies();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AllowedSpeciesRecord> getRecordType() {
        return AllowedSpeciesRecord.class;
    }

    /**
     * The column <code>wnprc_compliance.allowed_species.protocol_revision_id</code>.
     */
    public final TableField<AllowedSpeciesRecord, String> PROTOCOL_REVISION_ID = createField("protocol_revision_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.species_classifier</code>.
     */
    public final TableField<AllowedSpeciesRecord, String> SPECIES_CLASSIFIER = createField("species_classifier", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.max_number_of_animals</code>.
     */
    public final TableField<AllowedSpeciesRecord, Integer> MAX_NUMBER_OF_ANIMALS = createField("max_number_of_animals", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.createdby</code>.
     */
    public final TableField<AllowedSpeciesRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.created</code>.
     */
    public final TableField<AllowedSpeciesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.modifiedby</code>.
     */
    public final TableField<AllowedSpeciesRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species.modified</code>.
     */
    public final TableField<AllowedSpeciesRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>wnprc_compliance.allowed_species</code> table reference
     */
    public AllowedSpecies() {
        this("allowed_species", null);
    }

    /**
     * Create an aliased <code>wnprc_compliance.allowed_species</code> table reference
     */
    public AllowedSpecies(String alias) {
        this(alias, ALLOWED_SPECIES);
    }

    private AllowedSpecies(String alias, Table<AllowedSpeciesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AllowedSpecies(String alias, Table<AllowedSpeciesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WnprcCompliance.WNPRC_COMPLIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AllowedSpeciesRecord> getPrimaryKey() {
        return Keys.PK_ALLOWED_SPECIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AllowedSpeciesRecord>> getKeys() {
        return Arrays.<UniqueKey<AllowedSpeciesRecord>>asList(Keys.PK_ALLOWED_SPECIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AllowedSpeciesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AllowedSpeciesRecord, ?>>asList(Keys.ALLOWED_SPECIES__FK_ALLOWED_SPECIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AllowedSpecies as(String alias) {
        return new AllowedSpecies(alias, this);
    }

    /**
     * Rename this table
     */
    public AllowedSpecies rename(String name) {
        return new AllowedSpecies(name, null);
    }
}
