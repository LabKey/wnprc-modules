/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.wnprc_compliance.model.jooq.Keys;
import org.labkey.wnprc_compliance.model.jooq.WnprcCompliance;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsToCardsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsToCards extends TableImpl<PersonsToCardsRecord> {

    private static final long serialVersionUID = 988311007;

    /**
     * The reference instance of <code>wnprc_compliance.persons_to_cards</code>
     */
    public static final PersonsToCards PERSONS_TO_CARDS = new PersonsToCards();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonsToCardsRecord> getRecordType() {
        return PersonsToCardsRecord.class;
    }

    /**
     * The column <code>wnprc_compliance.persons_to_cards.personid</code>.
     */
    public final TableField<PersonsToCardsRecord, String> PERSONID = createField("personid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.cardid</code>.
     */
    public final TableField<PersonsToCardsRecord, String> CARDID = createField("cardid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.container</code>.
     */
    public final TableField<PersonsToCardsRecord, String> CONTAINER = createField("container", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.createdby</code>.
     */
    public final TableField<PersonsToCardsRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.created</code>.
     */
    public final TableField<PersonsToCardsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.modifiedby</code>.
     */
    public final TableField<PersonsToCardsRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_cards.modified</code>.
     */
    public final TableField<PersonsToCardsRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>wnprc_compliance.persons_to_cards</code> table reference
     */
    public PersonsToCards() {
        this("persons_to_cards", null);
    }

    /**
     * Create an aliased <code>wnprc_compliance.persons_to_cards</code> table reference
     */
    public PersonsToCards(String alias) {
        this(alias, PERSONS_TO_CARDS);
    }

    private PersonsToCards(String alias, Table<PersonsToCardsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonsToCards(String alias, Table<PersonsToCardsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WnprcCompliance.WNPRC_COMPLIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonsToCardsRecord> getPrimaryKey() {
        return Keys.PK_PERSONS_TO_CARDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonsToCardsRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonsToCardsRecord>>asList(Keys.PK_PERSONS_TO_CARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonsToCardsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonsToCardsRecord, ?>>asList(Keys.PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_PERSONS, Keys.PERSONS_TO_CARDS__FK_PERSONS_TO_CARDS_CARDS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonsToCards as(String alias) {
        return new PersonsToCards(alias, this);
    }

    /**
     * Rename this table
     */
    public PersonsToCards rename(String name) {
        return new PersonsToCards(name, null);
    }
}
