/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.labkey.wnprc_compliance.model.jooq.tables.Cards;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardsRecord extends UpdatableRecordImpl<CardsRecord> implements Record8<String, Boolean, String, String, Integer, Timestamp, Integer, Timestamp> {

    private static final long serialVersionUID = -1734958470;

    /**
     * Setter for <code>wnprc_compliance.cards.card_id</code>.
     */
    public void setCardId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.card_id</code>.
     */
    public String getCardId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.exempt</code>.
     */
    public void setExempt(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.exempt</code>.
     */
    public Boolean getExempt() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.exempt_reason</code>.
     */
    public void setExemptReason(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.exempt_reason</code>.
     */
    public String getExemptReason() {
        return (String) get(2);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.container</code>.
     */
    public void setContainer(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.container</code>.
     */
    public String getContainer() {
        return (String) get(3);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.createdby</code>.
     */
    public void setCreatedby(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.createdby</code>.
     */
    public Integer getCreatedby() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.modifiedby</code>.
     */
    public void setModifiedby(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.modifiedby</code>.
     */
    public Integer getModifiedby() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>wnprc_compliance.cards.modified</code>.
     */
    public void setModified(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>wnprc_compliance.cards.modified</code>.
     */
    public Timestamp getModified() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Boolean, String, String, Integer, Timestamp, Integer, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, Boolean, String, String, Integer, Timestamp, Integer, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Cards.CARDS.CARD_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field2() {
        return Cards.CARDS.EXEMPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Cards.CARDS.EXEMPT_REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Cards.CARDS.CONTAINER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Cards.CARDS.CREATEDBY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return Cards.CARDS.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Cards.CARDS.MODIFIEDBY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Cards.CARDS.MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getCardId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value2() {
        return getExempt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getExemptReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getContainer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getCreatedby();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getModifiedby();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value1(String value) {
        setCardId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value2(Boolean value) {
        setExempt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value3(String value) {
        setExemptReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value4(String value) {
        setContainer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value5(Integer value) {
        setCreatedby(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value6(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value7(Integer value) {
        setModifiedby(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord value8(Timestamp value) {
        setModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardsRecord values(String value1, Boolean value2, String value3, String value4, Integer value5, Timestamp value6, Integer value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardsRecord
     */
    public CardsRecord() {
        super(Cards.CARDS);
    }

    /**
     * Create a detached, initialised CardsRecord
     */
    public CardsRecord(String cardId, Boolean exempt, String exemptReason, String container, Integer createdby, Timestamp created, Integer modifiedby, Timestamp modified) {
        super(Cards.CARDS);

        set(0, cardId);
        set(1, exempt);
        set(2, exemptReason);
        set(3, container);
        set(4, createdby);
        set(5, created);
        set(6, modifiedby);
        set(7, modified);
    }
}
