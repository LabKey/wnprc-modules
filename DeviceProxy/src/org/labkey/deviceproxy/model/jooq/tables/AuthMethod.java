/**
 * This class is generated by jOOQ
 */
package org.labkey.deviceproxy.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.deviceproxy.model.jooq.Deviceproxy;
import org.labkey.deviceproxy.model.jooq.Keys;
import org.labkey.deviceproxy.model.jooq.tables.records.AuthMethodRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthMethod extends TableImpl<AuthMethodRecord> {

    private static final long serialVersionUID = -113481838;

    /**
     * The reference instance of <code>deviceproxy.auth_method</code>
     */
    public static final AuthMethod AUTH_METHOD = new AuthMethod();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthMethodRecord> getRecordType() {
        return AuthMethodRecord.class;
    }

    /**
     * The column <code>deviceproxy.auth_method.public_key</code>.
     */
    public final TableField<AuthMethodRecord, String> PUBLIC_KEY = createField("public_key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>deviceproxy.auth_method.start_time</code>.
     */
    public final TableField<AuthMethodRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>deviceproxy.auth_method.auth_method</code>.
     */
    public final TableField<AuthMethodRecord, String> AUTH_METHOD_ = createField("auth_method", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>deviceproxy.auth_method</code> table reference
     */
    public AuthMethod() {
        this("auth_method", null);
    }

    /**
     * Create an aliased <code>deviceproxy.auth_method</code> table reference
     */
    public AuthMethod(String alias) {
        this(alias, AUTH_METHOD);
    }

    private AuthMethod(String alias, Table<AuthMethodRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthMethod(String alias, Table<AuthMethodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Deviceproxy.DEVICEPROXY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthMethodRecord> getPrimaryKey() {
        return Keys.PK_AUTH_METHOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthMethodRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthMethodRecord>>asList(Keys.PK_AUTH_METHOD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthMethodRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthMethodRecord, ?>>asList(Keys.AUTH_METHOD__FK_AUTH_METHOD_LEASE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthMethod as(String alias) {
        return new AuthMethod(alias, this);
    }

    /**
     * Rename this table
     */
    public AuthMethod rename(String name) {
        return new AuthMethod(name, null);
    }
}
