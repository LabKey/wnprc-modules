/**
 * This class is generated by jOOQ
 */
package org.labkey.deviceproxy.model.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.labkey.deviceproxy.model.jooq.tables.AuthMethod;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthMethodRecord extends UpdatableRecordImpl<AuthMethodRecord> implements Record3<String, Timestamp, String> {

    private static final long serialVersionUID = 1546062030;

    /**
     * Setter for <code>deviceproxy.auth_method.public_key</code>.
     */
    public void setPublicKey(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>deviceproxy.auth_method.public_key</code>.
     */
    public String getPublicKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>deviceproxy.auth_method.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>deviceproxy.auth_method.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>deviceproxy.auth_method.auth_method</code>.
     */
    public void setAuthMethod(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>deviceproxy.auth_method.auth_method</code>.
     */
    public String getAuthMethod() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, Timestamp, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Timestamp, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Timestamp, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AuthMethod.AUTH_METHOD.PUBLIC_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return AuthMethod.AUTH_METHOD.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AuthMethod.AUTH_METHOD.AUTH_METHOD_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPublicKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getAuthMethod();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthMethodRecord value1(String value) {
        setPublicKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthMethodRecord value2(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthMethodRecord value3(String value) {
        setAuthMethod(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthMethodRecord values(String value1, Timestamp value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthMethodRecord
     */
    public AuthMethodRecord() {
        super(AuthMethod.AUTH_METHOD);
    }

    /**
     * Create a detached, initialised AuthMethodRecord
     */
    public AuthMethodRecord(String publicKey, Timestamp startTime, String authMethod) {
        super(AuthMethod.AUTH_METHOD);

        set(0, publicKey);
        set(1, startTime);
        set(2, authMethod);
    }
}
