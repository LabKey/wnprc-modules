/**
 * This class is generated by jOOQ
 */
package org.labkey.gringotts.model.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.gringotts.model.jooq.Gringotts;
import org.labkey.gringotts.model.jooq.Keys;
import org.labkey.gringotts.model.jooq.tables.records.VaultColumnsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VaultColumns extends TableImpl<VaultColumnsRecord> {

    private static final long serialVersionUID = -87633108;

    /**
     * The reference instance of <code>gringotts.vault_columns</code>
     */
    public static final VaultColumns VAULT_COLUMNS = new VaultColumns();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VaultColumnsRecord> getRecordType() {
        return VaultColumnsRecord.class;
    }

    /**
     * The column <code>gringotts.vault_columns.vaultid</code>.
     */
    public final TableField<VaultColumnsRecord, String> VAULTID = createField("vaultid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_columns.version</code>.
     */
    public final TableField<VaultColumnsRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_columns.columnname</code>.
     */
    public final TableField<VaultColumnsRecord, String> COLUMNNAME = createField("columnname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_columns.type</code>.
     */
    public final TableField<VaultColumnsRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gringotts.vault_columns.columnid</code>.
     */
    public final TableField<VaultColumnsRecord, String> COLUMNID = createField("columnid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>gringotts.vault_columns</code> table reference
     */
    public VaultColumns() {
        this("vault_columns", null);
    }

    /**
     * Create an aliased <code>gringotts.vault_columns</code> table reference
     */
    public VaultColumns(String alias) {
        this(alias, VAULT_COLUMNS);
    }

    private VaultColumns(String alias, Table<VaultColumnsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VaultColumns(String alias, Table<VaultColumnsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gringotts.GRINGOTTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VaultColumnsRecord> getPrimaryKey() {
        return Keys.PK_VAULT_COLUMNS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VaultColumnsRecord>> getKeys() {
        return Arrays.<UniqueKey<VaultColumnsRecord>>asList(Keys.PK_VAULT_COLUMNS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VaultColumns as(String alias) {
        return new VaultColumns(alias, this);
    }

    /**
     * Rename this table
     */
    public VaultColumns rename(String name) {
        return new VaultColumns(name, null);
    }
}
