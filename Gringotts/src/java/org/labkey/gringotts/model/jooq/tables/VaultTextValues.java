/**
 * This class is generated by jOOQ
 */
package org.labkey.gringotts.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.gringotts.model.jooq.Gringotts;
import org.labkey.gringotts.model.jooq.Keys;
import org.labkey.gringotts.model.jooq.tables.records.VaultTextValuesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VaultTextValues extends TableImpl<VaultTextValuesRecord> {

    private static final long serialVersionUID = 869022395;

    /**
     * The reference instance of <code>gringotts.vault_text_values</code>
     */
    public static final VaultTextValues VAULT_TEXT_VALUES = new VaultTextValues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VaultTextValuesRecord> getRecordType() {
        return VaultTextValuesRecord.class;
    }

    /**
     * The column <code>gringotts.vault_text_values.vaultid</code>.
     */
    public final TableField<VaultTextValuesRecord, String> VAULTID = createField("vaultid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_text_values.recordid</code>.
     */
    public final TableField<VaultTextValuesRecord, String> RECORDID = createField("recordid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_text_values.columnid</code>.
     */
    public final TableField<VaultTextValuesRecord, String> COLUMNID = createField("columnid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_text_values.transactionid</code>.
     */
    public final TableField<VaultTextValuesRecord, String> TRANSACTIONID = createField("transactionid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_text_values.value</code>.
     */
    public final TableField<VaultTextValuesRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>gringotts.vault_text_values.effectivedate</code>.
     */
    public final TableField<VaultTextValuesRecord, Timestamp> EFFECTIVEDATE = createField("effectivedate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>gringotts.vault_text_values</code> table reference
     */
    public VaultTextValues() {
        this("vault_text_values", null);
    }

    /**
     * Create an aliased <code>gringotts.vault_text_values</code> table reference
     */
    public VaultTextValues(String alias) {
        this(alias, VAULT_TEXT_VALUES);
    }

    private VaultTextValues(String alias, Table<VaultTextValuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private VaultTextValues(String alias, Table<VaultTextValuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gringotts.GRINGOTTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VaultTextValuesRecord> getPrimaryKey() {
        return Keys.PK_VAULT_TEXT_VALUES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VaultTextValuesRecord>> getKeys() {
        return Arrays.<UniqueKey<VaultTextValuesRecord>>asList(Keys.PK_VAULT_TEXT_VALUES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VaultTextValuesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VaultTextValuesRecord, ?>>asList(Keys.VAULT_TEXT_VALUES__FK_VAULT_TEXT_VALUES_TRANSACTIONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VaultTextValues as(String alias) {
        return new VaultTextValues(alias, this);
    }

    /**
     * Rename this table
     */
    public VaultTextValues rename(String name) {
        return new VaultTextValues(name, null);
    }
}
