/**
 * This class is generated by jOOQ
 */
package org.labkey.gringotts.model.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.gringotts.model.jooq.Gringotts;
import org.labkey.gringotts.model.jooq.Keys;
import org.labkey.gringotts.model.jooq.tables.records.VaultLinksRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VaultLinks extends TableImpl<VaultLinksRecord> {

    private static final long serialVersionUID = -1537079817;

    /**
     * The reference instance of <code>gringotts.vault_links</code>
     */
    public static final VaultLinks VAULT_LINKS = new VaultLinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VaultLinksRecord> getRecordType() {
        return VaultLinksRecord.class;
    }

    /**
     * The column <code>gringotts.vault_links.vaultid1</code>.
     */
    public final TableField<VaultLinksRecord, String> VAULTID1 = createField("vaultid1", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.columnid</code>.
     */
    public final TableField<VaultLinksRecord, String> COLUMNID = createField("columnid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.vaultid2</code>.
     */
    public final TableField<VaultLinksRecord, String> VAULTID2 = createField("vaultid2", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.record1</code>.
     */
    public final TableField<VaultLinksRecord, String> RECORD1 = createField("record1", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.record2</code>.
     */
    public final TableField<VaultLinksRecord, String> RECORD2 = createField("record2", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.transactionid</code>.
     */
    public final TableField<VaultLinksRecord, String> TRANSACTIONID = createField("transactionid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vault_links.islinked</code>.
     */
    public final TableField<VaultLinksRecord, Boolean> ISLINKED = createField("islinked", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>gringotts.vault_links.order</code>.
     */
    public final TableField<VaultLinksRecord, Integer> ORDER = createField("order", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>gringotts.vault_links</code> table reference
     */
    public VaultLinks() {
        this("vault_links", null);
    }

    /**
     * Create an aliased <code>gringotts.vault_links</code> table reference
     */
    public VaultLinks(String alias) {
        this(alias, VAULT_LINKS);
    }

    private VaultLinks(String alias, Table<VaultLinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private VaultLinks(String alias, Table<VaultLinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gringotts.GRINGOTTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VaultLinksRecord> getPrimaryKey() {
        return Keys.PK_VAULT_LINKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VaultLinksRecord>> getKeys() {
        return Arrays.<UniqueKey<VaultLinksRecord>>asList(Keys.PK_VAULT_LINKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VaultLinks as(String alias) {
        return new VaultLinks(alias, this);
    }

    /**
     * Rename this table
     */
    public VaultLinks rename(String name) {
        return new VaultLinks(name, null);
    }
}
