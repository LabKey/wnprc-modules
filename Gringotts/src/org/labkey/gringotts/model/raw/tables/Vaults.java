/**
 * This class is generated by jOOQ
 */
package org.labkey.gringotts.model.raw.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.gringotts.model.raw.Gringotts;
import org.labkey.gringotts.model.raw.Keys;
import org.labkey.gringotts.model.raw.tables.records.VaultsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vaults extends TableImpl<VaultsRecord> {

    private static final long serialVersionUID = -1953105410;

    /**
     * The reference instance of <code>gringotts.vaults</code>
     */
    public static final Vaults VAULTS = new Vaults();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VaultsRecord> getRecordType() {
        return VaultsRecord.class;
    }

    /**
     * The column <code>gringotts.vaults.vaultid</code>.
     */
    public final TableField<VaultsRecord, String> VAULTID = createField("vaultid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vaults.vaultname</code>.
     */
    public final TableField<VaultsRecord, String> VAULTNAME = createField("vaultname", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>gringotts.vaults.createdby</code>.
     */
    public final TableField<VaultsRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gringotts.vaults.created</code>.
     */
    public final TableField<VaultsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gringotts.vaults.modifiedby</code>.
     */
    public final TableField<VaultsRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>gringotts.vaults.modified</code>.
     */
    public final TableField<VaultsRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>gringotts.vaults</code> table reference
     */
    public Vaults() {
        this("vaults", null);
    }

    /**
     * Create an aliased <code>gringotts.vaults</code> table reference
     */
    public Vaults(String alias) {
        this(alias, VAULTS);
    }

    private Vaults(String alias, Table<VaultsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vaults(String alias, Table<VaultsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Gringotts.GRINGOTTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VaultsRecord> getPrimaryKey() {
        return Keys.PK_VAULTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VaultsRecord>> getKeys() {
        return Arrays.<UniqueKey<VaultsRecord>>asList(Keys.PK_VAULTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vaults as(String alias) {
        return new Vaults(alias, this);
    }

    /**
     * Rename this table
     */
    public Vaults rename(String name) {
        return new Vaults(name, null);
    }
}
