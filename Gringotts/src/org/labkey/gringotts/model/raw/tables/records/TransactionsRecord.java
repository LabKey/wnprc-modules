/**
 * This class is generated by jOOQ
 */
package org.labkey.gringotts.model.raw.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.labkey.gringotts.model.raw.tables.Transactions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record3<Timestamp, String, Integer> {

    private static final long serialVersionUID = -1063411140;

    /**
     * Setter for <code>gringotts.transactions.createdon</code>.
     */
    public void setCreatedon(Timestamp value) {
        set(0, value);
    }

    /**
     * Getter for <code>gringotts.transactions.createdon</code>.
     */
    public Timestamp getCreatedon() {
        return (Timestamp) get(0);
    }

    /**
     * Setter for <code>gringotts.transactions.transactionid</code>.
     */
    public void setTransactionid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>gringotts.transactions.transactionid</code>.
     */
    public String getTransactionid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>gringotts.transactions.user</code>.
     */
    public void setUser(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>gringotts.transactions.user</code>.
     */
    public Integer getUser() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Timestamp> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Timestamp, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Timestamp, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field1() {
        return Transactions.TRANSACTIONS.CREATEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Transactions.TRANSACTIONS.TRANSACTIONID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Transactions.TRANSACTIONS.USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value1() {
        return getCreatedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTransactionid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value1(Timestamp value) {
        setCreatedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value2(String value) {
        setTransactionid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord value3(Integer value) {
        setUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionsRecord values(Timestamp value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Timestamp createdon, String transactionid, Integer user) {
        super(Transactions.TRANSACTIONS);

        set(0, createdon);
        set(1, transactionid);
        set(2, user);
    }
}
