/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.wnprc_compliance.model.jooq.Keys;
import org.labkey.wnprc_compliance.model.jooq.WnprcCompliance;
import org.labkey.wnprc_compliance.model.jooq.tables.records.AllowedSpeciesToAllowedSurgeriesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AllowedSpeciesToAllowedSurgeries extends TableImpl<AllowedSpeciesToAllowedSurgeriesRecord> {

    private static final long serialVersionUID = -10559324;

    /**
     * The reference instance of <code>wnprc_compliance.allowed_species_to_allowed_surgeries</code>
     */
    public static final AllowedSpeciesToAllowedSurgeries ALLOWED_SPECIES_TO_ALLOWED_SURGERIES = new AllowedSpeciesToAllowedSurgeries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AllowedSpeciesToAllowedSurgeriesRecord> getRecordType() {
        return AllowedSpeciesToAllowedSurgeriesRecord.class;
    }

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.revision_id</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, String> REVISION_ID = createField("revision_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.species_classifier</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, String> SPECIES_CLASSIFIER = createField("species_classifier", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.surgery_id</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, String> SURGERY_ID = createField("surgery_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.createdby</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.created</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.modifiedby</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.allowed_species_to_allowed_surgeries.modified</code>.
     */
    public final TableField<AllowedSpeciesToAllowedSurgeriesRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>wnprc_compliance.allowed_species_to_allowed_surgeries</code> table reference
     */
    public AllowedSpeciesToAllowedSurgeries() {
        this("allowed_species_to_allowed_surgeries", null);
    }

    /**
     * Create an aliased <code>wnprc_compliance.allowed_species_to_allowed_surgeries</code> table reference
     */
    public AllowedSpeciesToAllowedSurgeries(String alias) {
        this(alias, ALLOWED_SPECIES_TO_ALLOWED_SURGERIES);
    }

    private AllowedSpeciesToAllowedSurgeries(String alias, Table<AllowedSpeciesToAllowedSurgeriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AllowedSpeciesToAllowedSurgeries(String alias, Table<AllowedSpeciesToAllowedSurgeriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WnprcCompliance.WNPRC_COMPLIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AllowedSpeciesToAllowedSurgeriesRecord> getPrimaryKey() {
        return Keys.PK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AllowedSpeciesToAllowedSurgeriesRecord>> getKeys() {
        return Arrays.<UniqueKey<AllowedSpeciesToAllowedSurgeriesRecord>>asList(Keys.PK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AllowedSpeciesToAllowedSurgeriesRecord, ?>>asList(Keys.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SPECIES, Keys.ALLOWED_SPECIES_TO_ALLOWED_SURGERIES__FK_ALLOWED_SPECIES_TO_ALLOWED_SURGERIES_SURGERIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AllowedSpeciesToAllowedSurgeries as(String alias) {
        return new AllowedSpeciesToAllowedSurgeries(alias, this);
    }

    /**
     * Rename this table
     */
    public AllowedSpeciesToAllowedSurgeries rename(String name) {
        return new AllowedSpeciesToAllowedSurgeries(name, null);
    }
}
