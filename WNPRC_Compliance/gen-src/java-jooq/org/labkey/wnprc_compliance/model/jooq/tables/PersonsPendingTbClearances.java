/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.wnprc_compliance.model.jooq.Keys;
import org.labkey.wnprc_compliance.model.jooq.WnprcCompliance;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsPendingTbClearancesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsPendingTbClearances extends TableImpl<PersonsPendingTbClearancesRecord> {

    private static final long serialVersionUID = -1001416204;

    /**
     * The reference instance of <code>wnprc_compliance.persons_pending_tb_clearances</code>
     */
    public static final PersonsPendingTbClearances PERSONS_PENDING_TB_CLEARANCES = new PersonsPendingTbClearances();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonsPendingTbClearancesRecord> getRecordType() {
        return PersonsPendingTbClearancesRecord.class;
    }

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.person_id</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, String> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.clearance_id</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, String> CLEARANCE_ID = createField("clearance_id", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.container</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, String> CONTAINER = createField("container", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.createdby</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.created</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.modifiedby</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_pending_tb_clearances.modified</code>.
     */
    public final TableField<PersonsPendingTbClearancesRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>wnprc_compliance.persons_pending_tb_clearances</code> table reference
     */
    public PersonsPendingTbClearances() {
        this("persons_pending_tb_clearances", null);
    }

    /**
     * Create an aliased <code>wnprc_compliance.persons_pending_tb_clearances</code> table reference
     */
    public PersonsPendingTbClearances(String alias) {
        this(alias, PERSONS_PENDING_TB_CLEARANCES);
    }

    private PersonsPendingTbClearances(String alias, Table<PersonsPendingTbClearancesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonsPendingTbClearances(String alias, Table<PersonsPendingTbClearancesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WnprcCompliance.WNPRC_COMPLIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonsPendingTbClearancesRecord> getPrimaryKey() {
        return Keys.PK_PERSONS_PENDING_TB_CLEARANCES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonsPendingTbClearancesRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonsPendingTbClearancesRecord>>asList(Keys.PK_PERSONS_PENDING_TB_CLEARANCES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonsPendingTbClearancesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonsPendingTbClearancesRecord, ?>>asList(Keys.PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PERSONS, Keys.PERSONS_PENDING_TB_CLEARANCES__FK_PERSONS_PENDING_TB_CLEARANCES_PENDING_CLEARANCES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonsPendingTbClearances as(String alias) {
        return new PersonsPendingTbClearances(alias, this);
    }

    /**
     * Rename this table
     */
    public PersonsPendingTbClearances rename(String name) {
        return new PersonsPendingTbClearances(name, null);
    }
}
