/**
 * This class is generated by jOOQ
 */
package org.labkey.wnprc_compliance.model.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.labkey.wnprc_compliance.model.jooq.Keys;
import org.labkey.wnprc_compliance.model.jooq.WnprcCompliance;
import org.labkey.wnprc_compliance.model.jooq.tables.records.PersonsToUsersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsToUsers extends TableImpl<PersonsToUsersRecord> {

    private static final long serialVersionUID = -231660784;

    /**
     * The reference instance of <code>wnprc_compliance.persons_to_users</code>
     */
    public static final PersonsToUsers PERSONS_TO_USERS = new PersonsToUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PersonsToUsersRecord> getRecordType() {
        return PersonsToUsersRecord.class;
    }

    /**
     * The column <code>wnprc_compliance.persons_to_users.personid</code>.
     */
    public final TableField<PersonsToUsersRecord, String> PERSONID = createField("personid", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.userid</code>.
     */
    public final TableField<PersonsToUsersRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.container</code>.
     */
    public final TableField<PersonsToUsersRecord, String> CONTAINER = createField("container", org.jooq.impl.SQLDataType.VARCHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.createdby</code>.
     */
    public final TableField<PersonsToUsersRecord, Integer> CREATEDBY = createField("createdby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.created</code>.
     */
    public final TableField<PersonsToUsersRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.modifiedby</code>.
     */
    public final TableField<PersonsToUsersRecord, Integer> MODIFIEDBY = createField("modifiedby", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>wnprc_compliance.persons_to_users.modified</code>.
     */
    public final TableField<PersonsToUsersRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>wnprc_compliance.persons_to_users</code> table reference
     */
    public PersonsToUsers() {
        this("persons_to_users", null);
    }

    /**
     * Create an aliased <code>wnprc_compliance.persons_to_users</code> table reference
     */
    public PersonsToUsers(String alias) {
        this(alias, PERSONS_TO_USERS);
    }

    private PersonsToUsers(String alias, Table<PersonsToUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private PersonsToUsers(String alias, Table<PersonsToUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return WnprcCompliance.WNPRC_COMPLIANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PersonsToUsersRecord> getPrimaryKey() {
        return Keys.PK_PERSONS_TO_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PersonsToUsersRecord>> getKeys() {
        return Arrays.<UniqueKey<PersonsToUsersRecord>>asList(Keys.PK_PERSONS_TO_USERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PersonsToUsersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PersonsToUsersRecord, ?>>asList(Keys.PERSONS_TO_USERS__FK_PERSONS_TO_CARDS_PERSONS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PersonsToUsers as(String alias) {
        return new PersonsToUsers(alias, this);
    }

    /**
     * Rename this table
     */
    public PersonsToUsers rename(String name) {
        return new PersonsToUsers(name, null);
    }
}
