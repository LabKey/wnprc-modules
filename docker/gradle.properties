#moduleSet=all
#ideaIncludeAllModules=true
# Uncomment the following line to turn on Gradle's file watching, which may improve efficiency
# https://blog.gradle.org/introducing-file-system-watching
#org.gradle.vfs.watch=true
# This controls Gradle's build cache, which improves efficiency.
# https://docs.gradle.org/current/userguide/build_cache.html
org.gradle.caching=true
# comment out or use --no-parallel to turn off parallel execution
org.gradle.parallel=true
# comment out and Gradle will attempt to determine the optimal number of executor threads to use
# (this could be memory-intensive)
org.gradle.workers.max=3
# Default to using 2GB of memory for the JVM.
org.gradle.jvmargs=-Xmx2048m

# Set the action to be performed when a version conflict between a dependency included from the build and one that already exists
# is detected. Default behavior on detecting a conflict is to fail. Possible values are delete, fail, warn.
# The value 'delete' will cause the conflicting version(s) in the build directory to be removed.
versionConflictAction=delete

# uncomment the following line for running the application with embedded tomcat
#useEmbeddedTomcat

# uncomment the following line when using a local build of a server with embedded tomcat
#useLocalBuild

# uncomment the following line when using SSL for your embedded tomcat server
#useSsl

# The source and target versions of Java for compilation tasks
# @JavaRuntimeVersion
sourceCompatibility=17
targetCompatibility=17

# indicates if we should use previously published artifacts or build from source
# This setting applies to all projects unless overridden on command line or in a
# project's own gradle.properties file.
buildFromSource=true

# The default version for LabKey artifacts that are built or that we depend on.
# override in an individual module's gradle.properties file as necessary 
labkeyVersion=22.11-SNAPSHOT
labkeyClientApiVersion=4.0.0

gradleNodePluginVersion=3.0.1
gradlePluginsVersion=1.36.1
owaspDependencyCheckPluginVersion=5.2.1
versioningPluginVersion=1.1.2

# Versions of node and npm to use during the build. If set, these versions
# will be downloaded and used. If not set, the existing local installations will be use
# The version of npm corresponds to the given version of node
npmVersion=8.19.3
nodeVersion=16.19.0
nodeRepo=https://nodejs.org/dist
# Directory in a project's build directory where the node binary will be placed
nodeWorkDirectory=.node
# Directory in a project's build directory where the npm binary will be placed
npmWorkDirectory=.node
#yarnVersion=1.16.0
# Directory in a project's build directory where the yarn binary will be placed
#yarnWorkDirectory=.node

# Keep in sync with springBootTomcatVersion below
apacheTomcatVersion=9.0.71

# (mothership) -> json-path -> json-smart -> accessor-smart
# (core) -> graalvm
# tika
asmVersion=9.2

googleApiClientVersion=2.2.0
# Force latest for consistency
googleErrorProneAnnotationsVersion=2.18.0
googleHttpClientGsonVersion=1.42.2
googleHttpClientVersion=1.43.2
googleOauthClientVersion=1.34.1
googleProtocolBufVersion=3.21.5

graalVersion=20.0.0

# Cloud and SequenceAnalysis bring gson in as a transitive dependency.
# We resolve to the later version here to keep things consistent
# Note: Current jclouds seems to require 2.8.9; attempting to upgrade to 2.9.0 cratered the S3 test suite with many
# "java.lang.NoSuchMethodError: 'void com.google.gson.internal.ConstructorConstructor.<init>(java.util.Map)'" errors
gsonVersion=2.8.9

# User variables for access DockerHub
dockerhubUsername=
dockerhubPassword=
