/*
 * Copyright (c) 2011-2016 LabKey Corporation
 *
 * Licensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0
 */

/* EHR_Lookups-11.10-11.20.sql */

/* EHR_Lookups-11.10-11.101.sql */

CREATE SCHEMA ehr_lookups;

-- ----------------------------
-- Table structure for ageclass
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.ageclass;

CREATE TABLE ehr_lookups.ageclass
(
    species varchar(255),
    ageclass int2 DEFAULT NULL,
    min float,
    max float,

    RowId SERIAL NOT NULL,

    CONSTRAINT PK_ageclass PRIMARY KEY (rowId)
)
WITH (OIDS=FALSE);

-- ----------------------------
-- Records of ageclass
-- ----------------------------
INSERT INTO ehr_lookups.ageclass VALUES ('Marmoset', '3', '2', '8', '1');
INSERT INTO ehr_lookups.ageclass VALUES ('Marmoset', '4', '8', null, '2');
INSERT INTO ehr_lookups.ageclass VALUES ('Marmoset', '1', '0', '1', '3');
INSERT INTO ehr_lookups.ageclass VALUES ('Marmoset', '2', '1', '2', '4');
INSERT INTO ehr_lookups.ageclass VALUES ('Rhesus', '2', '1', '4', '5');
INSERT INTO ehr_lookups.ageclass VALUES ('Rhesus', '1', '0', '1', '6');
INSERT INTO ehr_lookups.ageclass VALUES ('Rhesus', '3', '4', '20', '7');
INSERT INTO ehr_lookups.ageclass VALUES ('Rhesus', '4', '20', null, '8');
INSERT INTO ehr_lookups.ageclass VALUES ('Cynomolgus', '3', '5', null, '9');

-- -- ----------------------------
-- -- Table structure for alopecia_area
-- -- ----------------------------
-- DROP TABLE IF EXISTS ehr_lookups.alopecia_area;
-- CREATE TABLE ehr_lookups.alopecia_area (
-- area varchar(4000) NOT NULL,
--
-- CONSTRAINT PK_alopecia_area PRIMARY KEY (area)
-- )
-- WITH (OIDS=FALSE)
--
-- ;
--
-- -- ----------------------------
-- -- Records of alopecia_area
-- -- ----------------------------
-- INSERT INTO ehr_lookups.alopecia_area VALUES ('Generalized');
-- INSERT INTO ehr_lookups.alopecia_area VALUES ('Head');

-- ----------------------------
-- Table structure for alopecia_cause
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.alopecia_cause;
CREATE TABLE ehr_lookups.alopecia_cause (
cause varchar(4000) NOT NULL,

CONSTRAINT PK_alopecia_cause PRIMARY KEY (cause)

)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of alopecia_cause
-- ----------------------------
INSERT INTO ehr_lookups.alopecia_cause VALUES ('Behavioral');
INSERT INTO ehr_lookups.alopecia_cause VALUES ('Medical');
INSERT INTO ehr_lookups.alopecia_cause VALUES ('Both');
INSERT INTO ehr_lookups.alopecia_cause VALUES ('Unknown');


-- ----------------------------
-- Table structure for ehr_lookups.alopecia_score
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.alopecia_score;
CREATE TABLE ehr_lookups.alopecia_score (
score int4  NOT NULL,
meaning varchar(250) DEFAULT NULL,

CONSTRAINT PK_alopecia_score PRIMARY KEY (score)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of alopecia_score
-- ----------------------------
INSERT INTO ehr_lookups.alopecia_score VALUES (0, 'Good haircoat');
INSERT INTO ehr_lookups.alopecia_score VALUES (1, 'Thinning of haircoat, without alopecia');
INSERT INTO ehr_lookups.alopecia_score VALUES (2, 'Few (1-3) small (less than 3cm in diameter) patches of alopecia.');
INSERT INTO ehr_lookups.alopecia_score VALUES (3, '1-2 large (greater than 3cm in diameter) or numerous (> 3) small patches.  *One portion of limb (ie. upper arm, lower leg) is equivalent to large patch');
INSERT INTO ehr_lookups.alopecia_score VALUES (4, 'Greater than 2 large patches or generalized alopecia');
INSERT INTO ehr_lookups.alopecia_score VALUES (5, 'More than 90% of body completely bald');



-- ----------------------------
-- Table structure for arearooms
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.arearooms;
CREATE TABLE ehr_lookups.arearooms (
RowId serial NOT NULL,
area varchar(20) NOT NULL,
room varchar(20) NOT NULL,

CONSTRAINT PK_arearooms PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of arearooms
-- ----------------------------
INSERT INTO ehr_lookups.arearooms
(area, room)
VALUES
('SPF', 'ab10'),
('SPF', 'ab11'),
('SPF', 'ab12'),
('NSPF', 'ab14'),
('NSPF', 'ab16'),
('A1/AB190', 'a1'),
('A1/AB190', 'ab190'),
('A2', 'a2'),
('CB', 'cb'),
('C3', 'c3'),
('C4', 'c4'),
('WIMR', 'mr'),
('Chamany', 'cif');

-- ----------------------------
-- Table structure for areas
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.areas;
CREATE TABLE ehr_lookups.areas (
area varchar(20) NOT NULL,

CONSTRAINT PK_areas PRIMARY KEY (area)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of areas
-- ----------------------------
INSERT INTO ehr_lookups.areas VALUES ('Charmany');
INSERT INTO ehr_lookups.areas VALUES ('NSPF');
INSERT INTO ehr_lookups.areas VALUES ('SPF');
INSERT INTO ehr_lookups.areas VALUES ('A2');
INSERT INTO ehr_lookups.areas VALUES ('CB');
INSERT INTO ehr_lookups.areas VALUES ('C3');
INSERT INTO ehr_lookups.areas VALUES ('C4');
INSERT INTO ehr_lookups.areas VALUES ('WIMR');
INSERT INTO ehr_lookups.areas VALUES ('A1/AB190');

-- ----------------------------
-- Table structure for bacteriology_sensitivity
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.bacteriology_sensitivity;
CREATE TABLE ehr_lookups.bacteriology_sensitivity (
code varchar(4000) NOT NULL,
meaning varchar(4000),

CONSTRAINT PK_bacteriology_sensitivity PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of bacteriology_sensitivity
-- ----------------------------
INSERT INTO ehr_lookups.bacteriology_sensitivity VALUES ('i', null);
INSERT INTO ehr_lookups.bacteriology_sensitivity VALUES ('r', 'Resistant');
INSERT INTO ehr_lookups.bacteriology_sensitivity VALUES ('s', 'Sensitive');


-- ----------------------------
-- Table structure for ehr_lookups.bcs_score
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.bcs_score;
CREATE TABLE ehr_lookups.bcs_score (
score float8 NOT NULL,
meaning varchar(250) DEFAULT NULL,
description varchar(500) DEFAULT NULL,

CONSTRAINT PK_bcs_score PRIMARY KEY (score)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of bcs_score
-- ----------------------------
INSERT INTO ehr_lookups.bcs_score VALUES ('1', 'Emaciated', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('1.5', 'Very Thin', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('2', 'Thin', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('2.5', 'Lean', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('3', 'Optimum', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('3.5', 'Slightly Overweight', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('4', 'Heavy', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('4.5', 'Obese', null);
INSERT INTO ehr_lookups.bcs_score VALUES ('5', 'Grossly Obese', null);




-- ----------------------------
-- Table structure for behavior_category
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.behavior_category;
CREATE TABLE ehr_lookups.behavior_category (
category varchar(4000) NOT NULL,

CONSTRAINT PK_behavior_category PRIMARY KEY (category)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of behavior_category
-- ----------------------------
INSERT INTO ehr_lookups.behavior_category VALUES ('Abnormal: SIB');
INSERT INTO ehr_lookups.behavior_category VALUES ('Abnormal: Stereotypy');
INSERT INTO ehr_lookups.behavior_category VALUES ('Social: Pairings');
INSERT INTO ehr_lookups.behavior_category VALUES ('Social: Separations');
INSERT INTO ehr_lookups.behavior_category VALUES ('Social: Monitoring');
INSERT INTO ehr_lookups.behavior_category VALUES ('Other');

-- ----------------------------
-- Table structure for birth_type
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.birth_type;
CREATE TABLE ehr_lookups.birth_type (
type varchar(45) NOT NULL,
meaning text,

CONSTRAINT PK_birth_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of birth_type
-- ----------------------------
INSERT INTO ehr_lookups.birth_type VALUES ('c', null);
INSERT INTO ehr_lookups.birth_type VALUES ('n', null);
INSERT INTO ehr_lookups.birth_type VALUES ('o', null);


-- ----------------------------
-- Table structure for ehr_lookups.cage
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.cage;
CREATE TABLE ehr_lookups.cage (
roomcage varchar(24) NOT NULL,
room varchar(8) DEFAULT NULL,
cage varchar(8) DEFAULT NULL,
length float8 DEFAULT NULL,
width float8 DEFAULT NULL,
height float8 DEFAULT NULL,
ts timestamp(6) DEFAULT NULL,
uuid char(36) DEFAULT NULL,
RowId SERIAL,

CONSTRAINT PK_cage PRIMARY KEY (roomcage)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of cage
-- ----------------------------
INSERT INTO ehr_lookups.cage
(roomcage, room, cage, length, width, height)
VALUES
('-', '', '', '0', '0', '0'),
('a140a-0001', 'a140a', '0001', '24', '36', '72'),
('a140a-0002', 'a140a', '0002', '24', '36', '72'),
('a140a-0003', 'a140a', '0003', '24', '36', '72'),
('a140a-0004', 'a140a', '0004', '24', '36', '72'),
('a140a-0005', 'a140a', '0005', '24', '36', '72'),
('a140a-0006', 'a140a', '0006', '24', '36', '72'),
('a140a-0011', 'a140a', '0011', '24', '24', '72'),
('a140a-0012', 'a140a', '0012', '24', '24', '72'),
('a140a-0013', 'a140a', '0013', '24', '36', '72'),
('a140a-0014', 'a140a', '0014', '24', '36', '72'),
('a140a-0015', 'a140a', '0015', '24', '36', '72'),
('a140a-0016', 'a140a', '0016', '24', '36', '72'),
('a142-0001', 'a142', '0001', '24', '24', '72'),
('a142-0002', 'a142', '0002', '24', '24', '72'),
('a142-0003', 'a142', '0003', '24', '24', '72'),
('a142-0004', 'a142', '0004', '24', '24', '72'),
('a142-0005', 'a142', '0005', '24', '24', '72'),
('a142-0006', 'a142', '0006', '24', '24', '72'),
('a142-0007', 'a142', '0007', '24', '36', '72'),
('a142-0008', 'a142', '0008', '24', '36', '72'),
('a142-0009', 'a142', '0009', '24', '36', '72'),
('a142-0010', 'a142', '0010', '24', '36', '72'),
('a142-0018', 'a142', '0018', '24', '24', '72'),
('a142-0019', 'a142', '0019', '24', '24', '72'),
('a142-0020', 'a142', '0020', '24', '36', '72'),
('a142-0021', 'a142', '0021', '24', '36', '72'),
('a142-0022', 'a142', '0022', '24', '36', '72'),
('a142-0023', 'a142', '0023', '24', '36', '72'),
('a142-0024', 'a142', '0024', '24', '24', '72'),
('a142-0025', 'a142', '0025', '24', '24', '72'),
('a142-0026', 'a142', '0026', '24', '36', '72'),
('a144a-0001', 'a144a', '0001', '24', '36', '72'),
('a144a-0002', 'a144a', '0002', '24', '36', '72'),
('a144a-0003', 'a144a', '0003', '24', '36', '72'),
('a144a-0004', 'a144a', '0004', '24', '36', '72'),
('a144a-0005', 'a144a', '0005', '24', '36', '72'),
('a144a-0006', 'a144a', '0006', '24', '36', '72'),
('a144a-0011', 'a144a', '0011', '24', '24', '72'),
('a144a-0012', 'a144a', '0012', '24', '24', '72'),
('a144a-0013', 'a144a', '0013', '24', '36', '72'),
('a144a-0014', 'a144a', '0014', '24', '36', '72'),
('a144a-0015', 'a144a', '0015', '24', '36', '72'),
('a144a-0016', 'a144a', '0016', '24', '36', '72'),
('a158-0001', 'a158', '0001', '31', '31.25', '33'),
('a158-0002', 'a158', '0002', '31', '31.25', '33'),
('a158-0003', 'a158', '0003', '31', '31.25', '33'),
('a158-0004', 'a158', '0004', '31', '31.25', '33'),
('a158-0005', 'a158', '0005', '31', '31.25', '33'),
('a158-0006', 'a158', '0006', '31', '31.25', '33'),
('a158-0007', 'a158', '0007', '31', '31.25', '33'),
('a158-0008', 'a158', '0008', '31', '31.25', '33'),
('a158-0009', 'a158', '0009', '31', '31.25', '33'),
('a158-0010', 'a158', '0010', '31', '31.25', '33'),
('a158-0011', 'a158', '0011', '31', '31.25', '33'),
('a158-0012', 'a158', '0012', '31', '31.25', '33'),
('a158-0013', 'a158', '0013', '31', '31.25', '33'),
('a158-0014', 'a158', '0014', '31', '31.25', '33'),
('a158-0015', 'a158', '0015', '31', '31.25', '33'),
('a158-0016', 'a158', '0016', '31', '31.25', '33'),
('a161a-pen1', 'a161a', 'pen1', '122', '52', '98.5'),
('a161c-pen1', 'a161c', 'pen1', '122', '52', '98.5'),
('a163a-0001', 'a163a', '0001', '24', '36', '72'),
('a163a-0002', 'a163a', '0002', '24', '36', '72'),
('a163a-0003', 'a163a', '0003', '24', '36', '72'),
('a163a-0004', 'a163a', '0004', '24', '36', '72'),
('a163a-0005', 'a163a', '0005', '24', '24', '72'),
('a163a-0013', 'a163a', '0013', '24', '36', '72'),
('a163a-0014', 'a163a', '0014', '24', '36', '72'),
('a164-0001', 'a164', '0001', '24', '36', '72'),
('a164-0002', 'a164', '0002', '24', '36', '72'),
('a164-0003', 'a164', '0003', '24', '36', '72'),
('a164-0004', 'a164', '0004', '24', '36', '72'),
('a164-0005', 'a164', '0005', '24', '36', '72'),
('a164-0006', 'a164', '0006', '24', '36', '72'),
('a164-0007', 'a164', '0007', '24', '36', '72'),
('a164-0008', 'a164', '0008', '24', '36', '72'),
('a164-0009', 'a164', '0009', '24', '36', '72'),
('a164-0010', 'a164', '0010', '24', '36', '72'),
('a165-0001', 'a165', '0001', '24', '36', '72'),
('a165-0002', 'a165', '0002', '24', '36', '72'),
('a165-0003', 'a165', '0003', '24', '36', '72'),
('a165-0004', 'a165', '0004', '24', '36', '72'),
('a165-0005', 'a165', '0005', '24', '36', '72'),
('a165-0006', 'a165', '0006', '24', '36', '72'),
('a165-0007', 'a165', '0007', '24', '36', '72'),
('a165-0008', 'a165', '0008', '24', '36', '72'),
('a165-0009', 'a165', '0009', '24', '36', '72'),
('a165-0017', 'a165', '0017', '24', '36', '72'),
('a165-0018', 'a165', '0018', '24', '36', '72'),
('a165-0019', 'a165', '0019', '24', '36', '72'),
('a165-0020', 'a165', '0020', '24', '36', '72'),
('a165-0021', 'a165', '0021', '24', '36', '72'),
('a165-0022', 'a165', '0022', '24', '36', '72'),
('a165-0023', 'a165', '0023', '24', '36', '72'),
('a165-0024', 'a165', '0024', '24', '36', '72'),
('a165-0025', 'a165', '0025', '24', '36', '72'),
('a165-0026', 'a165', '0026', '24', '36', '72'),
('a242-0001', 'a242', '0001', '31', '31.25', '33'),
('a242-0002', 'a242', '0002', '31', '31.25', '33'),
('a242-0003', 'a242', '0003', '31', '31.25', '33'),
('a242-0004', 'a242', '0004', '31', '31.25', '33'),
('a242-0005', 'a242', '0005', '33', '40.5', '37.5'),
('a242-0006', 'a242', '0006', '33', '40.5', '37.5'),
('a242-0007', 'a242', '0007', '33', '40.5', '37.5'),
('a242-0008', 'a242', '0008', '33', '40.5', '37.5'),
('a242-0009', 'a242', '0009', '31', '31.25', '33'),
('a242-0010', 'a242', '0010', '31', '31.25', '33'),
('a242-0011', 'a242', '0011', '31', '31.25', '33'),
('a242-0012', 'a242', '0012', '31', '31.25', '33'),
('a242-0013', 'a242', '0013', '31', '31.25', '33'),
('a242-0014', 'a242', '0014', '31', '31.25', '33'),
('a242-0015', 'a242', '0015', '31', '31.25', '33'),
('a242-0016', 'a242', '0016', '31', '31.25', '33'),
('a242-0017', 'a242', '0017', '31', '31.25', '33'),
('a242-0018', 'a242', '0018', '31', '31.25', '33'),
('a242-0019', 'a242', '0019', '31', '31.25', '33'),
('a242-0020', 'a242', '0020', '31', '31.25', '33'),
('a244a-0001', 'a244a', '0001', '31', '31.25', '33'),
('a244a-0002', 'a244a', '0002', '31', '31.25', '33'),
('a244a-0003', 'a244a', '0003', '31', '31.25', '33'),
('a244a-0004', 'a244a', '0004', '31', '31.25', '33'),
('a244a-0005', 'a244a', '0005', '31', '31.25', '33'),
('a244a-0006', 'a244a', '0006', '31', '31.25', '33'),
('a244a-0007', 'a244a', '0007', '31', '31.25', '33'),
('a244a-0008', 'a244a', '0008', '31', '31.25', '33'),
('a244a-0009', 'a244a', '0009', '31', '31.25', '33'),
('a244a-0010', 'a244a', '0010', '31', '31.25', '33'),
('a244a-0011', 'a244a', '0011', '31', '31.25', '33'),
('a244a-0012', 'a244a', '0012', '31', '31.25', '33'),
('a244a-0013', 'a244a', '0013', '31', '31.25', '33'),
('a244a-0014', 'a244a', '0014', '31', '31.25', '33'),
('a244a-0015', 'a244a', '0015', '31', '31.25', '33'),
('a244a-0016', 'a244a', '0016', '31', '31.25', '33'),
('a244b-0001', 'a244b', '0001', '31', '31.25', '33'),
('a244b-0002', 'a244b', '0002', '31', '31.25', '33'),
('a244b-0003', 'a244b', '0003', '24', '28', '30'),
('a244b-0004', 'a244b', '0004', '24', '28', '30'),
('a244b-0005', 'a244b', '0005', '24', '28', '30'),
('a244b-0006', 'a244b', '0006', '24', '28', '30'),
('a244b-0007', 'a244b', '0007', '31', '31.25', '33'),
('a244b-0008', 'a244b', '0008', '31', '31.25', '33'),
('a244b-0009', 'a244b', '0009', '31', '31.25', '33'),
('a244b-0010', 'a244b', '0010', '31', '31.25', '33'),
('a244b-0011', 'a244b', '0011', '31', '31.25', '33'),
('a244b-0012', 'a244b', '0012', '31', '31.25', '33'),
('a244b-0013', 'a244b', '0013', '31', '31.25', '33'),
('a244b-0014', 'a244b', '0014', '31', '31.25', '33'),
('a246-0001', 'a246', '0001', '31', '31.25', '33'),
('a246-0002', 'a246', '0002', '31', '31.25', '33'),
('a246-0003', 'a246', '0003', '31', '31.25', '33'),
('a246-0004', 'a246', '0004', '31', '31.25', '33'),
('a246-0005', 'a246', '0005', '31', '31.25', '33'),
('a246-0006', 'a246', '0006', '31', '31.25', '33'),
('a246-0007', 'a246', '0007', '31', '31.25', '33'),
('a246-0008', 'a246', '0008', '31', '31.25', '33'),
('a246-0009', 'a246', '0009', '31', '31.25', '33'),
('a246-0010', 'a246', '0010', '31', '31.25', '33'),
('a246-0011', 'a246', '0011', '31', '31.25', '33'),
('a246-0012', 'a246', '0012', '31', '31.25', '33'),
('a246-0013', 'a246', '0013', '31', '31.25', '33'),
('a246-0014', 'a246', '0014', '31', '31.25', '33'),
('a246-0015', 'a246', '0015', '31', '31.25', '33'),
('a246-0016', 'a246', '0016', '31', '31.25', '33'),
('a246-0017', 'a246', '0017', '33', '40.5', '37.5'),
('a246-0018', 'a246', '0018', '33', '40.5', '37.5'),
('a246-0019', 'a246', '0019', '33', '40.5', '37.5'),
('a246-0020', 'a246', '0020', '33', '40.5', '37.5'),
('a260-0001', 'a260', '0001', '33', '40.5', '37.5'),
('a260-0002', 'a260', '0002', '33', '40.5', '37.5'),
('a260-0003', 'a260', '0003', '33', '40.5', '37.5'),
('a260-0004', 'a260', '0004', '33', '40.5', '37.5'),
('a260-0005', 'a260', '0005', '31', '31.25', '33'),
('a260-0006', 'a260', '0006', '31', '31.25', '33'),
('a260-0007', 'a260', '0007', '31', '31.25', '33'),
('a260-0008', 'a260', '0008', '31', '31.25', '33'),
('a260-0009', 'a260', '0009', '31', '31.25', '33'),
('a260-0010', 'a260', '0010', '31', '31.25', '33'),
('a260-0011', 'a260', '0011', '31', '31.25', '33'),
('a260-0012', 'a260', '0012', '31', '31.25', '33'),
('a260-0013', 'a260', '0013', '31', '31.25', '33'),
('a260-0014', 'a260', '0014', '31', '31.25', '33'),
('a260-0015', 'a260', '0015', '31', '31.25', '33'),
('a260-0016', 'a260', '0016', '31', '31.25', '33'),
('a260-0017', 'a260', '0017', '31', '31.25', '33'),
('a260-0018', 'a260', '0018', '31', '31.25', '33'),
('a260-0019', 'a260', '0019', '31', '31.25', '33'),
('a260-0020', 'a260', '0020', '31', '31.25', '33'),
('a261-0001', 'a261', '0001', '31', '31.25', '33'),
('a261-0002', 'a261', '0002', '31', '31.25', '33'),
('a261-0003', 'a261', '0003', '31', '31.25', '33'),
('a261-0004', 'a261', '0004', '31', '31.25', '33'),
('a261-0005', 'a261', '0005', '31', '31.25', '33'),
('a261-0006', 'a261', '0006', '31', '31.25', '33'),
('a261-0007', 'a261', '0007', '31', '31.25', '33'),
('a261-0008', 'a261', '0008', '31', '31.25', '33'),
('a261-0009', 'a261', '0009', '31', '31.25', '33'),
('a261-0010', 'a261', '0010', '31', '31.25', '33'),
('a261-0011', 'a261', '0011', '31', '31.25', '33'),
('a261-0012', 'a261', '0012', '31', '31.25', '33'),
('a261-0013', 'a261', '0013', '31', '31.25', '33'),
('a261-0014', 'a261', '0014', '31', '31.25', '33'),
('a261-0015', 'a261', '0015', '31', '31.25', '33'),
('a261-0016', 'a261', '0016', '31', '31.25', '33'),
('a262a-0001', 'a262a', '0001', '31', '31.25', '33'),
('a262a-0002', 'a262a', '0002', '31', '31.25', '33'),
('a262a-0003', 'a262a', '0003', '31', '31.25', '33'),
('a262a-0004', 'a262a', '0004', '31', '31.25', '33'),
('a262a-0005', 'a262a', '0005', '31', '31.25', '33'),
('a262a-0006', 'a262a', '0006', '31', '31.25', '33'),
('a262a-0007', 'a262a', '0007', '31', '31.25', '33'),
('a262a-0008', 'a262a', '0008', '31', '31.25', '33'),
('a262a-0009', 'a262a', '0009', '31', '31.25', '33'),
('a262a-0010', 'a262a', '0010', '31', '31.25', '33'),
('a262a-0011', 'a262a', '0011', '31', '31.25', '33'),
('a262a-0012', 'a262a', '0012', '31', '31.25', '33'),
('a262a-0013', 'a262a', '0013', '31', '31.25', '33'),
('a262a-0014', 'a262a', '0014', '31', '31.25', '33'),
('a262a-0015', 'a262a', '0015', '31', '31.25', '33'),
('a262a-0016', 'a262a', '0016', '31', '31.25', '33'),
('a262b-0001', 'a262b', '0001', '31', '31.25', '33'),
('a262b-0002', 'a262b', '0002', '31', '31.25', '33'),
('a262b-0003', 'a262b', '0003', '31', '31.25', '33'),
('a262b-0004', 'a262b', '0004', '31', '31.25', '33'),
('a262b-0005', 'a262b', '0005', '31', '31.25', '33'),
('a262b-0006', 'a262b', '0006', '31', '31.25', '33'),
('a262b-0007', 'a262b', '0007', '31', '31.25', '33'),
('a262b-0008', 'a262b', '0008', '31', '31.25', '33'),
('a262b-0009', 'a262b', '0009', '31', '31.25', '33'),
('a262b-0010', 'a262b', '0010', '31', '31.25', '33'),
('a262b-0011', 'a262b', '0011', '31', '31.25', '33'),
('a262b-0012', 'a262b', '0012', '31', '31.25', '33'),
('a262b-0013', 'a262b', '0013', '31', '31.25', '33'),
('a262b-0014', 'a262b', '0014', '31', '31.25', '33'),
('a262b-0015', 'a262b', '0015', '31', '31.25', '33'),
('a262b-0016', 'a262b', '0016', '31', '31.25', '33'),
('a263a-0001', 'a263a', '0001', '31', '31.25', '33'),
('a263a-0002', 'a263a', '0002', '31', '31.25', '33'),
('a263a-0003', 'a263a', '0003', '31', '31.25', '33'),
('a263a-0004', 'a263a', '0004', '31', '31.25', '33'),
('a263a-0005', 'a263a', '0005', '31', '31.25', '33'),
('a263a-0006', 'a263a', '0006', '31', '31.25', '33'),
('a263a-0007', 'a263a', '0007', '31', '31.25', '33'),
('a263a-0008', 'a263a', '0008', '31', '31.25', '33'),
('a263a-0009', 'a263a', '0009', '31', '31.25', '33'),
('a263a-0010', 'a263a', '0010', '31', '31.25', '33'),
('a263a-0011', 'a263a', '0011', '31', '31.25', '33'),
('a263a-0012', 'a263a', '0012', '31', '31.25', '33'),
('a263a-0013', 'a263a', '0013', '31', '31.25', '33'),
('a263a-0014', 'a263a', '0014', '31', '31.25', '33'),
('a263a-0015', 'a263a', '0015', '31', '31.25', '33'),
('a263a-0016', 'a263a', '0016', '31', '31.25', '33'),
('a263b-0001', 'a263b', '0001', '31', '31.25', '33'),
('a263b-0002', 'a263b', '0002', '31', '31.25', '33'),
('a263b-0003', 'a263b', '0003', '31', '31.25', '33'),
('a263b-0004', 'a263b', '0004', '31', '31.25', '33'),
('a263b-0005', 'a263b', '0005', '31', '31.25', '33'),
('a263b-0006', 'a263b', '0006', '31', '31.25', '33'),
('a263b-0007', 'a263b', '0007', '31', '31.25', '33'),
('a263b-0008', 'a263b', '0008', '31', '31.25', '33'),
('a263b-0009', 'a263b', '0009', '31', '31.25', '33'),
('a263b-0010', 'a263b', '0010', '31', '31.25', '33'),
('a263b-0011', 'a263b', '0011', '31', '31.25', '33'),
('a263b-0012', 'a263b', '0012', '31', '31.25', '33'),
('a263b-0013', 'a263b', '0013', '31', '31.25', '33'),
('a263b-0014', 'a263b', '0014', '31', '31.25', '33'),
('a263b-0015', 'a263b', '0015', '31', '31.25', '33'),
('a263b-0016', 'a263b', '0016', '31', '31.25', '33'),
('a265-0001', 'a265', '0001', '31', '31.25', '33'),
('a265-0002', 'a265', '0002', '31', '31.25', '33'),
('a265-0003', 'a265', '0003', '31', '31.25', '33'),
('a265-0004', 'a265', '0004', '31', '31.25', '33'),
('a265-0005', 'a265', '0005', '31', '31.25', '33'),
('a265-0006', 'a265', '0006', '31', '31.25', '33'),
('a265-0007', 'a265', '0007', '31', '31.25', '33'),
('a265-0008', 'a265', '0008', '31', '31.25', '33'),
('a265-0009', 'a265', '0009', '31', '31.25', '33'),
('a265-0010', 'a265', '0010', '31', '31.25', '33'),
('a265-0011', 'a265', '0011', '31', '31.25', '33'),
('a265-0012', 'a265', '0012', '31', '31.25', '33'),
('a265-0013', 'a265', '0013', '31', '31.25', '33'),
('a265-0014', 'a265', '0014', '31', '31.25', '33'),
('a265-0015', 'a265', '0015', '31', '31.25', '33'),
('a265-0016', 'a265', '0016', '31', '31.25', '33'),
('a265-0017', 'a265', '0017', '31', '31.25', '33'),
('a265-0018', 'a265', '0018', '31', '31.25', '33'),
('a265-0019', 'a265', '0019', '31', '31.25', '33'),
('a265-0020', 'a265', '0020', '31', '31.25', '33'),
('a270-0001', 'a270', '0001', '31', '31.25', '33'),
('a270-0002', 'a270', '0002', '31', '31.25', '33'),
('a270-0003', 'a270', '0003', '31', '31.25', '33'),
('a270-0004', 'a270', '0004', '31', '31.25', '33'),
('a270-0005', 'a270', '0005', '31', '31.25', '33'),
('a270-0006', 'a270', '0006', '31', '31.25', '33'),
('a270-0007', 'a270', '0007', '31', '31.25', '33'),
('a270-0008', 'a270', '0008', '31', '31.25', '33'),
('a270-0009', 'a270', '0009', '31', '31.25', '33'),
('a270-0010', 'a270', '0010', '31', '31.25', '33'),
('a270-0011', 'a270', '0011', '31', '31.25', '33'),
('a270-0012', 'a270', '0012', '31', '31.25', '33'),
('a270-0013', 'a270', '0013', '31', '31.25', '33'),
('a270-0014', 'a270', '0014', '31', '31.25', '33'),
('a270-0015', 'a270', '0015', '31', '31.25', '33'),
('a270-0016', 'a270', '0016', '31', '31.25', '33'),
('a270-0017', 'a270', '0017', '31', '31.25', '33'),
('a270-0018', 'a270', '0018', '31', '31.25', '33'),
('a270-0019', 'a270', '0019', '31', '31.25', '33'),
('a270-0020', 'a270', '0020', '31', '31.25', '33'),
('a270-0021', 'a270', '0021', '31', '31.25', '33'),
('a270-0022', 'a270', '0022', '31', '31.25', '33'),
('a270-0023', 'a270', '0023', '31', '31.25', '33'),
('a270-0024', 'a270', '0024', '31', '31.25', '33'),
('a271-0001', 'a271', '0001', '31', '31.25', '33'),
('a271-0002', 'a271', '0002', '31', '31.25', '33'),
('a271-0003', 'a271', '0003', '31', '31.25', '33'),
('a271-0004', 'a271', '0004', '31', '31.25', '33'),
('a271-0005', 'a271', '0005', '31', '31.25', '33'),
('a271-0006', 'a271', '0006', '31', '31.25', '33'),
('a271-0007', 'a271', '0007', '31', '31.25', '33'),
('a271-0008', 'a271', '0008', '31', '31.25', '33'),
('a271-0009', 'a271', '0009', '31', '31.25', '33'),
('a271-0010', 'a271', '0010', '31', '31.25', '33'),
('a271-0011', 'a271', '0011', '31', '31.25', '33'),
('a271-0012', 'a271', '0012', '31', '31.25', '33'),
('a271-0013', 'a271', '0013', '31', '31.25', '33'),
('a271-0014', 'a271', '0014', '31', '31.25', '33'),
('a271-0015', 'a271', '0015', '31', '31.25', '33'),
('a271-0016', 'a271', '0016', '31', '31.25', '33'),
('a271-0017', 'a271', '0017', '31', '31.25', '33'),
('a271-0018', 'a271', '0018', '31', '31.25', '33'),
('a271-0019', 'a271', '0019', '31', '31.25', '33'),
('a271-0020', 'a271', '0020', '31', '31.25', '33'),
('a271-0021', 'a271', '0021', '31', '31.25', '33'),
('a271-0022', 'a271', '0022', '31', '31.25', '33'),
('a271-0023', 'a271', '0023', '31', '31.25', '33'),
('a271-0024', 'a271', '0024', '31', '31.25', '33'),
('a272-0001', 'a272', '0001', '31', '31.25', '33'),
('a272-0002', 'a272', '0002', '31', '31.25', '33'),
('a272-0003', 'a272', '0003', '31', '31.25', '33'),
('a272-0004', 'a272', '0004', '31', '31.25', '33'),
('a272-0005', 'a272', '0005', '31', '31.25', '33'),
('a272-0006', 'a272', '0006', '31', '31.25', '33'),
('a272-0007', 'a272', '0007', '31', '31.25', '33'),
('a272-0008', 'a272', '0008', '31', '31.25', '33'),
('a272-0009', 'a272', '0009', '31', '31.25', '33'),
('a272-0010', 'a272', '0010', '31', '31.25', '33'),
('a272-0011', 'a272', '0011', '31', '31.25', '33'),
('a272-0012', 'a272', '0012', '31', '31.25', '33'),
('a272-0013', 'a272', '0013', '31', '31.25', '33'),
('a272-0014', 'a272', '0014', '31', '31.25', '33'),
('a272-0015', 'a272', '0015', '31', '31.25', '33'),
('a272-0016', 'a272', '0016', '31', '31.25', '33'),
('a272-0017', 'a272', '0017', '31', '31.25', '33'),
('a272-0018', 'a272', '0018', '31', '31.25', '33'),
('a272-0019', 'a272', '0019', '31', '31.25', '33'),
('a272-0020', 'a272', '0020', '31', '31.25', '33'),
('a272-0021', 'a272', '0021', '31', '31.25', '33'),
('a272-0022', 'a272', '0022', '31', '31.25', '33'),
('a272-0023', 'a272', '0023', '31', '31.25', '33'),
('a272-0024', 'a272', '0024', '31', '31.25', '33'),
('a274-0001', 'a274', '0001', '31', '31.25', '33'),
('a274-0002', 'a274', '0002', '31', '31.25', '33'),
('a274-0003', 'a274', '0003', '31', '31.25', '33'),
('a274-0004', 'a274', '0004', '31', '31.25', '33'),
('a274-0005', 'a274', '0005', '31', '31.25', '33'),
('a274-0006', 'a274', '0006', '31', '31.25', '33'),
('a274-0007', 'a274', '0007', '31', '31.25', '33'),
('a274-0008', 'a274', '0008', '31', '31.25', '33'),
('a274-0009', 'a274', '0009', '31', '31.25', '33'),
('a274-0010', 'a274', '0010', '31', '31.25', '33'),
('a274-0011', 'a274', '0011', '31', '31.25', '33'),
('a274-0012', 'a274', '0012', '31', '31.25', '33'),
('a274-0013', 'a274', '0013', '31', '31.25', '33'),
('a274-0014', 'a274', '0014', '31', '31.25', '33'),
('a274-0015', 'a274', '0015', '31', '31.25', '33'),
('a274-0016', 'a274', '0016', '31', '31.25', '33'),
('a274-0017', 'a274', '0017', '31', '31.25', '33'),
('a274-0018', 'a274', '0018', '31', '31.25', '33'),
('a274-0019', 'a274', '0019', '31', '31.25', '33'),
('a274-0020', 'a274', '0020', '31', '31.25', '33'),
('a274-0021', 'a274', '0021', '31', '31.25', '33'),
('a274-0022', 'a274', '0022', '31', '31.25', '33'),
('a274-0023', 'a274', '0023', '31', '31.25', '33'),
('a274-0024', 'a274', '0024', '31', '31.25', '33'),
('a275-0001', 'a275', '0001', '31', '31.25', '33'),
('a275-0002', 'a275', '0002', '31', '31.25', '33'),
('a275-0003', 'a275', '0003', '31', '31.25', '33'),
('a275-0004', 'a275', '0004', '31', '31.25', '33'),
('a275-0005', 'a275', '0005', '31', '31.25', '33'),
('a275-0006', 'a275', '0006', '31', '31.25', '33'),
('a275-0007', 'a275', '0007', '31', '31.25', '33'),
('a275-0008', 'a275', '0008', '31', '31.25', '33'),
('a275-0009', 'a275', '0009', '31', '31.25', '33'),
('a275-0010', 'a275', '0010', '31', '31.25', '33'),
('a275-0011', 'a275', '0011', '31', '31.25', '33'),
('a275-0012', 'a275', '0012', '31', '31.25', '33'),
('a275-0013', 'a275', '0013', '31', '31.25', '33'),
('a275-0014', 'a275', '0014', '31', '31.25', '33'),
('a275-0015', 'a275', '0015', '31', '31.25', '33'),
('a275-0016', 'a275', '0016', '31', '31.25', '33'),
('a275-0017', 'a275', '0017', '31', '31.25', '33'),
('a275-0018', 'a275', '0018', '31', '31.25', '33'),
('a275-0019', 'a275', '0019', '31', '31.25', '33'),
('a275-0020', 'a275', '0020', '31', '31.25', '33'),
('a275-0021', 'a275', '0021', '31', '31.25', '33'),
('a275-0022', 'a275', '0022', '31', '31.25', '33'),
('a275-0023', 'a275', '0023', '31', '31.25', '33'),
('a275-0024', 'a275', '0024', '31', '31.25', '33'),
('ab108-0001', 'ab108', '0001', '27', '32', '32'),
('ab108-0002', 'ab108', '0002', '27', '32', '32'),
('ab108-0003', 'ab108', '0003', '27', '32', '32'),
('ab108-0004', 'ab108', '0004', '27', '32', '32'),
('ab108-0005', 'ab108', '0005', '27', '23', '32'),
('ab108-0006', 'ab108', '0006', '27', '23', '32'),
('ab108-0007', 'ab108', '0007', '27', '23', '32'),
('ab108-0008', 'ab108', '0008', '27', '23', '32'),
('ab108-0009', 'ab108', '0009', '27', '23', '32'),
('ab108-0010', 'ab108', '0010', '27', '23', '32'),
('ab108-0011', 'ab108', '0011', '27', '23', '32'),
('ab108-0012', 'ab108', '0012', '27', '23', '32'),
('ab108-0013', 'ab108', '0013', '27', '32', '32'),
('ab108-0014', 'ab108', '0014', '27', '32', '32'),
('ab108-0015', 'ab108', '0015', '27', '32', '32'),
('ab108-0016', 'ab108', '0016', '27', '32', '32'),
('ab108-0017', 'ab108', '0017', '27', '23', '32'),
('ab108-0018', 'ab108', '0018', '27', '23', '32'),
('ab108-0019', 'ab108', '0019', '27', '23', '32'),
('ab108-0020', 'ab108', '0020', '27', '23', '32'),
('ab108-0021', 'ab108', '0021', '27', '23', '32'),
('ab108-0022', 'ab108', '0022', '27', '23', '32'),
('ab108-0023', 'ab108', '0023', '27', '23', '32'),
('ab108-0024', 'ab108', '0024', '27', '23', '32'),
('ab108-0025', 'ab108', '0025', '27', '23', '32'),
('ab108-0026', 'ab108', '0026', '27', '23', '32'),
('ab108-0027', 'ab108', '0027', '27', '23', '32'),
('ab108-0028', 'ab108', '0028', '27', '23', '32'),
('ab108-0029', 'ab108', '0029', '27', '23', '32'),
('ab108-0030', 'ab108', '0030', '27', '23', '32'),
('ab108-0031', 'ab108', '0031', '27', '23', '32'),
('ab108-0032', 'ab108', '0032', '27', '23', '32'),
('ab108-0033', 'ab108', '0033', '27', '32', '32'),
('ab108-0034', 'ab108', '0034', '27', '32', '32'),
('ab108-0035', 'ab108', '0035', '27', '32', '32'),
('ab108-0036', 'ab108', '0036', '27', '32', '32'),
('ab108-0037', 'ab108', '0037', '27', '32', '32'),
('ab108-0038', 'ab108', '0038', '27', '32', '32'),
('ab108-0039', 'ab108', '0039', '27', '32', '32'),
('ab108-0040', 'ab108', '0040', '27', '32', '32'),
('ab108-0041', 'ab108', '0041', '27', '32', '32'),
('ab108-0042', 'ab108', '0042', '27', '32', '32'),
('ab108-0043', 'ab108', '0043', '27', '32', '32'),
('ab108-0044', 'ab108', '0044', '27', '32', '32'),
('ab108-0045', 'ab108', '0045', '27', '32', '32'),
('ab108-0046', 'ab108', '0046', '27', '32', '32'),
('ab108-0047', 'ab108', '0047', '27', '32', '32'),
('ab108-0048', 'ab108', '0048', '27', '32', '32'),
('ab110-0001', 'ab110', '0001', '27', '32', '32'),
('ab110-0002', 'ab110', '0002', '27', '32', '32'),
('ab110-0003', 'ab110', '0003', '27', '32', '32'),
('ab110-0004', 'ab110', '0004', '27', '32', '32'),
('ab110-0005', 'ab110', '0005', '27', '32', '32'),
('ab110-0006', 'ab110', '0006', '27', '32', '32'),
('ab110-0007', 'ab110', '0007', '27', '32', '32'),
('ab110-0008', 'ab110', '0008', '27', '32', '32'),
('ab110-0009', 'ab110', '0009', '27', '23', '32'),
('ab110-0010', 'ab110', '0010', '27', '23', '32'),
('ab110-0011', 'ab110', '0011', '27', '23', '32'),
('ab110-0012', 'ab110', '0012', '27', '23', '32'),
('ab110-0013', 'ab110', '0013', '27', '32', '32'),
('ab110-0014', 'ab110', '0014', '27', '32', '32'),
('ab110-0015', 'ab110', '0015', '27', '32', '32'),
('ab110-0016', 'ab110', '0016', '27', '32', '32'),
('ab110-0017', 'ab110', '0017', '27', '23', '32'),
('ab110-0018', 'ab110', '0018', '27', '23', '32'),
('ab110-0019', 'ab110', '0019', '27', '23', '32'),
('ab110-0020', 'ab110', '0020', '27', '23', '32'),
('ab110-0021', 'ab110', '0021', '27', '23', '32'),
('ab110-0022', 'ab110', '0022', '27', '23', '32'),
('ab110-0023', 'ab110', '0023', '27', '23', '32'),
('ab110-0024', 'ab110', '0024', '27', '23', '32'),
('ab110-0025', 'ab110', '0025', '27', '23', '32'),
('ab110-0026', 'ab110', '0026', '27', '23', '32'),
('ab110-0027', 'ab110', '0027', '27', '23', '32'),
('ab110-0028', 'ab110', '0028', '27', '23', '32'),
('ab110-0029', 'ab110', '0029', '27', '23', '32'),
('ab110-0030', 'ab110', '0030', '27', '23', '32'),
('ab110-0031', 'ab110', '0031', '27', '23', '32'),
('ab110-0032', 'ab110', '0032', '27', '23', '32'),
('ab110-0033', 'ab110', '0033', '27', '32', '32'),
('ab110-0034', 'ab110', '0034', '27', '32', '32'),
('ab110-0035', 'ab110', '0035', '27', '32', '32'),
('ab110-0036', 'ab110', '0036', '27', '32', '32'),
('ab110-0037', 'ab110', '0037', '27', '23', '32'),
('ab110-0038', 'ab110', '0038', '27', '23', '32'),
('ab110-0039', 'ab110', '0039', '27', '23', '32'),
('ab110-0040', 'ab110', '0040', '27', '23', '32'),
('ab110-0041', 'ab110', '0041', '27', '32', '32'),
('ab110-0042', 'ab110', '0042', '27', '32', '32'),
('ab110-0043', 'ab110', '0043', '27', '32', '32'),
('ab110-0044', 'ab110', '0044', '27', '32', '32'),
('ab110-0045', 'ab110', '0045', '27', '32', '32'),
('ab110-0046', 'ab110', '0046', '27', '32', '32'),
('ab110-0047', 'ab110', '0047', '27', '32', '32'),
('ab110-0048', 'ab110', '0048', '27', '32', '32'),
('ab111-0001', 'ab111', '0001', '27', '32', '32'),
('ab111-0002', 'ab111', '0002', '27', '32', '32'),
('ab111-0003', 'ab111', '0003', '27', '32', '32'),
('ab111-0004', 'ab111', '0004', '27', '32', '32'),
('ab111-0005', 'ab111', '0005', '27', '23', '32'),
('ab111-0006', 'ab111', '0006', '27', '23', '32'),
('ab111-0007', 'ab111', '0007', '27', '23', '32'),
('ab111-0008', 'ab111', '0008', '27', '23', '32'),
('ab111-0009', 'ab111', '0009', '27', '23', '32'),
('ab111-0010', 'ab111', '0010', '27', '23', '32'),
('ab111-0011', 'ab111', '0011', '27', '23', '32'),
('ab111-0012', 'ab111', '0012', '27', '23', '32'),
('ab111-0013', 'ab111', '0013', '27', '23', '32'),
('ab111-0014', 'ab111', '0014', '27', '23', '32'),
('ab111-0015', 'ab111', '0015', '27', '23', '32'),
('ab111-0016', 'ab111', '0016', '27', '23', '32'),
('ab111-0017', 'ab111', '0017', '27', '32', '32'),
('ab111-0018', 'ab111', '0018', '27', '32', '32'),
('ab111-0019', 'ab111', '0019', '27', '32', '32'),
('ab111-0020', 'ab111', '0020', '27', '32', '32'),
('ab111-0021', 'ab111', '0021', '27', '32', '32'),
('ab111-0022', 'ab111', '0022', '27', '32', '32'),
('ab111-0023', 'ab111', '0023', '27', '32', '32'),
('ab111-0024', 'ab111', '0024', '27', '32', '32'),
('ab112-0001', 'ab112', '0001', '27.5', '24', '31.5'),
('ab112-0002', 'ab112', '0002', '27.5', '24', '31.5'),
('ab112-0003', 'ab112', '0003', '27.5', '24', '31.5'),
('ab112-0004', 'ab112', '0004', '27.5', '24', '31.5'),
('ab112-0005', 'ab112', '0005', '27.5', '24', '31.5'),
('ab112-0006', 'ab112', '0006', '27.5', '24', '31.5'),
('ab112-0007', 'ab112', '0007', '27.5', '24', '31.5'),
('ab112-0008', 'ab112', '0008', '27.5', '24', '31.5'),
('ab112-0009', 'ab112', '0009', '27.5', '24', '31.5'),
('ab112-0010', 'ab112', '0010', '27.5', '24', '31.5'),
('ab112-0011', 'ab112', '0011', '27.5', '24', '31.5'),
('ab112-0012', 'ab112', '0012', '27.5', '24', '31.5'),
('ab112-0013', 'ab112', '0013', '27.5', '24', '31.5'),
('ab112-0014', 'ab112', '0014', '27.5', '24', '31.5'),
('ab112-0015', 'ab112', '0015', '27.5', '24', '31.5'),
('ab112-0016', 'ab112', '0016', '27.5', '24', '31.5'),
('ab113-0001', 'ab113', '0001', '27.5', '24', '31.5'),
('ab113-0002', 'ab113', '0002', '27.5', '24', '31.5'),
('ab113-0003', 'ab113', '0003', '27.5', '24', '31.5'),
('ab113-0004', 'ab113', '0004', '27.5', '24', '31.5'),
('ab113-0005', 'ab113', '0005', '27.5', '24', '31.5'),
('ab113-0006', 'ab113', '0006', '27.5', '24', '31.5'),
('ab113-0007', 'ab113', '0007', '27.5', '24', '31.5'),
('ab113-0008', 'ab113', '0008', '27.5', '24', '31.5'),
('ab113-0009', 'ab113', '0009', '27.5', '24', '31.5'),
('ab113-0010', 'ab113', '0010', '27.5', '24', '31.5'),
('ab113-0011', 'ab113', '0011', '27.5', '24', '31.5'),
('ab113-0012', 'ab113', '0012', '27.5', '24', '31.5'),
('ab113-0013', 'ab113', '0013', '27.5', '24', '31.5'),
('ab113-0014', 'ab113', '0014', '27.5', '24', '31.5'),
('ab113-0015', 'ab113', '0015', '27.5', '24', '31.5'),
('ab113-0016', 'ab113', '0016', '27.5', '24', '31.5'),
('ab113-0017', 'ab113', '0017', '27.5', '24', '31.5'),
('ab113-0018', 'ab113', '0018', '27.5', '24', '31.5'),
('ab113-0019', 'ab113', '0019', '27.5', '24', '31.5'),
('ab113-0020', 'ab113', '0020', '27.5', '24', '31.5'),
('ab113-0021', 'ab113', '0021', '27.5', '24', '31.5'),
('ab113-0022', 'ab113', '0022', '27.5', '24', '31.5'),
('ab113-0023', 'ab113', '0023', '27.5', '24', '31.5'),
('ab113-0024', 'ab113', '0024', '27.5', '24', '31.5'),
('ab117-0001', 'ab117', '0001', '27', '32', '32'),
('ab117-0002', 'ab117', '0002', '27', '32', '32'),
('ab117-0003', 'ab117', '0003', '27', '32', '32'),
('ab117-0004', 'ab117', '0004', '27', '32', '32'),
('ab117-0005', 'ab117', '0005', '27', '32', '32'),
('ab117-0006', 'ab117', '0006', '27', '32', '32'),
('ab117-0007', 'ab117', '0007', '27', '32', '32'),
('ab117-0008', 'ab117', '0008', '27', '32', '32'),
('ab117-0009', 'ab117', '0009', '27', '23', '32'),
('ab117-0010', 'ab117', '0010', '27', '23', '32'),
('ab117-0011', 'ab117', '0011', '27', '23', '32'),
('ab117-0012', 'ab117', '0012', '27', '23', '32'),
('ab117-0013', 'ab117', '0013', '27', '32', '32'),
('ab117-0014', 'ab117', '0014', '27', '32', '32'),
('ab117-0015', 'ab117', '0015', '27', '32', '32'),
('ab117-0016', 'ab117', '0016', '27', '32', '32'),
('ab117-0017', 'ab117', '0017', '27', '32', '32'),
('ab117-0018', 'ab117', '0018', '27', '32', '32'),
('ab117-0019', 'ab117', '0019', '27', '32', '32'),
('ab117-0020', 'ab117', '0020', '27', '32', '32'),
('ab117-0021', 'ab117', '0021', '27', '32', '32'),
('ab117-0022', 'ab117', '0022', '27', '32', '32'),
('ab117-0023', 'ab117', '0023', '27', '32', '32'),
('ab117-0024', 'ab117', '0024', '27', '32', '32'),
('ab118-0001', 'ab118', '0001', '32.875', '33.75', '33.75'),
('ab118-0002', 'ab118', '0002', '32.875', '33.75', '33.75'),
('ab118-0003', 'ab118', '0003', '32.875', '33.75', '33.75'),
('ab118-0004', 'ab118', '0004', '32.875', '33.75', '33.75'),
('ab118-0005', 'ab118', '0005', '32.875', '33.75', '33.75'),
('ab118-0006', 'ab118', '0006', '32.875', '33.75', '33.75'),
('ab118-0007', 'ab118', '0007', '32.875', '33.75', '33.75'),
('ab118-0008', 'ab118', '0008', '32.875', '33.75', '33.75'),
('ab118-0009', 'ab118', '0009', '32.875', '33.75', '33.75'),
('ab118-0010', 'ab118', '0010', '32.875', '33.75', '33.75'),
('ab118-0011', 'ab118', '0011', '32.875', '33.75', '33.75'),
('ab118-0012', 'ab118', '0012', '32.875', '33.75', '33.75'),
('ab118-0013', 'ab118', '0013', '32.875', '33.75', '33.75'),
('ab118-0014', 'ab118', '0014', '32.875', '33.75', '33.75'),
('ab118-0015', 'ab118', '0015', '32.875', '33.75', '33.75'),
('ab118-0016', 'ab118', '0016', '32.875', '33.75', '33.75'),
('ab118-0017', 'ab118', '0017', '32.875', '33.75', '33.75'),
('ab118-0018', 'ab118', '0018', '32.875', '33.75', '33.75'),
('ab118-0019', 'ab118', '0019', '32.875', '33.75', '33.75'),
('ab118-0020', 'ab118', '0020', '32.875', '33.75', '33.75'),
('ab118-0021', 'ab118', '0021', '32.875', '33.75', '33.75'),
('ab118-0022', 'ab118', '0022', '32.875', '33.75', '33.75'),
('ab118-0023', 'ab118', '0023', '32.875', '33.75', '33.75'),
('ab118-0024', 'ab118', '0024', '32.875', '33.75', '33.75'),
('ab118-0025', 'ab118', '0025', '32.875', '33.75', '33.75'),
('ab118-0026', 'ab118', '0026', '32.875', '33.75', '33.75'),
('ab118-0027', 'ab118', '0027', '32.875', '33.75', '33.75'),
('ab118-0028', 'ab118', '0028', '32.875', '33.75', '33.75'),
('ab118-0029', 'ab118', '0029', '32.875', '33.75', '33.75'),
('ab118-0030', 'ab118', '0030', '32.875', '33.75', '33.75'),
('ab118-0031', 'ab118', '0031', '32.875', '33.75', '33.75'),
('ab118-0032', 'ab118', '0032', '32.875', '33.75', '33.75'),
('ab118-0033', 'ab118', '0033', '32.875', '33.75', '33.75'),
('ab118-0034', 'ab118', '0034', '32.875', '33.75', '33.75'),
('ab118-0035', 'ab118', '0035', '32.875', '33.75', '33.75'),
('ab118-0036', 'ab118', '0036', '32.875', '33.75', '33.75'),
('ab118-0037', 'ab118', '0037', '32.875', '33.75', '33.75'),
('ab118-0038', 'ab118', '0038', '32.875', '33.75', '33.75'),
('ab118-0039', 'ab118', '0039', '32.875', '33.75', '33.75'),
('ab118-0040', 'ab118', '0040', '32.875', '33.75', '33.75'),
('ab118-0041', 'ab118', '0041', '32.875', '33.75', '33.75'),
('ab118-0042', 'ab118', '0042', '32.875', '33.75', '33.75'),
('ab118-0043', 'ab118', '0043', '32.875', '33.75', '33.75'),
('ab118-0044', 'ab118', '0044', '32.875', '33.75', '33.75'),
('ab118-0045', 'ab118', '0045', '32.875', '33.75', '33.75'),
('ab118-0046', 'ab118', '0046', '32.875', '33.75', '33.75'),
('ab118-0047', 'ab118', '0047', '32.875', '33.75', '33.75'),
('ab118-0048', 'ab118', '0048', '32.875', '33.75', '33.75'),
('ab119-0001', 'ab119', '0001', '32.875', '33.75', '33.75'),
('ab119-0002', 'ab119', '0002', '32.875', '33.75', '33.75'),
('ab119-0003', 'ab119', '0003', '32.875', '33.75', '33.75'),
('ab119-0004', 'ab119', '0004', '32.875', '33.75', '33.75'),
('ab119-0005', 'ab119', '0005', '32.875', '33.75', '33.75'),
('ab119-0006', 'ab119', '0006', '32.875', '33.75', '33.75'),
('ab119-0007', 'ab119', '0007', '32.875', '33.75', '33.75'),
('ab119-0008', 'ab119', '0008', '32.875', '33.75', '33.75'),
('ab119-0009', 'ab119', '0009', '32.875', '33.75', '33.75'),
('ab119-0010', 'ab119', '0010', '32.875', '33.75', '33.75'),
('ab119-0011', 'ab119', '0011', '32.875', '33.75', '33.75'),
('ab119-0012', 'ab119', '0012', '32.875', '33.75', '33.75'),
('ab119-0013', 'ab119', '0013', '32.875', '33.75', '33.75'),
('ab119-0014', 'ab119', '0014', '32.875', '33.75', '33.75'),
('ab119-0015', 'ab119', '0015', '32.875', '33.75', '33.75'),
('ab119-0016', 'ab119', '0016', '32.875', '33.75', '33.75'),
('ab119-0017', 'ab119', '0017', '32.875', '33.75', '33.75'),
('ab119-0018', 'ab119', '0018', '32.875', '33.75', '33.75'),
('ab119-0019', 'ab119', '0019', '32.875', '33.75', '33.75'),
('ab119-0020', 'ab119', '0020', '32.875', '33.75', '33.75'),
('ab119-0021', 'ab119', '0021', '32.875', '33.75', '33.75'),
('ab119-0022', 'ab119', '0022', '32.875', '33.75', '33.75'),
('ab119-0023', 'ab119', '0023', '32.875', '33.75', '33.75'),
('ab119-0024', 'ab119', '0024', '32.875', '33.75', '33.75'),
('ab119-0025', 'ab119', '0025', '32.875', '33.75', '33.75'),
('ab119-0026', 'ab119', '0026', '32.875', '33.75', '33.75'),
('ab119-0027', 'ab119', '0027', '32.875', '33.75', '33.75'),
('ab119-0028', 'ab119', '0028', '32.875', '33.75', '33.75'),
('ab119-0029', 'ab119', '0029', '32.875', '33.75', '33.75'),
('ab119-0030', 'ab119', '0030', '32.875', '33.75', '33.75'),
('ab119-0031', 'ab119', '0031', '32.875', '33.75', '33.75'),
('ab119-0032', 'ab119', '0032', '32.875', '33.75', '33.75'),
('ab119-0033', 'ab119', '0033', '32.875', '33.75', '33.75'),
('ab119-0034', 'ab119', '0034', '32.875', '33.75', '33.75'),
('ab119-0035', 'ab119', '0035', '32.875', '33.75', '33.75'),
('ab119-0036', 'ab119', '0036', '32.875', '33.75', '33.75'),
('ab119-0037', 'ab119', '0037', '32.875', '33.75', '33.75'),
('ab119-0038', 'ab119', '0038', '32.875', '33.75', '33.75'),
('ab119-0039', 'ab119', '0039', '32.875', '33.75', '33.75'),
('ab119-0040', 'ab119', '0040', '32.875', '33.75', '33.75'),
('ab119-0041', 'ab119', '0041', '32.875', '33.75', '33.75'),
('ab119-0042', 'ab119', '0042', '32.875', '33.75', '33.75'),
('ab119-0043', 'ab119', '0043', '32.875', '33.75', '33.75'),
('ab119-0044', 'ab119', '0044', '32.875', '33.75', '33.75'),
('ab119-0045', 'ab119', '0045', '32.875', '33.75', '33.75'),
('ab119-0046', 'ab119', '0046', '32.875', '33.75', '33.75'),
('ab119-0047', 'ab119', '0047', '32.875', '33.75', '33.75'),
('ab119-0048', 'ab119', '0048', '32.875', '33.75', '33.75'),
('ab119-0049', 'ab119', '0049', '32.875', '33.75', '33.75'),
('ab119-0050', 'ab119', '0050', '32.875', '33.75', '33.75'),
('ab120-0001', 'ab120', '0001', '32.875', '33.75', '33.75'),
('ab120-0002', 'ab120', '0002', '32.875', '33.75', '33.75'),
('ab120-0003', 'ab120', '0003', '32.875', '33.75', '33.75'),
('ab120-0004', 'ab120', '0004', '32.875', '33.75', '33.75'),
('ab120-0005', 'ab120', '0005', '32.875', '33.75', '33.75'),
('ab120-0006', 'ab120', '0006', '32.875', '33.75', '33.75'),
('ab120-0007', 'ab120', '0007', '32.875', '33.75', '33.75'),
('ab120-0008', 'ab120', '0008', '32.875', '33.75', '33.75'),
('ab120-0009', 'ab120', '0009', '32.875', '33.75', '33.75'),
('ab120-0010', 'ab120', '0010', '32.875', '33.75', '33.75'),
('ab120-0011', 'ab120', '0011', '27.25', '29.5', '30.875'),
('ab120-0012', 'ab120', '0012', '27.25', '29.5', '30.875'),
('ab120-0013', 'ab120', '0013', '27.25', '29.5', '30.875'),
('ab120-0014', 'ab120', '0014', '27.25', '29.5', '30.875'),
('ab120-0015', 'ab120', '0015', '27.25', '29.5', '30.875'),
('ab120-0016', 'ab120', '0016', '27.25', '29.5', '30.875'),
('ab120-0017', 'ab120', '0017', '27.25', '29.5', '30.875'),
('ab120-0018', 'ab120', '0018', '27.25', '29.5', '30.875'),
('ab120-0019', 'ab120', '0019', '27.25', '29.5', '30.875'),
('ab120-0020', 'ab120', '0020', '27.25', '29.5', '30.875'),
('ab120-0021', 'ab120', '0021', '27.25', '29.5', '30.875'),
('ab120-0022', 'ab120', '0022', '27.25', '29.5', '30.875'),
('ab120-0023', 'ab120', '0023', '27.25', '29.5', '30.875'),
('ab120-0024', 'ab120', '0024', '27.25', '29.5', '30.875'),
('ab120-0025', 'ab120', '0025', '27.25', '29.5', '30.875'),
('ab120-0026', 'ab120', '0026', '27.25', '29.5', '30.875'),
('ab120-0027', 'ab120', '0027', '27.25', '29.5', '30.875'),
('ab120-0028', 'ab120', '0028', '27.25', '29.5', '30.875'),
('ab120-0029', 'ab120', '0029', '27.25', '29.5', '30.875'),
('ab120-0030', 'ab120', '0030', '27.25', '29.5', '30.875'),
('ab120-0031', 'ab120', '0031', '27.25', '29.5', '30.875'),
('ab120-0032', 'ab120', '0032', '27.25', '29.5', '30.875'),
('ab120-0033', 'ab120', '0033', '27.25', '29.5', '30.875'),
('ab120-0034', 'ab120', '0034', '27.25', '29.5', '30.875'),
('ab120-0035', 'ab120', '0035', '27.25', '29.5', '30.875'),
('ab120-0036', 'ab120', '0036', '27.25', '29.5', '30.875'),
('ab120-0037', 'ab120', '0037', '27.25', '29.5', '30.875'),
('ab120-0038', 'ab120', '0038', '27.25', '29.5', '30.875'),
('ab120-0039', 'ab120', '0039', '27.25', '29.5', '30.875'),
('ab120-0040', 'ab120', '0040', '27.25', '29.5', '30.875'),
('ab120-0041', 'ab120', '0041', '27.25', '29.5', '30.875'),
('ab120-0042', 'ab120', '0042', '27.25', '29.5', '30.875'),
('ab120-0043', 'ab120', '0043', '27.25', '29.5', '30.875'),
('ab120-0044', 'ab120', '0044', '27.25', '29.5', '30.875'),
('ab120-0045', 'ab120', '0045', '27.25', '29.5', '30.875'),
('ab120-0046', 'ab120', '0046', '27.25', '29.5', '30.875'),
('ab126-0001', 'ab126', '0001', '27.5', '24', '30.5'),
('ab126-0002', 'ab126', '0002', '27.5', '24', '30.5'),
('ab126-0003', 'ab126', '0003', '27.5', '24', '30.5'),
('ab126-0004', 'ab126', '0004', '27.5', '24', '30.5'),
('ab126-0005', 'ab126', '0005', '27.5', '24', '30.5'),
('ab126-0006', 'ab126', '0006', '27.5', '24', '30.5'),
('ab126-0007', 'ab126', '0007', '27.5', '24', '30.5'),
('ab126-0008', 'ab126', '0008', '27.5', '24', '30.5'),
('ab140-0001', 'ab140', '0001', '31', '31.25', '33'),
('ab140-0002', 'ab140', '0002', '31', '31.25', '33'),
('ab140-0003', 'ab140', '0003', '31', '31.25', '33'),
('ab140-0004', 'ab140', '0004', '31', '31.25', '33'),
('ab140-0005', 'ab140', '0005', '31', '31.25', '33'),
('ab140-0006', 'ab140', '0006', '31', '31.25', '33'),
('ab140-0007', 'ab140', '0007', '31', '31.25', '33'),
('ab140-0008', 'ab140', '0008', '31', '31.25', '33'),
('ab140-0009', 'ab140', '0009', '31', '31.25', '33'),
('ab140-0010', 'ab140', '0010', '31', '31.25', '33'),
('ab140-0011', 'ab140', '0011', '31', '31.25', '33'),
('ab140-0012', 'ab140', '0012', '31', '31.25', '33'),
('ab140-0013', 'ab140', '0013', '31', '31.25', '33'),
('ab140-0014', 'ab140', '0014', '31', '31.25', '33'),
('ab140-0015', 'ab140', '0015', '31', '31.25', '33'),
('ab140-0016', 'ab140', '0016', '31', '31.25', '33'),
('ab140-0017', 'ab140', '0017', '31', '31.25', '33'),
('ab140-0018', 'ab140', '0018', '31', '31.25', '33'),
('ab140-0019', 'ab140', '0019', '31', '31.25', '33'),
('ab140-0020', 'ab140', '0020', '31', '31.25', '33'),
('ab140-0021', 'ab140', '0021', '31', '31.25', '33'),
('ab140-0022', 'ab140', '0022', '31', '31.25', '33'),
('ab140-0023', 'ab140', '0023', '31', '31.25', '33'),
('ab140-0024', 'ab140', '0024', '31', '31.25', '33'),
('ab142-0001', 'ab142', '0001', '31', '31.25', '33'),
('ab142-0002', 'ab142', '0002', '31', '31.25', '33'),
('ab142-0003', 'ab142', '0003', '31', '31.25', '33'),
('ab142-0004', 'ab142', '0004', '31', '31.25', '33'),
('ab142-0005', 'ab142', '0005', '31', '31.25', '33'),
('ab142-0006', 'ab142', '0006', '31', '31.25', '33'),
('ab142-0007', 'ab142', '0007', '31', '31.25', '33'),
('ab142-0008', 'ab142', '0008', '31', '31.25', '33'),
('ab142-0009', 'ab142', '0009', '31', '31.25', '33'),
('ab142-0010', 'ab142', '0010', '31', '31.25', '33'),
('ab142-0011', 'ab142', '0011', '31', '31.25', '33'),
('ab142-0012', 'ab142', '0012', '31', '31.25', '33'),
('ab142-0013', 'ab142', '0013', '31', '31.25', '33'),
('ab142-0014', 'ab142', '0014', '31', '31.25', '33'),
('ab142-0015', 'ab142', '0015', '31', '31.25', '33'),
('ab142-0016', 'ab142', '0016', '31', '31.25', '33'),
('ab142-0017', 'ab142', '0017', '31', '31.25', '33'),
('ab142-0018', 'ab142', '0018', '31', '31.25', '33'),
('ab142-0019', 'ab142', '0019', '31', '31.25', '33'),
('ab142-0020', 'ab142', '0020', '31', '31.25', '33'),
('ab142-0021', 'ab142', '0021', '31', '31.25', '33'),
('ab142-0022', 'ab142', '0022', '31', '31.25', '33'),
('ab142-0023', 'ab142', '0023', '31', '31.25', '33'),
('ab142-0024', 'ab142', '0024', '31', '31.25', '33'),
('ab144-0001', 'ab144', '0001', '33', '40.5', '37.5'),
('ab144-0002', 'ab144', '0002', '33', '40.5', '37.5'),
('ab144-0003', 'ab144', '0003', '33', '40.5', '37.5'),
('ab144-0004', 'ab144', '0004', '33', '40.5', '37.5'),
('ab144-0005', 'ab144', '0005', '31', '31.25', '33'),
('ab144-0006', 'ab144', '0006', '31', '31.25', '33'),
('ab144-0007', 'ab144', '0007', '31', '31.25', '33'),
('ab144-0008', 'ab144', '0008', '31', '31.25', '33'),
('ab144-0009', 'ab144', '0009', '31', '31.25', '33'),
('ab144-0010', 'ab144', '0010', '31', '31.25', '33'),
('ab144-0011', 'ab144', '0011', '31', '31.25', '33'),
('ab144-0012', 'ab144', '0012', '31', '31.25', '33'),
('ab144-0013', 'ab144', '0013', '31', '31.25', '33'),
('ab144-0014', 'ab144', '0014', '31', '31.25', '33'),
('ab144-0015', 'ab144', '0015', '31', '31.25', '33'),
('ab144-0016', 'ab144', '0016', '31', '31.25', '33'),
('ab144-0017', 'ab144', '0017', '31', '31.25', '33'),
('ab144-0018', 'ab144', '0018', '31', '31.25', '33'),
('ab144-0019', 'ab144', '0019', '31', '31.25', '33'),
('ab144-0020', 'ab144', '0020', '31', '31.25', '33'),
('ab144-0021', 'ab144', '0021', '33', '40.5', '37.5'),
('ab144-0022', 'ab144', '0022', '33', '40.5', '37.5'),
('ab144-0023', 'ab144', '0023', '33', '40.5', '37.5'),
('ab144-0024', 'ab144', '0024', '33', '40.5', '37.5'),
('ab160-0001', 'ab160', '0001', '27.25', '29.5', '30.875'),
('ab160-0002', 'ab160', '0002', '27.25', '29.5', '30.875'),
('ab160-tmp1', 'ab160', 'tmp1', '24', '17.75', '23.75'),
('ab160-tmp2', 'ab160', 'tmp2', '24', '17.75', '23.75'),
('ab160-tmp3', 'ab160', 'tmp3', '24', '17.75', '23.75'),
('ab160-tmp4', 'ab160', 'tmp4', '24', '17.75', '23.75'),
('ab161-0001', 'ab161', '0001', '33', '40.5', '37.5'),
('ab161-0002', 'ab161', '0002', '33', '40.5', '37.5'),
('ab161-0003', 'ab161', '0003', '33', '40.5', '37.5'),
('ab161-0004', 'ab161', '0004', '33', '40.5', '37.5'),
('ab161-0005', 'ab161', '0005', '31', '31.25', '33'),
('ab161-0006', 'ab161', '0006', '31', '31.25', '33'),
('ab161-0007', 'ab161', '0007', '31', '31.25', '33'),
('ab161-0008', 'ab161', '0008', '31', '31.25', '33'),
('ab161-0009', 'ab161', '0009', '31', '31.25', '33'),
('ab161-0010', 'ab161', '0010', '31', '31.25', '33'),
('ab161-0011', 'ab161', '0011', '31', '31.25', '33'),
('ab161-0012', 'ab161', '0012', '31', '31.25', '33'),
('ab161-0013', 'ab161', '0013', '31', '31.25', '33'),
('ab161-0014', 'ab161', '0014', '31', '31.25', '33'),
('ab161-0015', 'ab161', '0015', '31', '31.25', '33'),
('ab161-0016', 'ab161', '0016', '31', '31.25', '33'),
('ab161-0017', 'ab161', '0017', '31', '31.25', '33'),
('ab161-0018', 'ab161', '0018', '31', '31.25', '33'),
('ab161-0019', 'ab161', '0019', '31', '31.25', '33'),
('ab161-0020', 'ab161', '0020', '31', '31.25', '33'),
('ab161-0021', 'ab161', '0021', '31', '31.25', '33'),
('ab161-0022', 'ab161', '0022', '31', '31.25', '33'),
('ab161-0023', 'ab161', '0023', '31', '31.25', '33'),
('ab161-0024', 'ab161', '0024', '31', '31.25', '33'),
('ab163-0001', 'ab163', '0001', '31', '31.24', '33'),
('ab163-0002', 'ab163', '0002', '31', '31.25', '33'),
('ab163-0003', 'ab163', '0003', '31', '31.25', '33'),
('ab163-0004', 'ab163', '0004', '31', '31.25', '33'),
('ab163-0005', 'ab163', '0005', '33', '40.5', '37.5'),
('ab163-0006', 'ab163', '0006', '33', '40.5', '37.5'),
('ab163-0007', 'ab163', '0007', '33', '40.5', '37.5'),
('ab163-0008', 'ab163', '0008', '33', '40.5', '37.5'),
('ab163-0009', 'ab163', '0009', '31', '31.25', '33'),
('ab163-0010', 'ab163', '0010', '31', '31.25', '33'),
('ab163-0011', 'ab163', '0011', '31', '31.25', '33'),
('ab163-0012', 'ab163', '0012', '31', '31.25', '33'),
('ab163-0013', 'ab163', '0013', '31', '31.25', '33'),
('ab163-0014', 'ab163', '0014', '31', '31.25', '33'),
('ab163-0015', 'ab163', '0015', '31', '31.25', '33'),
('ab163-0016', 'ab163', '0016', '31', '31.25', '33'),
('ab163-0017', 'ab163', '0017', '31', '31.25', '33'),
('ab163-0018', 'ab163', '0018', '31', '31.25', '33'),
('ab163-0019', 'ab163', '0019', '31', '31.25', '33'),
('ab163-0020', 'ab163', '0020', '31', '31.25', '33'),
('ab163-0021', 'ab163', '0021', '31', '31.25', '33'),
('ab163-0022', 'ab163', '0022', '31', '31.25', '33'),
('ab163-0023', 'ab163', '0023', '31', '31.25', '33'),
('ab163-0024', 'ab163', '0024', '31', '31.25', '33'),
('ab165-0001', 'ab165', '0001', '33', '40.5', '37.5'),
('ab165-0002', 'ab165', '0002', '33', '40.5', '37.5'),
('ab165-0003', 'ab165', '0003', '33', '40.5', '37.5'),
('ab165-0004', 'ab165', '0004', '33', '40.5', '37.5'),
('ab165-0005', 'ab165', '0005', '31', '31.25', '33'),
('ab165-0006', 'ab165', '0006', '31', '31.25', '33'),
('ab165-0007', 'ab165', '0007', '31', '31.25', '33'),
('ab165-0008', 'ab165', '0008', '31', '31.25', '33'),
('ab165-0009', 'ab165', '0009', '31', '31.25', '33'),
('ab165-0010', 'ab165', '0010', '31', '31.25', '33'),
('ab165-0011', 'ab165', '0011', '31', '31.25', '33'),
('ab165-0012', 'ab165', '0012', '31', '31.25', '33'),
('ab165-0013', 'ab165', '0013', '31', '31.25', '33'),
('ab165-0014', 'ab165', '0014', '31', '31.25', '33'),
('ab165-0015', 'ab165', '0015', '31', '31.25', '33'),
('ab165-0016', 'ab165', '0016', '31', '31.25', '33'),
('ab165-0017', 'ab165', '0017', '31', '31.25', '33'),
('ab165-0018', 'ab165', '0018', '31', '31.25', '33'),
('ab165-0019', 'ab165', '0019', '31', '31.25', '33'),
('ab165-0020', 'ab165', '0020', '31', '31.25', '33'),
('ab165-0021', 'ab165', '0021', '33', '40.5', '37.5'),
('ab165-0022', 'ab165', '0022', '33', '40.5', '37.5'),
('ab165-0023', 'ab165', '0023', '33', '40.5', '37.5'),
('ab165-0024', 'ab165', '0024', '33', '40.5', '37.5'),
('ab167-0001', 'ab167', '0001', '31', '31.25', '33'),
('ab167-0002', 'ab167', '0002', '31', '31.25', '33'),
('ab167-0003', 'ab167', '0003', '31', '31.25', '33'),
('ab167-0004', 'ab167', '0004', '31', '31.25', '33'),
('ab167-0005', 'ab167', '0005', '31', '31.25', '33'),
('ab167-0006', 'ab167', '0006', '31', '31.25', '33'),
('ab167-0007', 'ab167', '0007', '31', '31.25', '33'),
('ab167-0008', 'ab167', '0008', '31', '31.25', '33'),
('ab167-0009', 'ab167', '0009', '31', '31.25', '33'),
('ab167-0010', 'ab167', '0010', '31', '31.25', '33'),
('ab167-0011', 'ab167', '0011', '31', '31.25', '33'),
('ab167-0012', 'ab167', '0012', '31', '31.25', '33'),
('ab167-0013', 'ab167', '0013', '31', '31.25', '33'),
('ab167-0014', 'ab167', '0014', '31', '31.25', '33'),
('ab167-0015', 'ab167', '0015', '31', '31.25', '33'),
('ab167-0016', 'ab167', '0016', '31', '31.25', '33'),
('ab167-0017', 'ab167', '0017', '31', '31.25', '33'),
('ab167-0018', 'ab167', '0018', '31', '31.25', '33'),
('ab167-0019', 'ab167', '0019', '31', '31.25', '33'),
('ab167-0020', 'ab167', '0020', '31', '31.25', '33'),
('ab167-0021', 'ab167', '0021', '31', '31.25', '33'),
('ab167-0022', 'ab167', '0022', '31', '31.25', '33'),
('ab167-0023', 'ab167', '0023', '31', '31.25', '33'),
('ab167-0024', 'ab167', '0024', '31', '31.25', '33'),
('ab190-pen1', 'ab190', 'pen1', '108', '120', '132'),
('b215a-0001', 'b215a', '0001', '27.5', '29', '31'),
('b215a-0002', 'b215a', '0002', '27.5', '29', '31'),
('b215a-0003', 'b215a', '0003', '27.5', '29', '31'),
('b215a-0004', 'b215a', '0004', '27.5', '29', '31'),
('b215a-0005', 'b215a', '0005', '27.5', '29', '31'),
('b215a-0006', 'b215a', '0006', '27.5', '29', '31'),
('b215a-0007', 'b215a', '0007', '27.5', '29', '31'),
('b215a-0008', 'b215a', '0008', '27.5', '29', '31'),
('b215a-0009', 'b215a', '0009', '27.5', '29', '31'),
('b215a-0010', 'b215a', '0010', '27.5', '29', '31'),
('b215a-0011', 'b215a', '0011', '27.5', '29', '31'),
('b215a-0012', 'b215a', '0012', '27.5', '29', '31'),
('b215b-0001', 'b215b', '0001', '27.5', '29', '31'),
('b215b-0002', 'b215b', '0002', '27.5', '29', '31'),
('b215b-0003', 'b215b', '0003', '27.5', '29', '31'),
('b215b-0004', 'b215b', '0004', '27.5', '29', '31'),
('b215b-0005', 'b215b', '0005', '27.5', '29', '31'),
('b215b-0006', 'b215b', '0006', '27.5', '29', '31'),
('b215b-0007', 'b215b', '0007', '27.5', '29', '31'),
('b215b-0008', 'b215b', '0008', '27.5', '29', '31'),
('b215b-0009', 'b215b', '0009', '27.5', '29', '31'),
('b215b-0010', 'b215b', '0010', '27.5', '29', '31'),
('b215b-0011', 'b215b', '0011', '27.5', '29', '31'),
('b215b-0012', 'b215b', '0012', '27.5', '29', '31'),
('b215c-0001', 'b215c', '0001', '27.5', '29', '31'),
('b215c-0002', 'b215c', '0002', '27.5', '29', '31'),
('b215c-0003', 'b215c', '0003', '27.5', '29', '31'),
('b215c-0004', 'b215c', '0004', '27.5', '29', '31'),
('b215c-0005', 'b215c', '0005', '27.5', '29', '31'),
('b215c-0006', 'b215c', '0006', '27.5', '29', '31'),
('b215c-0007', 'b215c', '0007', '27.5', '29', '31'),
('b215c-0008', 'b215c', '0008', '27.5', '29', '31'),
('b215c-0009', 'b215c', '0009', '27.5', '29', '31'),
('b215c-0010', 'b215c', '0010', '27.5', '29', '31'),
('b215c-0011', 'b215c', '0011', '27.5', '29', '31'),
('b215c-0012', 'b215c', '0012', '27.5', '29', '31'),
('c324-0001', 'c324', '0001', '27', '23.75', '30'),
('c324-0002', 'c324', '0002', '27', '23.75', '30'),
('c324-0003', 'c324', '0003', '27', '23.75', '30'),
('c324-0004', 'c324', '0004', '27', '23.75', '30'),
('c324-0005', 'c324', '0005', '27', '23.75', '30'),
('c324-0006', 'c324', '0006', '27', '23.75', '30'),
('c324-0007', 'c324', '0007', '27', '23.75', '30'),
('c324-0008', 'c324', '0008', '27', '23.75', '30'),
('c324-0009', 'c324', '0009', '27', '23.75', '30'),
('c324-0010', 'c324', '0010', '27', '23.75', '30'),
('c327-0001', 'c327', '0001', '34', '34.5', '36.75'),
('c327-0002', 'c327', '0002', '34', '34.5', '36.75'),
('c327-0003', 'c327', '0003', '34', '34.5', '36.75'),
('c327-0004', 'c327', '0004', '34', '34.5', '36.75'),
('c327-0005', 'c327', '0005', '34', '34.5', '36.75'),
('c327-0006', 'c327', '0006', '34', '34.5', '36.75'),
('c327-0007', 'c327', '0007', '34', '34.5', '36.75'),
('c327-0008', 'c327', '0008', '34', '34.5', '36.75'),
('c331-0001', 'c331', '0001', '25', '26.5', '30'),
('c331-0002', 'c331', '0002', '25', '26.5', '30'),
('c331-0003', 'c331', '0003', '25', '26.5', '30'),
('c331-0004', 'c331', '0004', '25', '26.5', '30'),
('c331-0005', 'c331', '0005', '25', '26.5', '30'),
('c331-0006', 'c331', '0006', '25', '26.5', '30'),
('c331-0007', 'c331', '0007', '25', '26.5', '30'),
('c331-0008', 'c331', '0008', '25', '26.5', '30'),
('c331-0009', 'c331', '0009', '25', '26.5', '30'),
('c331-0010', 'c331', '0010', '25', '26.5', '30'),
('c331-0011', 'c331', '0011', '25', '26.5', '30'),
('c331-0012', 'c331', '0012', '25', '26.5', '30'),
('c338-0001', 'c338', '0001', '32.75', '34.5', '33.25'),
('c338-0002', 'c338', '0002', '32.75', '34.5', '33.25'),
('c338-0003', 'c338', '0003', '32.75', '34.5', '33.25'),
('c338-0004', 'c338', '0004', '32.75', '34.5', '33.25'),
('c338-0005', 'c338', '0005', '32.75', '34.5', '33.25'),
('c338-0006', 'c338', '0006', '32.75', '34.5', '33.25'),
('c338-0007', 'c338', '0007', '32.75', '34.5', '33.25'),
('c338-0008', 'c338', '0008', '32.75', '34.5', '33.25'),
('c338-0009', 'c338', '0009', '32.75', '34.5', '33.25'),
('c338-0010', 'c338', '0010', '32.75', '34.5', '33.25'),
('c338-0011', 'c338', '0011', '32.75', '34.5', '33.25'),
('c338-0012', 'c338', '0012', '32.75', '34.5', '33.25'),
('c338-0013', 'c338', '0013', '32.75', '34.5', '33.25'),
('c338-0014', 'c338', '0014', '32.75', '34.5', '33.25'),
('c338-0015', 'c338', '0015', '32.75', '34.5', '33.25'),
('c338-0016', 'c338', '0016', '32.75', '34.5', '33.25'),
('c338-0017', 'c338', '0017', '32.75', '34.5', '33.25'),
('c338-0018', 'c338', '0018', '32.75', '34.5', '33.25'),
('c338-0019', 'c338', '0019', '32.75', '34.5', '33.25'),
('c338-0020', 'c338', '0020', '32.75', '34.5', '33.25'),
('c338-0021', 'c338', '0021', '32.75', '34.5', '33.25'),
('c338-0022', 'c338', '0022', '32.75', '34.5', '33.25'),
('c338-0023', 'c338', '0023', '32.75', '34.5', '33.25'),
('c338-0024', 'c338', '0024', '32.75', '34.5', '33.25'),
('c338-0025', 'c338', '0025', '32.75', '34.5', '33.25'),
('c338-0026', 'c338', '0026', '32.75', '34.5', '33.25'),
('c338-0027', 'c338', '0027', '32.75', '34.5', '33.25'),
('c338-0028', 'c338', '0028', '32.75', '34.5', '33.25'),
('c338-0029', 'c338', '0029', '32.75', '34.5', '33.25'),
('c338-0030', 'c338', '0030', '32.75', '34.5', '33.25'),
('c338-0031', 'c338', '0031', '32.75', '34.5', '33.25'),
('c338-0032', 'c338', '0032', '32.75', '34.5', '33.25'),
('c338-0033', 'c338', '0033', '32.75', '34.5', '33.25'),
('c338-0034', 'c338', '0034', '32.75', '34.5', '33.25'),
('c338-0035', 'c338', '0035', '32.75', '34.5', '33.25'),
('c338-0036', 'c338', '0036', '32.75', '34.5', '33.25'),
('c338-0037', 'c338', '0037', '32.75', '34.5', '33.25'),
('c338-0038', 'c338', '0038', '32.75', '34.5', '33.25'),
('c338-0039', 'c338', '0039', '32.75', '34.5', '33.25'),
('c338-0040', 'c338', '0040', '32.75', '34.5', '33.25'),
('c420-0001', 'c420', '0001', '27.75', '29.625', '30.75'),
('c420-0002', 'c420', '0002', '27.75', '29.625', '30.75'),
('c420-0003', 'c420', '0003', '27.75', '29.625', '30.75'),
('c420-0004', 'c420', '0004', '27.75', '29.625', '30.75'),
('c420-0005', 'c420', '0005', '27.75', '29.625', '30.75'),
('c420-0006', 'c420', '0006', '27.75', '29.625', '30.75'),
('c420-0007', 'c420', '0007', '27.75', '29.625', '30.75'),
('c420-0008', 'c420', '0008', '27.75', '29.625', '30.75'),
('c420-0009', 'c420', '0009', '27.75', '29.625', '30.75'),
('c420-0010', 'c420', '0010', '27.75', '29.625', '30.75'),
('c420-0011', 'c420', '0011', '27.75', '29.625', '30.75'),
('c420-0012', 'c420', '0012', '27.75', '29.625', '30.75'),
('c420-0013', 'c420', '0013', '27.75', '29.625', '30.75'),
('c420-0014', 'c420', '0014', '27.75', '29.625', '30.75'),
('c420-0015', 'c420', '0015', '27.75', '29.625', '30.75'),
('c420-0016', 'c420', '0016', '27.75', '29.625', '30.75'),
('c420-0017', 'c420', '0017', '27.75', '29.625', '30.75'),
('c420-0018', 'c420', '0018', '27.75', '29.625', '30.75'),
('c420-0019', 'c420', '0019', '27.75', '29.625', '30.75'),
('c420-0020', 'c420', '0020', '27.75', '29.625', '30.75'),
('c420-0021', 'c420', '0021', '27.75', '29.625', '30.75'),
('c420-0022', 'c420', '0022', '27.75', '29.625', '30.75'),
('c420-0023', 'c420', '0023', '27.75', '29.625', '30.75'),
('c420-0024', 'c420', '0024', '27.75', '29.625', '30.75'),
('c420-0025', 'c420', '0025', '27.75', '29.625', '30.75'),
('c420-0026', 'c420', '0026', '27.75', '29.625', '30.75'),
('c420-0027', 'c420', '0027', '27.75', '29.625', '30.75'),
('c420-0028', 'c420', '0028', '27.75', '29.625', '30.75'),
('c420-0029', 'c420', '0029', '27.75', '29.625', '30.75'),
('c420-0030', 'c420', '0030', '27.75', '29.625', '30.75'),
('c420-0031', 'c420', '0031', '27.75', '29.625', '30.75'),
('c420-0032', 'c420', '0032', '27.75', '29.625', '30.75'),
('c420-0033', 'c420', '0033', '27.75', '29.625', '30.75'),
('c420-0034', 'c420', '0034', '27.75', '29.625', '30.75'),
('c420-0035', 'c420', '0035', '27.75', '29.625', '30.75'),
('c420-0036', 'c420', '0036', '27.75', '29.625', '30.75'),
('c420-0037', 'c420', '0037', '27.75', '29.625', '30.75'),
('c420-0038', 'c420', '0038', '27.75', '29.625', '30.75'),
('c420-0039', 'c420', '0039', '27.75', '29.625', '30.75'),
('c420-0040', 'c420', '0040', '27.75', '29.625', '30.75'),
('c420-0041', 'c420', '0041', '27.75', '29.625', '30.75'),
('c420-0042', 'c420', '0042', '27.75', '29.625', '30.75'),
('c420-0043', 'c420', '0043', '27.75', '29.625', '30.75'),
('c420-0044', 'c420', '0044', '27.75', '29.625', '30.75'),
('c420-0045', 'c420', '0045', '27.75', '29.625', '30.75'),
('c420-0046', 'c420', '0046', '27.75', '29.625', '30.75'),
('c420-0047', 'c420', '0047', '27.75', '29.625', '30.75'),
('c420-0048', 'c420', '0048', '27.75', '29.625', '30.75'),
('c420-0049', 'c420', '0049', '27.75', '29.625', '30.75'),
('c420-0050', 'c420', '0050', '27.75', '29.625', '30.75'),
('c420-0051', 'c420', '0051', '27.75', '29.625', '30.75'),
('c420-0052', 'c420', '0052', '27.75', '29.625', '30.75'),
('c420-0053', 'c420', '0053', '27.75', '29.625', '30.75'),
('c420-0054', 'c420', '0054', '27.75', '29.625', '30.75'),
('c420-0055', 'c420', '0055', '27.75', '29.625', '30.75'),
('c420-0056', 'c420', '0056', '27.75', '29.625', '30.75'),
('c420-0057', 'c420', '0057', '27.75', '29.625', '30.75'),
('c420-0058', 'c420', '0058', '27.75', '29.625', '30.75'),
('c420-0059', 'c420', '0059', '27.75', '29.625', '30.75'),
('c420-0060', 'c420', '0060', '27.75', '29.625', '30.75'),
('c423-pen7', 'c423', 'pen7', '120', '78', '87'),
('c423-pen8', 'c423', 'pen8', '120', '78', '87'),
('c427-pen5', 'c427', 'pen5', '120', '78', '87'),
('c427-pen6', 'c427', 'pen6', '120', '78', '87'),
('c428c-0001', 'c428c', '0001', '28', '29.5', '31'),
('c428c-0002', 'c428c', '0002', '28', '29.5', '31'),
('c428c-0003', 'c428c', '0003', '28', '29.5', '31'),
('c428c-0004', 'c428c', '0004', '28', '29.5', '31'),
('c428c-0005', 'c428c', '0005', '28', '29.5', '31'),
('c428c-0006', 'c428c', '0006', '28', '29.5', '31'),
('c428c-0007', 'c428c', '0007', '28', '29.5', '31'),
('c428c-0008', 'c428c', '0008', '28', '29.5', '31'),
('c428c-0009', 'c428c', '0009', '28', '29.5', '31'),
('c428c-0010', 'c428c', '0010', '28', '29.5', '31'),
('c428c-0011', 'c428c', '0011', '28', '29.5', '31'),
('c428c-0012', 'c428c', '0012', '28', '29.5', '31'),
('c428c-0013', 'c428c', '0013', '28', '29.5', '31'),
('c428c-0014', 'c428c', '0014', '28', '29.5', '31'),
('c428c-0015', 'c428c', '0015', '28', '29.5', '31'),
('c428c-0016', 'c428c', '0016', '28', '29.5', '31'),
('c431-pen3', 'c431', 'pen3', '120', '78', '87'),
('c431-pen4', 'c431', 'pen4', '120', '78', '87'),
('c435-pen1', 'c435', 'pen1', '120', '78', '87'),
('c435-pen2', 'c435', 'pen2', '120', '78', '87'),
('c436-0001', 'c436', '0001', '33.75', '34.5', '33.75'),
('c436-0002', 'c436', '0002', '33.75', '34.5', '33.75'),
('c436-0003', 'c436', '0003', '33.75', '34.5', '33.75'),
('c436-0004', 'c436', '0004', '33.75', '34.5', '33.75'),
('c436-0005', 'c436', '0005', '33.75', '34.5', '36.75'),
('c436-0006', 'c436', '0006', '33.75', '34.5', '36.75'),
('c436-0007', 'c436', '0007', '33.75', '34.5', '36.75'),
('c436-0008', 'c436', '0008', '33.75', '34.5', '36.75'),
('c436-0009', 'c436', '0009', '33.75', '34.5', '33.75'),
('c436-0010', 'c436', '0010', '33.75', '34.5', '33.75'),
('c436-0011', 'c436', '0011', '33.75', '34.5', '33.75'),
('c436-0012', 'c436', '0012', '33.75', '34.5', '33.75'),
('c436-0013', 'c436', '0013', '33.75', '34.5', '36.75'),
('c436-0014', 'c436', '0014', '33.75', '34.5', '36.75'),
('c436-0015', 'c436', '0015', '33.75', '34.5', '36.75'),
('c436-0016', 'c436', '0016', '33.75', '34.5', '36.75'),
('c436-0017', 'c436', '0017', '33.75', '34.5', '33.75'),
('c436-0018', 'c436', '0018', '33.75', '34.5', '33.75'),
('c436-0019', 'c436', '0019', '33.75', '34.5', '33.75'),
('c436-0020', 'c436', '0020', '33.75', '34.5', '33.75'),
('c436-0021', 'c436', '0021', '33.75', '34.5', '36.75'),
('c436-0022', 'c436', '0022', '33.75', '34.5', '36.75'),
('c436-0023', 'c436', '0023', '33.75', '34.5', '36.75'),
('c436-0024', 'c436', '0024', '33.75', '34.5', '36.75'),
('c436-0025', 'c436', '0025', '33.75', '34.5', '33.75'),
('c436-0026', 'c436', '0026', '33.75', '34.5', '33.75'),
('c436-0027', 'c436', '0027', '33.75', '34.5', '33.75'),
('c436-0028', 'c436', '0028', '33.75', '34.5', '33.75'),
('c436-0029', 'c436', '0029', '33.75', '34.5', '36.75'),
('c436-0030', 'c436', '0030', '33.75', '34.5', '36.75'),
('c436-0031', 'c436', '0031', '33.75', '34.5', '36.75'),
('c436-0032', 'c436', '0032', '33.75', '34.5', '36.75'),
('c436-0033', 'c436', '0033', '33.75', '34.5', '33.75'),
('c436-0034', 'c436', '0034', '33.75', '34.5', '33.75'),
('c436-0035', 'c436', '0035', '33.75', '34.5', '33.75'),
('c436-0036', 'c436', '0036', '33.75', '34.5', '33.75'),
('c436-0037', 'c436', '0037', '33.75', '34.5', '36.75'),
('c436-0038', 'c436', '0038', '33.75', '34.5', '36.75'),
('c436-0039', 'c436', '0039', '33.75', '34.5', '36.75'),
('c436-0040', 'c436', '0040', '33.75', '34.5', '36.75'),
('cb11-0001', 'cb11', '0001', '32.875', '33.75', '33.75'),
('cb11-0002', 'cb11', '0002', '32.875', '33.75', '33.75'),
('cb11-0003', 'cb11', '0003', '32.875', '33.75', '33.75'),
('cb11-0004', 'cb11', '0004', '32.875', '33.75', '33.75'),
('cb11-0005', 'cb11', '0005', '32.875', '33.75', '33.75'),
('cb11-0006', 'cb11', '0006', '32.875', '33.75', '33.75'),
('cb11-0007', 'cb11', '0007', '32.875', '33.75', '33.75'),
('cb11-0008', 'cb11', '0008', '32.875', '33.75', '33.75'),
('cb11-0009', 'cb11', '0009', '32.875', '33.75', '33.75'),
('cb11-0010', 'cb11', '0010', '32.875', '33.75', '33.75'),
('cb11-0011', 'cb11', '0011', '32.875', '33.75', '33.75'),
('cb11-0012', 'cb11', '0012', '32.875', '33.75', '33.75'),
('cb11-0013', 'cb11', '0013', '32.875', '33.75', '33.75'),
('cb11-0014', 'cb11', '0014', '32.875', '33.75', '33.75'),
('cb11-0015', 'cb11', '0015', '32.875', '33.75', '33.75'),
('cb11-0016', 'cb11', '0016', '32.875', '33.75', '33.75'),
('cb11-0017', 'cb11', '0017', '32.875', '33.75', '33.75'),
('cb11-0018', 'cb11', '0018', '32.875', '33.75', '33.75'),
('cb11-0019', 'cb11', '0019', '32.875', '33.75', '33.75'),
('cb11-0020', 'cb11', '0020', '32.875', '33.75', '33.75'),
('cb11-0021', 'cb11', '0021', '32.875', '33.75', '33.75'),
('cb11-0022', 'cb11', '0022', '32.875', '33.75', '33.75'),
('cb11-0023', 'cb11', '0023', '32.875', '33.75', '33.75'),
('cb11-0024', 'cb11', '0024', '32.875', '33.75', '33.75'),
('cb11-0025', 'cb11', '0025', '32.875', '33.75', '33.75'),
('cb11-0026', 'cb11', '0026', '32.875', '33.75', '33.75'),
('cb11-0027', 'cb11', '0027', '32.875', '33.75', '33.75'),
('cb11-0028', 'cb11', '0028', '32.875', '33.75', '33.75'),
('cb11-0029', 'cb11', '0029', '32.875', '33.75', '33.75'),
('cb11-0030', 'cb11', '0030', '32.875', '33.75', '33.75'),
('cb11-0031', 'cb11', '0031', '32.875', '33.75', '33.75'),
('cb11-0032', 'cb11', '0032', '32.875', '33.75', '33.75'),
('cb11-0033', 'cb11', '0033', '32.875', '33.75', '33.75'),
('cb11-0034', 'cb11', '0034', '32.875', '33.75', '33.75'),
('cb11-0035', 'cb11', '0035', '32.875', '33.75', '33.75'),
('cb11-0036', 'cb11', '0036', '32.875', '33.75', '33.75'),
('cb11-0037', 'cb11', '0037', '32.875', '33.75', '33.75'),
('cb11-0038', 'cb11', '0038', '32.875', '33.75', '33.75'),
('cb11-0039', 'cb11', '0039', '32.875', '33.75', '33.75'),
('cb11-0040', 'cb11', '0040', '32.875', '33.75', '33.75'),
('cb11-0041', 'cb11', '0041', '32.875', '33.75', '33.75'),
('cb11-0042', 'cb11', '0042', '32.875', '33.75', '33.75'),
('cb11-0043', 'cb11', '0043', '32.875', '33.75', '33.75'),
('cb11-0044', 'cb11', '0044', '32.875', '33.75', '33.75'),
('cb11-0045', 'cb11', '0045', '32.875', '33.75', '33.75'),
('cb11-0046', 'cb11', '0046', '32.875', '33.75', '33.75'),
('cb11-0047', 'cb11', '0047', '32.875', '33.75', '33.75'),
('cb11-0048', 'cb11', '0048', '32.875', '33.75', '33.75'),
('cb11-0049', 'cb11', '0049', '32.875', '33.75', '33.75'),
('cb11-0050', 'cb11', '0050', '32.875', '33.75', '33.75'),
('cb11-0051', 'cb11', '0051', '32.875', '33.75', '33.75'),
('cb11-0052', 'cb11', '0052', '32.875', '33.75', '33.75'),
('cb11-0053', 'cb11', '0053', '32.875', '33.75', '33.75'),
('cb11-0054', 'cb11', '0054', '32.875', '33.75', '33.75'),
('cb11-0055', 'cb11', '0055', '32.875', '33.75', '33.75'),
('cb11-0056', 'cb11', '0056', '32.875', '33.75', '33.75'),
('cb11-0057', 'cb11', '0057', '32.875', '33.75', '33.75'),
('cb11-0058', 'cb11', '0058', '32.875', '33.75', '33.75'),
('cb11-0059', 'cb11', '0059', '32.875', '33.75', '33.75'),
('cb11-0060', 'cb11', '0060', '32.875', '33.75', '33.75'),
('cb11-0061', 'cb11', '0061', '32.875', '33.75', '33.75'),
('cb11-0062', 'cb11', '0062', '32.875', '33.75', '33.75'),
('cb11-0063', 'cb11', '0063', '32.875', '33.75', '33.75'),
('cb11-0064', 'cb11', '0064', '32.875', '33.75', '33.75'),
('cb11-0065', 'cb11', '0065', '32.875', '33.75', '33.75'),
('cb11-0066', 'cb11', '0066', '32.875', '33.75', '33.75'),
('cb11-0067', 'cb11', '0067', '32.875', '33.75', '33.75'),
('cb11-0068', 'cb11', '0068', '32.875', '33.75', '33.75'),
('cb11-0069', 'cb11', '0069', '32.875', '33.75', '33.75'),
('cb11-0070', 'cb11', '0070', '32.875', '33.75', '33.75'),
('cb11-0071', 'cb11', '0071', '32.875', '33.75', '33.75'),
('cb11-0072', 'cb11', '0072', '32.875', '33.75', '33.75'),
('cb11-0073', 'cb11', '0073', '32.875', '33.75', '33.75'),
('cb11-0074', 'cb11', '0074', '32.875', '33.75', '33.75'),
('cb11-0075', 'cb11', '0075', '32.875', '33.75', '33.75'),
('cb11-0076', 'cb11', '0076', '32.875', '33.75', '33.75'),
('cb11-0077', 'cb11', '0077', '32.875', '33.75', '33.75'),
('cb11-0078', 'cb11', '0078', '32.875', '33.75', '33.75'),
('cb11-0079', 'cb11', '0079', '32.875', '33.75', '33.75'),
('cb11-0080', 'cb11', '0080', '32.875', '33.75', '33.75'),
('cb22-0001', 'cb22', '0001', '33.75', '34.5', '33.75'),
('cb22-0002', 'cb22', '0002', '33.75', '34.5', '33.75'),
('cb22-0003', 'cb22', '0003', '33.75', '34.5', '33.75'),
('cb22-0004', 'cb22', '0004', '33.75', '34.5', '33.75'),
('cb22-0005', 'cb22', '0005', '33.75', '34.5', '36.75'),
('cb22-0006', 'cb22', '0006', '33.75', '34.5', '36.75'),
('cb22-0007', 'cb22', '0007', '33.75', '34.5', '36.75'),
('cb22-0008', 'cb22', '0008', '33.75', '34.5', '36.75'),
('cb22-0009', 'cb22', '0009', '33.75', '34.5', '33.75'),
('cb22-0010', 'cb22', '0010', '33.75', '34.5', '33.75'),
('cb22-0011', 'cb22', '0011', '33.75', '34.5', '33.75'),
('cb22-0012', 'cb22', '0012', '33.75', '34.5', '33.75'),
('cb22-0013', 'cb22', '0013', '33.75', '34.5', '36.75'),
('cb22-0014', 'cb22', '0014', '33.75', '34.5', '36.75'),
('cb22-0015', 'cb22', '0015', '33.75', '34.5', '36.75'),
('cb22-0016', 'cb22', '0016', '33.75', '34.5', '36.75'),
('cb22-0017', 'cb22', '0017', '33.75', '34.5', '33.75'),
('cb22-0018', 'cb22', '0018', '33.75', '34.5', '33.75'),
('cb22-0019', 'cb22', '0019', '33.75', '34.5', '33.75'),
('cb22-0020', 'cb22', '0020', '33.75', '34.5', '33.75'),
('cb22-0021', 'cb22', '0021', '33.75', '34.5', '36.75'),
('cb22-0022', 'cb22', '0022', '33.75', '34.5', '36.75'),
('cb22-0023', 'cb22', '0023', '33.75', '34.5', '36.75'),
('cb22-0024', 'cb22', '0024', '33.75', '34.5', '36.75'),
('cb22-0025', 'cb22', '0025', '33.75', '34.5', '33.75'),
('cb22-0026', 'cb22', '0026', '33.75', '34.5', '33.75'),
('cb22-0027', 'cb22', '0027', '33.75', '34.5', '33.75'),
('cb22-0028', 'cb22', '0028', '33.75', '34.5', '33.75'),
('cb22-0029', 'cb22', '0029', '33.75', '34.5', '36.75'),
('cb22-0030', 'cb22', '0030', '33.75', '34.5', '36.75'),
('cb22-0031', 'cb22', '0031', '33.75', '34.5', '36.75'),
('cb22-0032', 'cb22', '0032', '33.75', '34.5', '36.75'),
('cb22-0033', 'cb22', '0033', '33.75', '34.5', '33.75'),
('cb22-0034', 'cb22', '0034', '33.75', '34.5', '33.75'),
('cb22-0035', 'cb22', '0035', '33.75', '34.5', '33.75'),
('cb22-0036', 'cb22', '0036', '33.75', '34.5', '33.75'),
('cb22-0037', 'cb22', '0037', '33.75', '34.5', '36.75'),
('cb22-0038', 'cb22', '0038', '33.75', '34.5', '36.75'),
('cb22-0039', 'cb22', '0039', '33.75', '34.5', '36.75'),
('cb22-0040', 'cb22', '0040', '33.75', '34.5', '36.75'),
('cb27-0001', 'cb27', '0001', '32.75', '34.5', '33.25'),
('cb27-0002', 'cb27', '0002', '32.75', '34.5', '33.25'),
('cb27-0003', 'cb27', '0003', '32.75', '34.5', '33.25'),
('cb27-0004', 'cb27', '0004', '32.75', '34.5', '33.25'),
('cb27-0005', 'cb27', '0005', '32.75', '34.5', '33.25'),
('cb27-0006', 'cb27', '0006', '32.75', '34.5', '33.25'),
('cb27-0007', 'cb27', '0007', '32.75', '34.5', '33.25'),
('cb27-0008', 'cb27', '0008', '32.75', '34.5', '33.25'),
('cb27-0009', 'cb27', '0009', '32.75', '34.5', '33.25'),
('cb27-0010', 'cb27', '0010', '32.75', '34.5', '33.25'),
('cb27-0011', 'cb27', '0011', '32.75', '34.5', '33.25'),
('cb27-0012', 'cb27', '0012', '32.75', '34.5', '33.25'),
('cb27-0013', 'cb27', '0013', '32.75', '34.5', '33.25'),
('cb27-0014', 'cb27', '0014', '32.75', '34.5', '33.25'),
('cb27-0015', 'cb27', '0015', '32.75', '34.5', '33.25'),
('cb27-0016', 'cb27', '0016', '32.75', '34.5', '33.25'),
('cb28-0001', 'cb28', '0001', '32.75', '34.5', '33.25'),
('cb28-0002', 'cb28', '0002', '32.75', '34.5', '33.25'),
('cb28-0003', 'cb28', '0003', '32.75', '34.5', '33.25'),
('cb28-0004', 'cb28', '0004', '32.75', '34.5', '33.25'),
('cb28-0005', 'cb28', '0005', '32.75', '34.5', '33.25'),
('cb28-0006', 'cb28', '0006', '32.75', '34.5', '33.25'),
('cb28-0007', 'cb28', '0007', '32.75', '34.5', '33.25'),
('cb28-0008', 'cb28', '0008', '32.75', '34.5', '33.25'),
('cb28-0009', 'cb28', '0009', '32.75', '34.5', '33.25'),
('cb28-0010', 'cb28', '0010', '32.75', '34.5', '33.25'),
('cb28-0011', 'cb28', '0011', '32.75', '34.5', '33.25'),
('cb28-0012', 'cb28', '0012', '32.75', '34.5', '33.25'),
('cb28-0013', 'cb28', '0013', '32.75', '34.5', '33.25'),
('cb28-0014', 'cb28', '0014', '32.75', '34.5', '33.25'),
('cb28-0015', 'cb28', '0015', '32.75', '34.5', '33.25'),
('cb28-0016', 'cb28', '0016', '32.75', '34.5', '33.25'),
('cb30-0001', 'cb30', '0001', '32.75', '34.5', '33.25'),
('cb30-0002', 'cb30', '0002', '32.75', '34.5', '33.25'),
('cb30-0003', 'cb30', '0003', '32.75', '34.5', '33.25'),
('cb30-0004', 'cb30', '0004', '32.75', '34.5', '33.25'),
('cb30-0005', 'cb30', '0005', '32.75', '34.5', '33.25'),
('cb30-0006', 'cb30', '0006', '32.75', '34.5', '33.25'),
('cb30-0007', 'cb30', '0007', '32.75', '34.5', '33.25'),
('cb30-0008', 'cb30', '0008', '32.75', '34.5', '33.25'),
('cb30-0009', 'cb30', '0009', '32.75', '34.5', '33.25'),
('cb30-0010', 'cb30', '0010', '32.75', '34.5', '33.25'),
('cb30-0011', 'cb30', '0011', '32.75', '34.5', '33.25'),
('cb30-0012', 'cb30', '0012', '32.75', '34.5', '33.25'),
('cb30-0013', 'cb30', '0013', '32.75', '34.5', '33.25'),
('cb30-0014', 'cb30', '0014', '32.75', '34.5', '33.25'),
('cb30-0015', 'cb30', '0015', '32.75', '34.5', '33.25'),
('cb30-0016', 'cb30', '0016', '32.75', '34.5', '33.25'),
('cb30-0017', 'cb30', '0017', '32.75', '34.5', '33.25'),
('cb30-0018', 'cb30', '0018', '32.75', '34.5', '33.25'),
('cb30-0019', 'cb30', '0019', '32.75', '34.5', '33.25'),
('cb30-0020', 'cb30', '0020', '32.75', '34.5', '33.25'),
('cb30-0021', 'cb30', '0021', '32.75', '34.5', '33.25'),
('cb30-0022', 'cb30', '0022', '32.75', '34.5', '33.25'),
('cb30-0023', 'cb30', '0023', '32.75', '34.5', '33.25'),
('cb30-0024', 'cb30', '0024', '32.75', '34.5', '33.25'),
('cb30-0025', 'cb30', '0025', '32.75', '34.5', '33.25'),
('cb30-0026', 'cb30', '0026', '32.75', '34.5', '33.25'),
('cb30-0027', 'cb30', '0027', '32.75', '34.5', '33.25'),
('cb30-0028', 'cb30', '0028', '32.75', '34.5', '33.25'),
('cb30-0029', 'cb30', '0029', '32.75', '34.5', '33.25'),
('cb30-0030', 'cb30', '0030', '32.75', '34.5', '33.25'),
('cb30-0031', 'cb30', '0031', '32.75', '34.5', '33.25'),
('cb30-0032', 'cb30', '0032', '32.75', '34.5', '33.25'),
('cb30-0033', 'cb30', '0033', '32.75', '34.5', '33.25'),
('cb30-0034', 'cb30', '0034', '32.75', '34.5', '33.25'),
('cb30-0035', 'cb30', '0035', '32.75', '34.5', '33.25'),
('cb30-0036', 'cb30', '0036', '32.75', '34.5', '33.25'),
('cb35-0001', 'cb35', '0001', '32.75', '34.5', '33.25'),
('cb35-0002', 'cb35', '0002', '32.75', '34.5', '33.25'),
('cb35-0003', 'cb35', '0003', '32.75', '34.5', '33.25'),
('cb35-0004', 'cb35', '0004', '32.75', '34.5', '33.25'),
('cb35-0005', 'cb35', '0005', '32.75', '34.5', '33.25'),
('cb35-0006', 'cb35', '0006', '32.75', '34.5', '33.25'),
('cb35-0007', 'cb35', '0007', '32.75', '34.5', '33.25'),
('cb35-0008', 'cb35', '0008', '32.75', '34.5', '33.25'),
('cb35-0009', 'cb35', '0009', '32.75', '34.5', '33.25'),
('cb35-0010', 'cb35', '0010', '32.75', '34.5', '33.25'),
('cb35-0011', 'cb35', '0011', '32.75', '34.5', '33.25'),
('cb35-0012', 'cb35', '0012', '32.75', '34.5', '33.25'),
('cb35-0013', 'cb35', '0013', '32.75', '34.5', '33.25'),
('cb35-0014', 'cb35', '0014', '32.75', '34.5', '33.25'),
('cb35-0015', 'cb35', '0015', '32.75', '34.5', '33.25'),
('cb35-0016', 'cb35', '0016', '32.75', '34.5', '33.25'),
('cb36-0001', 'cb36', '0001', '32.75', '34.5', '33.25'),
('cb36-0002', 'cb36', '0002', '32.75', '34.5', '33.25'),
('cb36-0003', 'cb36', '0003', '32.75', '34.5', '33.25'),
('cb36-0004', 'cb36', '0004', '32.75', '34.5', '33.25'),
('cb36-0005', 'cb36', '0005', '32.75', '34.5', '33.25'),
('cb36-0006', 'cb36', '0006', '32.75', '34.5', '33.25'),
('cb36-0007', 'cb36', '0007', '32.75', '34.5', '33.25'),
('cb36-0008', 'cb36', '0008', '32.75', '34.5', '33.25'),
('cb36-0009', 'cb36', '0009', '32.75', '34.5', '33.25'),
('cb36-0010', 'cb36', '0010', '32.75', '34.5', '33.25'),
('cb36-0011', 'cb36', '0011', '32.75', '34.5', '33.25'),
('cb36-0012', 'cb36', '0012', '32.75', '34.5', '33.25'),
('cb36-0013', 'cb36', '0013', '32.75', '34.5', '33.25'),
('cb36-0014', 'cb36', '0014', '32.75', '34.5', '33.25'),
('cb36-0015', 'cb36', '0015', '32.75', '34.5', '33.25'),
('cb36-0016', 'cb36', '0016', '32.75', '34.5', '33.25'),
('cif1380-0001', 'cif1380', '0001', '24', '26.1', '33'),
('cif1380-0002', 'cif1380', '0002', '24', '26.1', '33'),
('cif1380-0003', 'cif1380', '0003', '24', '26.1', '33'),
('cif1380-0004', 'cif1380', '0004', '24', '26.1', '33'),
('cif1380-0005', 'cif1380', '0005', '24', '26.1', '33'),
('cif1380-0006', 'cif1380', '0006', '24', '26.1', '33'),
('cif1380-0007', 'cif1380', '0007', '24', '26.1', '33'),
('cif1380-0008', 'cif1380', '0008', '24', '26.1', '33'),
('cif1381-0001', 'cif1381', '0001', '24', '26.1', '33'),
('cif1381-0002', 'cif1381', '0002', '24', '26.1', '33'),
('cif1381-0003', 'cif1381', '0003', '24', '26.1', '33'),
('cif1381-0004', 'cif1381', '0004', '24', '26.1', '33'),
('cif1381-0005', 'cif1381', '0005', '24', '26.1', '33'),
('cif1381-0006', 'cif1381', '0006', '24', '26.1', '33'),
('cif1381-0007', 'cif1381', '0007', '24', '26.1', '33'),
('cif1381-0008', 'cif1381', '0008', '24', '26.1', '33'),
('cif1382-0001', 'cif1382', '0001', '24', '26.1', '33'),
('cif1382-0002', 'cif1382', '0002', '24', '26.1', '33'),
('cif1382-0003', 'cif1382', '0003', '24', '26.1', '33'),
('cif1382-0004', 'cif1382', '0004', '24', '26.1', '33'),
('cif1382-0005', 'cif1382', '0005', '24', '26.1', '33'),
('cif1382-0006', 'cif1382', '0006', '24', '26.1', '33'),
('cif1382-0007', 'cif1382', '0007', '24', '26.1', '33'),
('cif1382-0008', 'cif1382', '0008', '24', '26.1', '33'),
('cif1383-0001', 'cif1383', '0001', '24', '26.1', '33'),
('cif1383-0002', 'cif1383', '0002', '24', '26.1', '33'),
('cif1383-0003', 'cif1383', '0003', '24', '26.1', '33'),
('cif1383-0004', 'cif1383', '0004', '24', '26.1', '33'),
('cif1383-0005', 'cif1383', '0005', '24', '26.1', '33'),
('cif1383-0006', 'cif1383', '0006', '24', '26.1', '33'),
('cif1383-0007', 'cif1383', '0007', '24', '26.1', '33'),
('cif1383-0008', 'cif1383', '0008', '24', '26.1', '33'),
('cif1384-0001', 'cif1384', '0001', '24', '26.1', '33'),
('cif1384-0002', 'cif1384', '0002', '24', '26.1', '33'),
('cif1384-0003', 'cif1384', '0003', '24', '26.1', '33'),
('cif1384-0004', 'cif1384', '0004', '24', '26.1', '33'),
('cif1384-0005', 'cif1384', '0005', '24', '26.1', '33'),
('cif1384-0006', 'cif1384', '0006', '24', '26.1', '33'),
('cif1384-0007', 'cif1384', '0007', '24', '26.1', '33'),
('cif1384-0008', 'cif1384', '0008', '24', '26.1', '33'),
('mr1520-0001', 'mr1520', '0001', '27', '34', '32'),
('mr1520-0002', 'mr1520', '0002', '27', '34', '32'),
('mr1520-0003', 'mr1520', '0003', '27', '34', '32'),
('mr1520-0004', 'mr1520', '0004', '27', '34', '32'),
('mr1520-0005', 'mr1520', '0005', '27', '34', '32'),
('mr1520-0006', 'mr1520', '0006', '27', '34', '32'),
('mr1520-0007', 'mr1520', '0007', '27', '34', '32'),
('mr1520-0008', 'mr1520', '0008', '27', '34', '32'),
('mr1520-0009', 'mr1520', '0009', '27', '34', '32'),
('mr1520-0010', 'mr1520', '0010', '27', '34', '32'),
('mr1520-0011', 'mr1520', '0011', '27', '34', '32'),
('mr1520-0012', 'mr1520', '0012', '27', '34', '32'),
('mr1520-0013', 'mr1520', '0013', '27', '34', '32'),
('mr1520-0014', 'mr1520', '0014', '27', '34', '32'),
('mr1520-0015', 'mr1520', '0015', '27', '34', '32'),
('mr1520-0016', 'mr1520', '0016', '27', '34', '32'),
('mr1520-0017', 'mr1520', '0017', '27', '34', '32'),
('mr1520-0018', 'mr1520', '0018', '27', '34', '32'),
('mr1520-0019', 'mr1520', '0019', '27', '34', '32'),
('mr1520-0020', 'mr1520', '0020', '27', '34', '32'),
('mr1522-0001', 'mr1522', '0001', '27', '34', '32'),
('mr1522-0002', 'mr1522', '0002', '27', '34', '32'),
('mr1522-0003', 'mr1522', '0003', '27', '34', '32'),
('mr1522-0004', 'mr1522', '0004', '27', '34', '32'),
('mr1522-0005', 'mr1522', '0005', '27', '34', '32'),
('mr1522-0006', 'mr1522', '0006', '27', '34', '32'),
('mr1522-0007', 'mr1522', '0007', '27', '34', '32'),
('mr1522-0008', 'mr1522', '0008', '27', '34', '32'),
('mr1522-0009', 'mr1522', '0009', '27', '34', '32'),
('mr1522-0010', 'mr1522', '0010', '27', '34', '32'),
('mr1522-0011', 'mr1522', '0011', '27', '34', '32'),
('mr1522-0012', 'mr1522', '0012', '27', '34', '32'),
('mr1522-0013', 'mr1522', '0013', '27', '34', '32'),
('mr1522-0014', 'mr1522', '0014', '27', '34', '32'),
('mr1522-0015', 'mr1522', '0015', '27', '34', '32'),
('mr1522-0016', 'mr1522', '0016', '27', '34', '32'),
('mr1522-0017', 'mr1522', '0017', '27', '34', '32'),
('mr1522-0018', 'mr1522', '0018', '27', '34', '32'),
('mr1522-0019', 'mr1522', '0019', '27', '34', '32'),
('mr1522-0020', 'mr1522', '0020', '27', '34', '32'),
('mr1522-0021', 'mr1522', '0021', '27', '34', '32'),
('mr1522-0022', 'mr1522', '0022', '27', '34', '32'),
('mr1522-0023', 'mr1522', '0023', '27', '34', '32'),
('mr1522-0024', 'mr1522', '0024', '27', '34', '32'),
('mr1523-0001', 'mr1523', '0001', '27', '34', '32'),
('mr1523-0002', 'mr1523', '0002', '27', '34', '32'),
('mr1523-0003', 'mr1523', '0003', '27', '34', '32'),
('mr1523-0004', 'mr1523', '0004', '27', '34', '32'),
('mr1523-0005', 'mr1523', '0005', '27', '34', '32'),
('mr1523-0006', 'mr1523', '0006', '27', '34', '32'),
('mr1523-0007', 'mr1523', '0007', '27', '34', '32'),
('mr1523-0008', 'mr1523', '0008', '27', '34', '32'),
('mr1523-0009', 'mr1523', '0009', '27', '34', '32'),
('mr1523-0010', 'mr1523', '0010', '27', '34', '32'),
('mr1523-0011', 'mr1523', '0011', '27', '34', '32'),
('mr1523-0012', 'mr1523', '0012', '27', '34', '32'),
('mr1523-0013', 'mr1523', '0013', '27', '34', '32'),
('mr1523-0014', 'mr1523', '0014', '27', '34', '32'),
('mr1523-0015', 'mr1523', '0015', '27', '34', '32'),
('mr1523-0016', 'mr1523', '0016', '27', '34', '32'),
('mr1523-0017', 'mr1523', '0017', '27', '34', '32'),
('mr1523-0018', 'mr1523', '0018', '27', '34', '32'),
('mr1523-0019', 'mr1523', '0019', '27', '34', '32'),
('mr1523-0020', 'mr1523', '0020', '27', '34', '32'),
('mr1523-0021', 'mr1523', '0021', '27', '34', '32'),
('mr1523-0022', 'mr1523', '0022', '27', '34', '32'),
('mr1523-0023', 'mr1523', '0023', '27', '34', '32'),
('mr1523-0024', 'mr1523', '0024', '27', '34', '32'),
('mr1523-0025', 'mr1523', '0025', '27', '34', '32'),
('mr1523-0026', 'mr1523', '0026', '27', '34', '32'),
('mr1523-0027', 'mr1523', '0027', '27', '34', '32'),
('mr1523-0028', 'mr1523', '0028', '27', '34', '32'),
('mr1523-0029', 'mr1523', '0029', '27', '34', '32'),
('mr1523-0030', 'mr1523', '0030', '27', '34', '32'),
('mr1523-0031', 'mr1523', '0031', '27', '34', '32'),
('mr1523-0032', 'mr1523', '0032', '27', '34', '32'),
('mr1523-0033', 'mr1523', '0033', '27', '34', '32'),
('mr1523-0034', 'mr1523', '0034', '27', '34', '32'),
('mr1523-0035', 'mr1523', '0035', '27', '34', '32'),
('mr1523-0036', 'mr1523', '0036', '27', '34', '32'),
('mr1526-0001', 'mr1526', '0001', '27', '34', '32'),
('mr1526-0002', 'mr1526', '0002', '27', '34', '32'),
('mr1526-0003', 'mr1526', '0003', '27', '34', '32'),
('mr1526-0004', 'mr1526', '0004', '27', '34', '32'),
('mr1526-0005', 'mr1526', '0005', '27', '34', '32'),
('mr1526-0006', 'mr1526', '0006', '27', '34', '32'),
('mr1526-0007', 'mr1526', '0007', '27', '34', '32'),
('mr1526-0008', 'mr1526', '0008', '27', '34', '32'),
('mr1526-0009', 'mr1526', '0009', '27', '34', '32'),
('mr1526-0010', 'mr1526', '0010', '27', '34', '32'),
('mr1526-0011', 'mr1526', '0011', '27', '34', '32'),
('mr1526-0012', 'mr1526', '0012', '27', '34', '32'),
('mr1526-0013', 'mr1526', '0013', '27', '34', '32'),
('mr1526-0014', 'mr1526', '0014', '27', '34', '32'),
('mr1526-0015', 'mr1526', '0015', '27', '34', '32'),
('mr1526-0016', 'mr1526', '0016', '27', '34', '32'),
('mr1526-0017', 'mr1526', '0017', '27', '34', '32'),
('mr1526-0018', 'mr1526', '0018', '27', '34', '32'),
('mr1526-0019', 'mr1526', '0019', '27', '34', '32'),
('mr1526-0020', 'mr1526', '0020', '27', '34', '32'),
('mr1526-0021', 'mr1526', '0021', '27', '34', '32'),
('mr1526-0022', 'mr1526', '0022', '27', '34', '32'),
('mr1526-0023', 'mr1526', '0023', '27', '34', '32'),
('mr1526-0024', 'mr1526', '0024', '27', '34', '32'),
('mr1527-0001', 'mr1527', '0001', '27', '34', '32'),
('mr1527-0002', 'mr1527', '0002', '27', '34', '32'),
('mr1527-0003', 'mr1527', '0003', '27', '34', '32'),
('mr1527-0004', 'mr1527', '0004', '27', '34', '32'),
('mr1527-0005', 'mr1527', '0005', '27', '34', '32'),
('mr1527-0006', 'mr1527', '0006', '27', '34', '32'),
('mr1527-0007', 'mr1527', '0007', '27', '34', '32'),
('mr1527-0008', 'mr1527', '0008', '27', '34', '32'),
('mr1527-0009', 'mr1527', '0009', '27', '34', '32'),
('mr1527-0010', 'mr1527', '0010', '27', '34', '32'),
('mr1527-0011', 'mr1527', '0011', '27', '34', '32'),
('mr1527-0012', 'mr1527', '0012', '27', '34', '32'),
('mr1527-0013', 'mr1527', '0013', '27', '34', '32'),
('mr1527-0014', 'mr1527', '0014', '27', '34', '32'),
('mr1527-0015', 'mr1527', '0015', '27', '34', '32'),
('mr1527-0016', 'mr1527', '0016', '27', '34', '32'),
('mr1527-0017', 'mr1527', '0017', '27', '34', '32'),
('mr1527-0018', 'mr1527', '0018', '27', '34', '32'),
('mr1527-0019', 'mr1527', '0019', '27', '34', '32'),
('mr1527-0020', 'mr1527', '0020', '27', '34', '32'),
('mr1527-0021', 'mr1527', '0021', '27', '34', '32'),
('mr1527-0022', 'mr1527', '0022', '27', '34', '32'),
('mr1527-0023', 'mr1527', '0023', '27', '34', '32'),
('mr1527-0024', 'mr1527', '0024', '27', '34', '32'),
('mr1527-0025', 'mr1527', '0025', '27', '34', '32'),
('mr1527-0026', 'mr1527', '0026', '27', '34', '32'),
('mr1527-0027', 'mr1527', '0027', '27', '34', '32'),
('mr1527-0028', 'mr1527', '0028', '27', '34', '32'),
('mr1527-0029', 'mr1527', '0029', '27', '34', '32'),
('mr1527-0030', 'mr1527', '0030', '27', '34', '32'),
('mr1527-0031', 'mr1527', '0031', '27', '34', '32'),
('mr1527-0032', 'mr1527', '0032', '27', '34', '32'),
('mr1527-0033', 'mr1527', '0033', '27', '34', '32'),
('mr1527-0034', 'mr1527', '0034', '27', '34', '32'),
('mr1527-0035', 'mr1527', '0035', '27', '34', '32'),
('mr1527-0036', 'mr1527', '0036', '27', '34', '32'),
('mr1535-0001', 'mr1535', '0001', '27', '34', '32'),
('mr1535-0002', 'mr1535', '0002', '27', '34', '32'),
('mr1535-0003', 'mr1535', '0003', '27', '34', '32'),
('mr1535-0004', 'mr1535', '0004', '27', '34', '32'),
('mr1535-0005', 'mr1535', '0005', '27', '34', '32'),
('mr1535-0006', 'mr1535', '0006', '27', '34', '32'),
('mr1535-0007', 'mr1535', '0007', '27', '34', '32'),
('mr1535-0008', 'mr1535', '0008', '27', '34', '32'),
('mr1535-0009', 'mr1535', '0009', '27', '34', '32'),
('mr1535-0010', 'mr1535', '0010', '27', '34', '32'),
('mr1535-0011', 'mr1535', '0011', '27', '34', '32'),
('mr1535-0012', 'mr1535', '0012', '27', '34', '32'),
('mr1535-0013', 'mr1535', '0013', '27', '34', '32'),
('mr1535-0014', 'mr1535', '0014', '27', '34', '32'),
('mr1535-0015', 'mr1535', '0015', '27', '34', '32'),
('mr1535-0016', 'mr1535', '0016', '27', '34', '32'),
('mr1535-0017', 'mr1535', '0017', '27', '34', '32'),
('mr1535-0018', 'mr1535', '0018', '27', '34', '32'),
('mr1535-0019', 'mr1535', '0019', '27', '34', '32'),
('mr1535-0020', 'mr1535', '0020', '27', '34', '32'),
('mr1535-0021', 'mr1535', '0021', '27', '34', '32'),
('mr1535-0022', 'mr1535', '0022', '27', '34', '32'),
('mr1535-0023', 'mr1535', '0023', '27', '34', '32'),
('mr1535-0024', 'mr1535', '0024', '27', '34', '32'),
('mr1537-0001', 'mr1537', '0001', '27', '34', '32'),
('mr1537-0002', 'mr1537', '0002', '27', '34', '32'),
('mr1537-0003', 'mr1537', '0003', '27', '34', '32'),
('mr1537-0004', 'mr1537', '0004', '27', '34', '32'),
('mr1537-0005', 'mr1537', '0005', '27', '34', '32'),
('mr1537-0006', 'mr1537', '0006', '27', '34', '32'),
('mr1537-0007', 'mr1537', '0007', '27', '34', '32'),
('mr1537-0008', 'mr1537', '0008', '27', '34', '32'),
('mr1537-0009', 'mr1537', '0009', '27', '34', '32'),
('mr1537-0010', 'mr1537', '0010', '27', '34', '32'),
('mr1537-0011', 'mr1537', '0011', '27', '34', '32'),
('mr1537-0012', 'mr1537', '0012', '27', '34', '32'),
('mr1537-0013', 'mr1537', '0013', '27', '34', '32'),
('mr1537-0014', 'mr1537', '0014', '27', '34', '32'),
('mr1537-0015', 'mr1537', '0015', '27', '34', '32'),
('mr1537-0016', 'mr1537', '0016', '27', '34', '32'),
('mr1537-0017', 'mr1537', '0017', '27', '34', '32'),
('mr1537-0018', 'mr1537', '0018', '27', '34', '32'),
('mr1537-0019', 'mr1537', '0019', '27', '34', '32'),
('mr1537-0020', 'mr1537', '0020', '27', '34', '32'),
('mr1551-0001', 'mr1551', '0001', '27', '34', '32'),
('mr1551-0002', 'mr1551', '0002', '27', '34', '32'),
('mr1551-0003', 'mr1551', '0003', '27', '34', '32'),
('mr1551-0004', 'mr1551', '0004', '27', '34', '32'),
('mr1551-0005', 'mr1551', '0005', '27', '34', '32'),
('mr1551-0006', 'mr1551', '0006', '27', '34', '32'),
('mr1551-0007', 'mr1551', '0007', '27', '34', '32'),
('mr1551-0008', 'mr1551', '0008', '27', '34', '32'),
('mr1551-0009', 'mr1551', '0009', '27', '34', '32'),
('mr1551-0010', 'mr1551', '0010', '27', '34', '32'),
('mr1551-0011', 'mr1551', '0011', '27', '34', '32'),
('mr1551-0012', 'mr1551', '0012', '27', '34', '32'),
('mr1551-0013', 'mr1551', '0013', '27', '34', '32'),
('mr1551-0014', 'mr1551', '0014', '27', '34', '32'),
('mr1551-0015', 'mr1551', '0015', '27', '34', '32'),
('mr1551-0016', 'mr1551', '0016', '27', '34', '32'),
('mr1551-0017', 'mr1551', '0017', '27', '34', '32'),
('mr1551-0018', 'mr1551', '0018', '27', '34', '32'),
('mr1551-0019', 'mr1551', '0019', '27', '34', '32'),
('mr1551-0020', 'mr1551', '0020', '27', '34', '32'),
('mr1552-0001', 'mr1552', '0001', '27', '34', '32'),
('mr1552-0002', 'mr1552', '0002', '27', '34', '32'),
('mr1552-0003', 'mr1552', '0003', '27', '34', '32'),
('mr1552-0004', 'mr1552', '0004', '27', '34', '32'),
('mr1552-0005', 'mr1552', '0005', '27', '34', '32'),
('mr1552-0006', 'mr1552', '0006', '27', '34', '32'),
('mr1552-0007', 'mr1552', '0007', '27', '34', '32'),
('mr1552-0008', 'mr1552', '0008', '27', '34', '32'),
('mr1552-0009', 'mr1552', '0009', '27', '34', '32'),
('mr1552-0010', 'mr1552', '0010', '27', '34', '32'),
('mr1552-0011', 'mr1552', '0011', '27', '34', '32'),
('mr1552-0012', 'mr1552', '0012', '27', '34', '32'),
('mr1552-0013', 'mr1552', '0013', '27', '34', '32'),
('mr1552-0014', 'mr1552', '0014', '27', '34', '32'),
('mr1552-0015', 'mr1552', '0015', '27', '34', '32'),
('mr1552-0016', 'mr1552', '0016', '27', '34', '32'),
('mr1552-0017', 'mr1552', '0017', '27', '34', '32'),
('mr1552-0018', 'mr1552', '0018', '27', '34', '32'),
('mr1552-0019', 'mr1552', '0019', '27', '34', '32'),
('mr1552-0020', 'mr1552', '0020', '27', '34', '32'),
('mr1552-0021', 'mr1552', '0021', '27', '34', '32'),
('mr1552-0022', 'mr1552', '0022', '27', '34', '32'),
('mr1552-0023', 'mr1552', '0023', '27', '34', '32'),
('mr1552-0024', 'mr1552', '0024', '27', '34', '32'),
('mr1552-0025', 'mr1552', '0025', '27', '34', '32'),
('mr1552-0026', 'mr1552', '0026', '27', '34', '32'),
('mr1552-0027', 'mr1552', '0027', '27', '34', '32'),
('mr1552-0028', 'mr1552', '0028', '27', '34', '32'),
('mr1552-0029', 'mr1552', '0029', '27', '34', '32'),
('mr1552-0030', 'mr1552', '0030', '27', '34', '32'),
('mr1552-0031', 'mr1552', '0031', '27', '34', '32'),
('mr1552-0032', 'mr1552', '0032', '27', '34', '32'),
('mr1553-0001', 'mr1553', '0001', '27', '34', '32'),
('mr1553-0002', 'mr1553', '0002', '27', '34', '32'),
('mr1553-0003', 'mr1553', '0003', '27', '34', '32'),
('mr1553-0004', 'mr1553', '0004', '27', '34', '32'),
('mr1553-0005', 'mr1553', '0005', '27', '34', '32'),
('mr1553-0006', 'mr1553', '0006', '27', '34', '32'),
('mr1553-0007', 'mr1553', '0007', '27', '34', '32'),
('mr1553-0008', 'mr1553', '0008', '27', '34', '32'),
('mr1553-0009', 'mr1553', '0009', '27', '34', '32'),
('mr1553-0010', 'mr1553', '0010', '27', '34', '32'),
('mr1553-0011', 'mr1553', '0011', '27', '34', '32'),
('mr1553-0012', 'mr1553', '0012', '27', '34', '32'),
('mr1553-0013', 'mr1553', '0013', '27', '34', '32'),
('mr1553-0014', 'mr1553', '0014', '27', '34', '32'),
('mr1553-0015', 'mr1553', '0015', '27', '34', '32'),
('mr1553-0016', 'mr1553', '0016', '27', '34', '32'),
('mr1553-0017', 'mr1553', '0017', '27', '34', '32'),
('mr1553-0018', 'mr1553', '0018', '27', '34', '32'),
('mr1553-0019', 'mr1553', '0019', '27', '34', '32'),
('mr1553-0020', 'mr1553', '0020', '27', '34', '32'),
('mr1553-0021', 'mr1553', '0021', '27', '34', '32'),
('mr1553-0022', 'mr1553', '0022', '27', '34', '32'),
('mr1553-0023', 'mr1553', '0023', '27', '34', '32'),
('mr1553-0024', 'mr1553', '0024', '27', '34', '32'),
('mr1556-0001', 'mr1556', '0001', '27', '34', '32'),
('mr1556-0002', 'mr1556', '0002', '27', '34', '32'),
('mr1556-0003', 'mr1556', '0003', '27', '34', '32'),
('mr1556-0004', 'mr1556', '0004', '27', '34', '32'),
('mr1556-0005', 'mr1556', '0005', '27', '34', '32'),
('mr1556-0006', 'mr1556', '0006', '27', '34', '32'),
('mr1556-0007', 'mr1556', '0007', '27', '34', '32'),
('mr1556-0008', 'mr1556', '0008', '27', '34', '32'),
('mr1556-0009', 'mr1556', '0009', '27', '34', '32'),
('mr1556-0010', 'mr1556', '0010', '27', '34', '32'),
('mr1556-0011', 'mr1556', '0011', '27', '34', '32'),
('mr1556-0012', 'mr1556', '0012', '27', '34', '32'),
('mr1556-0013', 'mr1556', '0013', '27', '34', '32'),
('mr1556-0014', 'mr1556', '0014', '27', '34', '32'),
('mr1556-0015', 'mr1556', '0015', '27', '34', '32'),
('mr1556-0016', 'mr1556', '0016', '27', '34', '32'),
('mr1556-0017', 'mr1556', '0017', '27', '34', '32'),
('mr1556-0018', 'mr1556', '0018', '27', '34', '32'),
('mr1556-0019', 'mr1556', '0019', '27', '34', '32'),
('mr1556-0020', 'mr1556', '0020', '27', '34', '32'),
('mr1556-0021', 'mr1556', '0021', '27', '34', '32'),
('mr1556-0022', 'mr1556', '0022', '27', '34', '32'),
('mr1556-0023', 'mr1556', '0023', '27', '34', '32'),
('mr1556-0024', 'mr1556', '0024', '27', '34', '32'),
('mr1556-0025', 'mr1556', '0025', '27', '34', '32'),
('mr1556-0026', 'mr1556', '0026', '27', '34', '32'),
('mr1556-0027', 'mr1556', '0027', '27', '34', '32'),
('mr1556-0028', 'mr1556', '0028', '27', '34', '32'),
('mr1556-0029', 'mr1556', '0029', '27', '34', '32'),
('mr1556-0030', 'mr1556', '0030', '27', '34', '32'),
('mr1556-0031', 'mr1556', '0031', '27', '34', '32'),
('mr1556-0032', 'mr1556', '0032', '27', '34', '32'),
('mr1557-0001', 'mr1557', '0001', '27', '34', '32'),
('mr1557-0002', 'mr1557', '0002', '27', '34', '32'),
('mr1557-0003', 'mr1557', '0003', '27', '34', '32'),
('mr1557-0004', 'mr1557', '0004', '27', '34', '32'),
('mr1557-0005', 'mr1557', '0005', '27', '34', '32'),
('mr1557-0006', 'mr1557', '0006', '27', '34', '32'),
('mr1557-0007', 'mr1557', '0007', '27', '34', '32'),
('mr1557-0008', 'mr1557', '0008', '27', '34', '32'),
('mr1557-0009', 'mr1557', '0009', '27', '34', '32'),
('mr1557-0010', 'mr1557', '0010', '27', '34', '32'),
('mr1557-0011', 'mr1557', '0011', '27', '34', '32'),
('mr1557-0012', 'mr1557', '0012', '27', '34', '32'),
('mr1557-0013', 'mr1557', '0013', '27', '34', '32'),
('mr1557-0014', 'mr1557', '0014', '27', '34', '32'),
('mr1557-0015', 'mr1557', '0015', '27', '34', '32'),
('mr1557-0016', 'mr1557', '0016', '27', '34', '32'),
('mr1557-0017', 'mr1557', '0017', '27', '34', '32'),
('mr1557-0018', 'mr1557', '0018', '27', '34', '32'),
('mr1557-0019', 'mr1557', '0019', '27', '34', '32'),
('mr1557-0020', 'mr1557', '0020', '27', '34', '32');


-- ----------------------------
-- Table structure for ehr_lookups.cageclass
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.cageclass;
CREATE TABLE ehr_lookups.cageclass (
RowId SERIAL not null,
low float8 DEFAULT NULL,
high float8 DEFAULT NULL,
sqft float8 DEFAULT NULL,
height float8 DEFAULT NULL,

CONSTRAINT PK_cageclass PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Records of cageclass
-- ----------------------------
INSERT INTO ehr_lookups.cageclass VALUES ('1', '0', '1', '1.6', '20');
INSERT INTO ehr_lookups.cageclass VALUES ('2', '1', '3', '3', '30');
INSERT INTO ehr_lookups.cageclass VALUES ('3', '3', '10', '4.3', '30');
INSERT INTO ehr_lookups.cageclass VALUES ('4', '10', '15', '6', '32');
INSERT INTO ehr_lookups.cageclass VALUES ('5', '15', '25', '8', '36');



-- ----------------------------
-- Table structure for clinpath_status
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.clinpath_status;
CREATE TABLE ehr_lookups.clinpath_status (
status varchar(255) NOT NULL,

CONSTRAINT PK_clinpath_status PRIMARY KEY (status)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of clinpath_status
-- ----------------------------



-- ----------------------------
-- Table structure for blood_draw_services
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.blood_draw_services;
CREATE TABLE ehr_lookups.blood_draw_services (
service varchar(255) NOT NULL,

CONSTRAINT PK_blood_draw_services PRIMARY KEY (service)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of blood_draw_services
-- ----------------------------
INSERT INTO ehr_lookups.blood_draw_services
(service) VALUES
('CBC')
;


-- ----------------------------
-- Table structure for request_priority
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.request_priority;
CREATE TABLE ehr_lookups.request_priority (
priority varchar(255) NOT NULL,

CONSTRAINT PK_request_priority PRIMARY KEY (priority)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of request_priority
-- ----------------------------
INSERT INTO ehr_lookups.request_priority VALUES ('Routine');
INSERT INTO ehr_lookups.request_priority VALUES ('Stat');


--  --  --  -- ----------------------------
-- Table structure for clinpath_tests
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.clinpath_tests;
CREATE TABLE ehr_lookups.clinpath_tests (
testName varchar(255) NOT NULL,
units varchar(50) NOT NULL,
dataset varchar(200),

CONSTRAINT PK_testName PRIMARY KEY (testname)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Table structure for clinpath_services
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.clinpath_services;
CREATE TABLE ehr_lookups.clinpath_services (
label varchar(255) not null,
dataset varchar(255) NOT NULL,
category varchar(255),

CONSTRAINT PK_clinpath_services PRIMARY KEY (label)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of clinpath_services
-- ----------------------------
INSERT into ehr_lookups.clinpath_services
(dataset, label, category)
VALUES
('Immunology Results', 'CBC', 'Hematology'),
('Blood Chemistry Results', 'Vet 19', 'Blood Chemistry')
;

-- ----------------------------
-- Table structure for clinremarks_category
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.clinremarks_category;
CREATE TABLE ehr_lookups.clinremarks_category (
category varchar(255) NOT NULL,

CONSTRAINT PK_clinremarks_category PRIMARY KEY (category)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of clinremarks_category
-- ----------------------------
INSERT INTO ehr_lookups.clinremarks_category VALUES ('Clinical');
INSERT INTO ehr_lookups.clinremarks_category VALUES ('Surgery');
INSERT INTO ehr_lookups.clinremarks_category VALUES ('Necropsy');
INSERT INTO ehr_lookups.clinremarks_category VALUES ('Biopsy');



-- ----------------------------
-- Table structure for ehr_lookups.condition_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.condition_codes;
CREATE TABLE ehr_lookups.condition_codes (
Code varchar(255) not null,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_condition_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of condition_codes
-- ----------------------------
INSERT INTO ehr_lookups.condition_codes VALUES ('am', 'with adopted mother');
INSERT INTO ehr_lookups.condition_codes VALUES ('b', 'breeding');
INSERT INTO ehr_lookups.condition_codes VALUES ('c', 'chair');
INSERT INTO ehr_lookups.condition_codes VALUES ('f', 'with the father');
INSERT INTO ehr_lookups.condition_codes VALUES ('g', 'in a group (+3 animals living together)');
INSERT INTO ehr_lookups.condition_codes VALUES ('gam', 'in a group with adopted mother');
INSERT INTO ehr_lookups.condition_codes VALUES ('gf', 'in a group with father');
INSERT INTO ehr_lookups.condition_codes VALUES ('gm', 'in a group with the mother');
INSERT INTO ehr_lookups.condition_codes VALUES ('gmf', 'in a group with the mother and father');
INSERT INTO ehr_lookups.condition_codes VALUES ('m', 'with the mother');
INSERT INTO ehr_lookups.condition_codes VALUES ('p', 'paired');
INSERT INTO ehr_lookups.condition_codes VALUES ('pc', 'protected contact paired');
INSERT INTO ehr_lookups.condition_codes VALUES ('s', 'single');
INSERT INTO ehr_lookups.condition_codes VALUES ('x', 'special housing condition');

-- ----------------------------
-- Table structure for ehr_lookups.death_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.death_codes;
CREATE TABLE ehr_lookups.death_codes (
Code varchar(255) not null,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_death_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of death_codes
-- ----------------------------
INSERT INTO ehr_lookups.death_codes VALUES ('d-expr', 'Death - Experiment');
INSERT INTO ehr_lookups.death_codes VALUES ('d-othr', 'Death - Other');
INSERT INTO ehr_lookups.death_codes VALUES ('d-qc', 'Death - QC');
INSERT INTO ehr_lookups.death_codes VALUES ('d-quar', 'Death - Quarantine');
INSERT INTO ehr_lookups.death_codes VALUES ('d-qx', 'Death - QX');


-- ----------------------------
-- Table structure for dental_gingivitis
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_gingivitis;
CREATE TABLE ehr_lookups.dental_gingivitis (
result varchar(255) NOT NULL,
sort_order integer,

CONSTRAINT PK_dental_gingivitis PRIMARY KEY (result)
)
WITH (OIDS=FALSE)

;



-- ----------------------------
-- Records of dental_gingivitis
-- ----------------------------
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('No', 1);
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('Mild', 2);
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('Moderate', 3);
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('Severe', 4);

-- ----------------------------
-- Table structure for dental_jaw
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_jaw;
CREATE TABLE ehr_lookups.dental_jaw (
jaw varchar(255) NOT NULL,

CONSTRAINT PK_dental_jaw PRIMARY KEY (jaw)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_jaw
-- ----------------------------
INSERT INTO ehr_lookups.dental_jaw VALUES ('Upper');
INSERT INTO ehr_lookups.dental_jaw VALUES ('Lower');

-- ----------------------------
-- Table structure for dental_priority
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_priority;
CREATE TABLE ehr_lookups.dental_priority (
priority varchar(255) NOT NULL,
criteria varchar(255),
sort_order integer,

CONSTRAINT PK_dental_priority PRIMARY KEY (priority)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_priority
-- ----------------------------
INSERT INTO ehr_lookups.dental_priority VALUES ('L', 'No tartar and no gingivitis', 1);
INSERT INTO ehr_lookups.dental_priority VALUES ('L/M', 'Mild tartar and no gingivitis.  Mild tartar and very localized gingivitis.', 2);
INSERT INTO ehr_lookups.dental_priority VALUES ('M', 'Moderate tartar and no gingivitis.  Moderate tartar and very localized gingivitis.  Mild tartar and mild, generalized gingivitis.', 3);
INSERT INTO ehr_lookups.dental_priority VALUES ('M/H', 'Severe tartar and no gingivitis.  Mild tartar and moderate, generalized gingivitis.  Moderate tartar and mild, generalized gingivitis.', 4);
INSERT INTO ehr_lookups.dental_priority VALUES ('H', 'Anything needing extraction.  Severe tartar and generalized gingivitis.', 5);

-- ----------------------------
-- Table structure for dental_side
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_side;
CREATE TABLE ehr_lookups.dental_side (
side varchar(255) NOT NULL,

CONSTRAINT PK_dental_side PRIMARY KEY (side)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_side
-- ----------------------------
INSERT INTO ehr_lookups.dental_side VALUES ('Left');
INSERT INTO ehr_lookups.dental_side VALUES ('Right');

-- ----------------------------
-- Table structure for dental_status
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_status;
CREATE TABLE ehr_lookups.dental_status (
status varchar(255) NOT NULL,

CONSTRAINT PK_dental_status PRIMARY KEY (status)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_status
-- ----------------------------
INSERT INTO ehr_lookups.dental_status VALUES ('Fractured');
INSERT INTO ehr_lookups.dental_status VALUES ('Loose');
INSERT INTO ehr_lookups.dental_status VALUES ('Discolored');
INSERT INTO ehr_lookups.dental_status VALUES ('Missing');
INSERT INTO ehr_lookups.dental_status VALUES ('Needs Extraction');

-- ----------------------------
-- Table structure for dental_tartar
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_tartar;
CREATE TABLE ehr_lookups.dental_tartar (
result varchar(255) NOT NULL,

CONSTRAINT PK_dental_tartar PRIMARY KEY (result)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_tartar
-- ----------------------------
INSERT INTO ehr_lookups.dental_tartar VALUES ('None');
INSERT INTO ehr_lookups.dental_tartar VALUES ('Mild');
INSERT INTO ehr_lookups.dental_tartar VALUES ('Moderate');
INSERT INTO ehr_lookups.dental_tartar VALUES ('Severe');

-- ----------------------------
-- Table structure for dental_teeth
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dental_teeth;
CREATE TABLE ehr_lookups.dental_teeth (
teeth varchar not null,
seq_order int4 DEFAULT NULL,

CONSTRAINT PK_dental_teeth PRIMARY KEY (teeth)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dental_teeth
-- ----------------------------
INSERT INTO ehr_lookups.dental_teeth VALUES ('M3', '1');
INSERT INTO ehr_lookups.dental_teeth VALUES ('M2', '2');
INSERT INTO ehr_lookups.dental_teeth VALUES ('M1', '3');
INSERT INTO ehr_lookups.dental_teeth VALUES ('PM2', '4');
INSERT INTO ehr_lookups.dental_teeth VALUES ('PM1', '5');
INSERT INTO ehr_lookups.dental_teeth VALUES ('K9', '6');
INSERT INTO ehr_lookups.dental_teeth VALUES ('I2', '7');
INSERT INTO ehr_lookups.dental_teeth VALUES ('I1', '8');


-- ----------------------------
-- Table structure for ehr_lookups.dosage_units
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.dosage_units;
CREATE TABLE ehr_lookups.dosage_units (
unit varchar(100) not null,
numerator varchar(100),

CONSTRAINT PK_dosage_units PRIMARY KEY (unit)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of dosage_units
-- ----------------------------
INSERT INTO ehr_lookups.dosage_units VALUES ('g/kg', 'g');
INSERT INTO ehr_lookups.dosage_units VALUES ('mg/kg', 'mg');
INSERT INTO ehr_lookups.dosage_units VALUES ('ug/kg', 'ug');
INSERT INTO ehr_lookups.dosage_units VALUES ('ml/kg', 'ml');
INSERT INTO ehr_lookups.dosage_units VALUES ('ounces/kg', 'ounces');
INSERT INTO ehr_lookups.dosage_units VALUES ('units/kg', 'units');
INSERT INTO ehr_lookups.dosage_units VALUES ('mEq/kg', 'mEq');
INSERT INTO ehr_lookups.dosage_units VALUES ('IU/kg', 'IU');
INSERT INTO ehr_lookups.dosage_units VALUES ('no units', '');

-- ----------------------------
-- Table structure for ehr_lookups.conc_units
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.conc_units;
CREATE TABLE ehr_lookups.conc_units (
unit varchar(100) not null,
denominator varchar(100),
numerator varchar(100),

CONSTRAINT PK_conc_units PRIMARY KEY (unit)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of conc_units
-- ----------------------------
INSERT INTO ehr_lookups.conc_units VALUES ('mg/ml', 'mL', 'mg');
INSERT INTO ehr_lookups.conc_units VALUES ('units/ml', 'mL', 'units');
INSERT INTO ehr_lookups.conc_units VALUES ('ug/ml', 'mL', 'ug');
INSERT INTO ehr_lookups.conc_units VALUES ('mg/tablet', 'tablet(s)', 'mg');
INSERT INTO ehr_lookups.conc_units VALUES ('mg/capsule', 'capsule(s)', 'mg');
INSERT INTO ehr_lookups.conc_units VALUES ('g/ml', 'mL', 'g');
INSERT INTO ehr_lookups.conc_units VALUES ('mg/piece', 'piece(s)', 'mg');
INSERT INTO ehr_lookups.conc_units VALUES ('mEq/ml', 'mL', 'mEq');
INSERT INTO ehr_lookups.conc_units VALUES ('IU/ml', 'mL', 'IU');
--INSERT INTO ehr_lookups.conc_units VALUES ('600 IU/720 uL', '720 uL', '600 IU');
INSERT INTO ehr_lookups.conc_units VALUES ('mg/tsp', 'tsp', 'mg');
INSERT INTO ehr_lookups.conc_units VALUES ('g/tsp','tsp', 'g');



-- ----------------------------
-- Table structure for ehr_lookups.encounter_types
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.encounter_types;
CREATE TABLE ehr_lookups.encounter_types (
type varchar(255) not null,

CONSTRAINT PK_encounter_types PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of encounter_types
-- ----------------------------
INSERT INTO ehr_lookups.encounter_types VALUES ('Physical Exam');
INSERT INTO ehr_lookups.encounter_types VALUES ('Necropsy');
INSERT INTO ehr_lookups.encounter_types VALUES ('Procedure - Experimental');
INSERT INTO ehr_lookups.encounter_types VALUES ('Procedure - Other');
INSERT INTO ehr_lookups.encounter_types VALUES ('Surgery');


-- ----------------------------
-- Table structure for ehr_lookups.gender_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.gender_codes;
CREATE TABLE ehr_lookups.gender_codes (
Code varchar(255) not null,
Meaning varchar(255) DEFAULT NULL,
origGender varchar(255) DEFAULT NULL,

CONSTRAINT PK_gender_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of gender_codes
-- ----------------------------
INSERT INTO ehr_lookups.gender_codes VALUES ('c', 'ovexed (female castrate)', 'f');
INSERT INTO ehr_lookups.gender_codes VALUES ('e', 'male castrate', 'm');
INSERT INTO ehr_lookups.gender_codes VALUES ('f', 'Female', 'f');
INSERT INTO ehr_lookups.gender_codes VALUES ('h', 'hermaphrodite', '');
INSERT INTO ehr_lookups.gender_codes VALUES ('m', 'male', 'm');
INSERT INTO ehr_lookups.gender_codes VALUES ('v', 'vasectomized', 'm');





-- ----------------------------
-- Table structure for hematology_morphology
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.hematology_morphology;
CREATE TABLE ehr_lookups.hematology_morphology (
morphology varchar(255) NOT NULL,

CONSTRAINT PK_hematology_morphology PRIMARY KEY (morphology)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of hematology_morphology
-- ----------------------------
INSERT INTO ehr_lookups.hematology_morphology VALUES ('MICROCYTOSIS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('ANISOCYTOSIS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('HOWELL JOLLY');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('HYPOCHROMIA');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('MACROCYTOSIS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('POIKILOCYTOSIS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('POLYCHROMASIA');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('SMUDGE CELLS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('SPHEROCYTES');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('HYPER SEGS');
INSERT INTO ehr_lookups.hematology_morphology VALUES ('TOXIC CHANGE');

-- ----------------------------
-- Table structure for hematology_score
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.hematology_score;
CREATE TABLE ehr_lookups.hematology_score (
score varchar(255) NOT NULL,

CONSTRAINT PK_hematology_score PRIMARY KEY (score)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of hematology_score
-- ----------------------------
INSERT INTO ehr_lookups.hematology_score VALUES ('slight');
INSERT INTO ehr_lookups.hematology_score VALUES ('moderate');
INSERT INTO ehr_lookups.hematology_score VALUES ('marked');



-- ----------------------------
-- Table structure for ehr_lookups.hold_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.hold_codes;
CREATE TABLE ehr_lookups.hold_codes (
Code varchar(255) not null,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_hold_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of hold_codes
-- ----------------------------
INSERT INTO ehr_lookups.hold_codes VALUES ('ab', 'abortion');
INSERT INTO ehr_lookups.hold_codes VALUES ('ag', 'aging - reserves to replace animals in ni');
INSERT INTO ehr_lookups.hold_codes VALUES ('bv', 'Bavister');
INSERT INTO ehr_lookups.hold_codes VALUES ('db', 'diabetic');
INSERT INTO ehr_lookups.hold_codes VALUES ('ds', 'Doctor Stafford');
INSERT INTO ehr_lookups.hold_codes VALUES ('gg', 'Goy group');
INSERT INTO ehr_lookups.hold_codes VALUES ('iv', 'in vitro');
INSERT INTO ehr_lookups.hold_codes VALUES ('ni', 'National Institute of Aging (funded)');
INSERT INTO ehr_lookups.hold_codes VALUES ('sa', 'for sale');
INSERT INTO ehr_lookups.hold_codes VALUES ('sb', 'stillborn');
INSERT INTO ehr_lookups.hold_codes VALUES ('tp', 'testosterone propanate');
INSERT INTO ehr_lookups.hold_codes VALUES ('tt', 'dihydrotestosterone');

-- ----------------------------
-- Table structure for ehr_lookups.integers
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.integers;
CREATE TABLE ehr_lookups.integers (
Key int4 not null,

CONSTRAINT PK_integers PRIMARY KEY (key)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of integers
-- ----------------------------
INSERT INTO ehr_lookups.integers VALUES ('0');
INSERT INTO ehr_lookups.integers VALUES ('1');
INSERT INTO ehr_lookups.integers VALUES ('2');
INSERT INTO ehr_lookups.integers VALUES ('3');
INSERT INTO ehr_lookups.integers VALUES ('4');
INSERT INTO ehr_lookups.integers VALUES ('5');
INSERT INTO ehr_lookups.integers VALUES ('6');
INSERT INTO ehr_lookups.integers VALUES ('7');
INSERT INTO ehr_lookups.integers VALUES ('8');
INSERT INTO ehr_lookups.integers VALUES ('9');
INSERT INTO ehr_lookups.integers VALUES ('10');
INSERT INTO ehr_lookups.integers VALUES ('11');
INSERT INTO ehr_lookups.integers VALUES ('12');
INSERT INTO ehr_lookups.integers VALUES ('13');
INSERT INTO ehr_lookups.integers VALUES ('14');
INSERT INTO ehr_lookups.integers VALUES ('15');
INSERT INTO ehr_lookups.integers VALUES ('16');
INSERT INTO ehr_lookups.integers VALUES ('17');
INSERT INTO ehr_lookups.integers VALUES ('18');
INSERT INTO ehr_lookups.integers VALUES ('19');
INSERT INTO ehr_lookups.integers VALUES ('20');
INSERT INTO ehr_lookups.integers VALUES ('21');
INSERT INTO ehr_lookups.integers VALUES ('22');
INSERT INTO ehr_lookups.integers VALUES ('23');
INSERT INTO ehr_lookups.integers VALUES ('24');
INSERT INTO ehr_lookups.integers VALUES ('25');
INSERT INTO ehr_lookups.integers VALUES ('26');
INSERT INTO ehr_lookups.integers VALUES ('27');
INSERT INTO ehr_lookups.integers VALUES ('28');
INSERT INTO ehr_lookups.integers VALUES ('29');
INSERT INTO ehr_lookups.integers VALUES ('30');
INSERT INTO ehr_lookups.integers VALUES ('31');
INSERT INTO ehr_lookups.integers VALUES ('32');
INSERT INTO ehr_lookups.integers VALUES ('33');
INSERT INTO ehr_lookups.integers VALUES ('34');
INSERT INTO ehr_lookups.integers VALUES ('35');
INSERT INTO ehr_lookups.integers VALUES ('36');
INSERT INTO ehr_lookups.integers VALUES ('37');
INSERT INTO ehr_lookups.integers VALUES ('38');
INSERT INTO ehr_lookups.integers VALUES ('39');
INSERT INTO ehr_lookups.integers VALUES ('40');
INSERT INTO ehr_lookups.integers VALUES ('41');
INSERT INTO ehr_lookups.integers VALUES ('42');
INSERT INTO ehr_lookups.integers VALUES ('43');
INSERT INTO ehr_lookups.integers VALUES ('44');
INSERT INTO ehr_lookups.integers VALUES ('45');
INSERT INTO ehr_lookups.integers VALUES ('46');
INSERT INTO ehr_lookups.integers VALUES ('47');
INSERT INTO ehr_lookups.integers VALUES ('48');
INSERT INTO ehr_lookups.integers VALUES ('49');
INSERT INTO ehr_lookups.integers VALUES ('50');
INSERT INTO ehr_lookups.integers VALUES ('51');
INSERT INTO ehr_lookups.integers VALUES ('52');
INSERT INTO ehr_lookups.integers VALUES ('53');
INSERT INTO ehr_lookups.integers VALUES ('54');
INSERT INTO ehr_lookups.integers VALUES ('55');
INSERT INTO ehr_lookups.integers VALUES ('56');
INSERT INTO ehr_lookups.integers VALUES ('57');
INSERT INTO ehr_lookups.integers VALUES ('58');
INSERT INTO ehr_lookups.integers VALUES ('59');
INSERT INTO ehr_lookups.integers VALUES ('60');
INSERT INTO ehr_lookups.integers VALUES ('61');
INSERT INTO ehr_lookups.integers VALUES ('62');
INSERT INTO ehr_lookups.integers VALUES ('63');
INSERT INTO ehr_lookups.integers VALUES ('64');
INSERT INTO ehr_lookups.integers VALUES ('65');
INSERT INTO ehr_lookups.integers VALUES ('66');
INSERT INTO ehr_lookups.integers VALUES ('67');
INSERT INTO ehr_lookups.integers VALUES ('68');
INSERT INTO ehr_lookups.integers VALUES ('69');
INSERT INTO ehr_lookups.integers VALUES ('70');
INSERT INTO ehr_lookups.integers VALUES ('71');
INSERT INTO ehr_lookups.integers VALUES ('72');
INSERT INTO ehr_lookups.integers VALUES ('73');
INSERT INTO ehr_lookups.integers VALUES ('74');
INSERT INTO ehr_lookups.integers VALUES ('75');
INSERT INTO ehr_lookups.integers VALUES ('76');
INSERT INTO ehr_lookups.integers VALUES ('77');
INSERT INTO ehr_lookups.integers VALUES ('78');
INSERT INTO ehr_lookups.integers VALUES ('79');
INSERT INTO ehr_lookups.integers VALUES ('80');
INSERT INTO ehr_lookups.integers VALUES ('81');
INSERT INTO ehr_lookups.integers VALUES ('82');
INSERT INTO ehr_lookups.integers VALUES ('83');
INSERT INTO ehr_lookups.integers VALUES ('84');
INSERT INTO ehr_lookups.integers VALUES ('85');
INSERT INTO ehr_lookups.integers VALUES ('86');
INSERT INTO ehr_lookups.integers VALUES ('87');
INSERT INTO ehr_lookups.integers VALUES ('88');
INSERT INTO ehr_lookups.integers VALUES ('89');
INSERT INTO ehr_lookups.integers VALUES ('90');
INSERT INTO ehr_lookups.integers VALUES ('91');
INSERT INTO ehr_lookups.integers VALUES ('92');
INSERT INTO ehr_lookups.integers VALUES ('93');
INSERT INTO ehr_lookups.integers VALUES ('94');
INSERT INTO ehr_lookups.integers VALUES ('95');
INSERT INTO ehr_lookups.integers VALUES ('96');
INSERT INTO ehr_lookups.integers VALUES ('97');
INSERT INTO ehr_lookups.integers VALUES ('98');
INSERT INTO ehr_lookups.integers VALUES ('99');
INSERT INTO ehr_lookups.integers VALUES ('100');



-- ----------------------------
-- Table structure for lab_test_range
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.lab_test_range;
CREATE TABLE ehr_lookups.lab_test_range (
test varchar(255) ,
species varchar(255) ,
gender varchar(255) ,
age_class int2 DEFAULT NULL,
ref_range_min double precision,
ref_range_max double precision,
RowId serial NOT NULL,

CONSTRAINT PK_lab_test_range PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;



-- ----------------------------
-- Records of lab_test_range
-- ----------------------------
INSERT INTO ehr_lookups.lab_test_range
(test, species, gender, age_class, ref_range_min, ref_range_max)
VALUES
('ALB', 'Cynomolgus', 'f', '1', null, null),
('ALB', 'Cynomolgus', 'f', '2', null, null),
('ALB', 'Cynomolgus', 'f', '3', '3', '5'),
('ALB', 'Cynomolgus', 'f', '4', null, null),
('ALB', 'Cynomolgus', 'm', '1', null, null),
('ALB', 'Cynomolgus', 'm', '2', null, null),
('ALB', 'Cynomolgus', 'm', '3', '4', '5'),
('ALB', 'Cynomolgus', 'm', '4', null, null),
('ALB', 'Marmoset', 'f', '1', null, null),
('ALB', 'Marmoset', 'f', '2', null, null),
('ALB', 'Marmoset', 'f', '3', '3', '6'),
('ALB', 'Marmoset', 'f', '4', null, null),
('ALB', 'Marmoset', 'm', '1', null, null),
('ALB', 'Marmoset', 'm', '2', null, null),
('ALB', 'Marmoset', 'm', '3', '4', '5'),
('ALB', 'Marmoset', 'm', '4', null, null),
('ALB', 'Rhesus', 'f', '1', '4', '4'),
('ALB', 'Rhesus', 'f', '2', '4', '5'),
('ALB', 'Rhesus', 'f', '3', '3', '5'),
('ALB', 'Rhesus', 'f', '4', '3', '4'),
('ALB', 'Rhesus', 'm', '1', '3', '5'),
('ALB', 'Rhesus', 'm', '2', '4', '5'),
('ALB', 'Rhesus', 'm', '3', '4', '5'),
('ALB', 'Rhesus', 'm', '4', '3', '4'),
('ALKP', 'Cynomolgus', 'f', '1', null, null),
('ALKP', 'Cynomolgus', 'f', '2', null, null),
('ALKP', 'Cynomolgus', 'f', '3', '99', '227'),
('ALKP', 'Cynomolgus', 'f', '4', null, null),
('ALKP', 'Cynomolgus', 'm', '1', null, null),
('ALKP', 'Cynomolgus', 'm', '2', null, null),
('ALKP', 'Cynomolgus', 'm', '3', '30', '552'),
('ALKP', 'Cynomolgus', 'm', '4', null, null),
('ALKP', 'Marmoset', 'f', '1', null, null),
('ALKP', 'Marmoset', 'f', '2', null, null),
('ALKP', 'Marmoset', 'f', '3', '9', '185'),
('ALKP', 'Marmoset', 'f', '4', null, null),
('ALKP', 'Marmoset', 'm', '1', null, null),
('ALKP', 'Marmoset', 'm', '2', null, null),
('ALKP', 'Marmoset', 'm', '3', '47', '133'),
('ALKP', 'Marmoset', 'm', '4', null, null),
('ALKP', 'Rhesus', 'f', '1', '472', '1540'),
('ALKP', 'Rhesus', 'f', '2', '169', '810'),
('ALKP', 'Rhesus', 'f', '3', '33', '212'),
('ALKP', 'Rhesus', 'f', '4', '43', '228'),
('ALKP', 'Rhesus', 'm', '1', '482', '1433'),
('ALKP', 'Rhesus', 'm', '2', '315', '802'),
('ALKP', 'Rhesus', 'm', '3', '28', '221'),
('ALKP', 'Rhesus', 'm', '4', '50', '199'),
('BUN', 'Cynomolgus', 'f', '1', null, null),
('BUN', 'Cynomolgus', 'f', '2', null, null),
('BUN', 'Cynomolgus', 'f', '3', '8', '24'),
('BUN', 'Cynomolgus', 'f', '4', null, null),
('BUN', 'Cynomolgus', 'm', '1', null, null),
('BUN', 'Cynomolgus', 'm', '2', null, null),
('BUN', 'Cynomolgus', 'm', '3', '11', '21'),
('BUN', 'Cynomolgus', 'm', '4', null, null),
('BUN', 'Marmoset', 'f', '1', null, null),
('BUN', 'Marmoset', 'f', '2', null, null),
('BUN', 'Marmoset', 'f', '3', '14', '31'),
('BUN', 'Marmoset', 'f', '4', null, null),
('BUN', 'Marmoset', 'm', '1', null, null),
('BUN', 'Marmoset', 'm', '2', null, null),
('BUN', 'Marmoset', 'm', '3', '13', '35'),
('BUN', 'Marmoset', 'm', '4', null, null),
('BUN', 'Rhesus', 'f', '1', '6', '23'),
('BUN', 'Rhesus', 'f', '2', '11', '37'),
('BUN', 'Rhesus', 'f', '3', '11', '27'),
('BUN', 'Rhesus', 'f', '4', '7', '29'),
('BUN', 'Rhesus', 'm', '1', '4', '30'),
('BUN', 'Rhesus', 'm', '2', '12', '30'),
('BUN', 'Rhesus', 'm', '3', '10', '26'),
('BUN', 'Rhesus', 'm', '4', '12', '27'),
('CA', 'Cynomolgus', 'f', '1', null, null),
('CA', 'Cynomolgus', 'f', '2', null, null),
('CA', 'Cynomolgus', 'f', '3', '9', '11'),
('CA', 'Cynomolgus', 'f', '4', null, null),
('CA', 'Cynomolgus', 'm', '1', null, null),
('CA', 'Cynomolgus', 'm', '2', null, null),
('CA', 'Cynomolgus', 'm', '3', '9', '11'),
('CA', 'Cynomolgus', 'm', '4', null, null),
('CA', 'Marmoset', 'f', '1', null, null),
('CA', 'Marmoset', 'f', '2', null, null),
('CA', 'Marmoset', 'f', '3', '9', '12'),
('CA', 'Marmoset', 'f', '4', null, null),
('CA', 'Marmoset', 'm', '1', null, null),
('CA', 'Marmoset', 'm', '2', null, null),
('CA', 'Marmoset', 'm', '3', '9', '12'),
('CA', 'Marmoset', 'm', '4', null, null),
('CA', 'Rhesus', 'f', '1', '10', '12'),
('CA', 'Rhesus', 'f', '2', '9', '11'),
('CA', 'Rhesus', 'f', '3', '9', '11'),
('CA', 'Rhesus', 'f', '4', '9', '11'),
('CA', 'Rhesus', 'm', '1', '10', '12'),
('CA', 'Rhesus', 'm', '2', '9', '11'),
('CA', 'Rhesus', 'm', '3', '9', '11'),
('CA', 'Rhesus', 'm', '4', '9', '11'),
('CHOL', 'Cynomolgus', 'f', '1', null, null),
('CHOL', 'Cynomolgus', 'f', '2', null, null),
('CHOL', 'Cynomolgus', 'f', '3', '77', '173'),
('CHOL', 'Cynomolgus', 'f', '4', null, null),
('CHOL', 'Cynomolgus', 'm', '1', null, null),
('CHOL', 'Cynomolgus', 'm', '2', null, null),
('CHOL', 'Cynomolgus', 'm', '3', '63', '157'),
('CHOL', 'Cynomolgus', 'm', '4', null, null),
('CHOL', 'Marmoset', 'f', '1', null, null),
('CHOL', 'Marmoset', 'f', '2', null, null),
('CHOL', 'Marmoset', 'f', '3', '64', '180'),
('CHOL', 'Marmoset', 'f', '4', null, null),
('CHOL', 'Marmoset', 'm', '1', null, null),
('CHOL', 'Marmoset', 'm', '2', null, null),
('CHOL', 'Marmoset', 'm', '3', '97', '264'),
('CHOL', 'Marmoset', 'm', '4', null, null),
('CHOL', 'Rhesus', 'f', '1', '108', '266'),
('CHOL', 'Rhesus', 'f', '2', '108', '195'),
('CHOL', 'Rhesus', 'f', '3', '99', '219'),
('CHOL', 'Rhesus', 'f', '4', '100', '192'),
('CHOL', 'Rhesus', 'm', '1', '109', '295'),
('CHOL', 'Rhesus', 'm', '2', '100', '196'),
('CHOL', 'Rhesus', 'm', '3', '93', '200'),
('CHOL', 'Rhesus', 'm', '4', '86', '202'),
('CL', 'Cynomolgus', 'f', '1', null, null),
('CL', 'Cynomolgus', 'f', '2', null, null),
('CL', 'Cynomolgus', 'f', '3', '104', '110'),
('CL', 'Cynomolgus', 'f', '4', null, null),
('CL', 'Cynomolgus', 'm', '1', null, null),
('CL', 'Cynomolgus', 'm', '2', null, null),
('CL', 'Cynomolgus', 'm', '3', '102', '110'),
('CL', 'Cynomolgus', 'm', '4', null, null),
('CL', 'Marmoset', 'f', '1', null, null),
('CL', 'Marmoset', 'f', '2', null, null),
('CL', 'Marmoset', 'f', '3', '105', '117'),
('CL', 'Marmoset', 'f', '4', null, null),
('CL', 'Marmoset', 'm', '1', null, null),
('CL', 'Marmoset', 'm', '2', null, null),
('CL', 'Marmoset', 'm', '3', '104', '116'),
('CL', 'Marmoset', 'm', '4', null, null),
('CL', 'Rhesus', 'f', '1', '107', '115'),
('CL', 'Rhesus', 'f', '2', '104', '117'),
('CL', 'Rhesus', 'f', '3', '104', '116'),
('CL', 'Rhesus', 'f', '4', '103', '115'),
('CL', 'Rhesus', 'm', '1', '105', '116'),
('CL', 'Rhesus', 'm', '2', '104', '114'),
('CL', 'Rhesus', 'm', '3', '104', '114'),
('CL', 'Rhesus', 'm', '4', '105', '114'),
('CPK', 'Cynomolgus', 'f', '1', null, null),
('CPK', 'Cynomolgus', 'f', '2', null, null),
('CPK', 'Cynomolgus', 'f', '3', '0', '1452'),
('CPK', 'Cynomolgus', 'f', '4', null, null),
('CPK', 'Cynomolgus', 'm', '1', null, null),
('CPK', 'Cynomolgus', 'm', '2', null, null),
('CPK', 'Cynomolgus', 'm', '3', '0', '1189'),
('CPK', 'Cynomolgus', 'm', '4', null, null),
('CPK', 'Marmoset', 'f', '1', null, null),
('CPK', 'Marmoset', 'f', '2', null, null),
('CPK', 'Marmoset', 'f', '3', null, null),
('CPK', 'Marmoset', 'f', '4', null, null),
('CPK', 'Marmoset', 'm', '1', null, null),
('CPK', 'Marmoset', 'm', '2', null, null),
('CPK', 'Marmoset', 'm', '3', null, null),
('CPK', 'Marmoset', 'm', '4', null, null),
('CPK', 'Rhesus', 'f', '1', '0', '933'),
('CPK', 'Rhesus', 'f', '2', '0', '1565'),
('CPK', 'Rhesus', 'f', '3', '0', '815'),
('CPK', 'Rhesus', 'f', '4', '0', '593'),
('CPK', 'Rhesus', 'm', '1', '0', '1164'),
('CPK', 'Rhesus', 'm', '2', '0', '938'),
('CPK', 'Rhesus', 'm', '3', '0', '326'),
('CPK', 'Rhesus', 'm', '4', '0', '611'),
('CREAT', 'Cynomolgus', 'f', '1', null, null),
('CREAT', 'Cynomolgus', 'f', '2', null, null),
('CREAT', 'Cynomolgus', 'f', '3', '0', '1'),
('CREAT', 'Cynomolgus', 'f', '4', null, null),
('CREAT', 'Cynomolgus', 'm', '1', null, null),
('CREAT', 'Cynomolgus', 'm', '2', null, null),
('CREAT', 'Cynomolgus', 'm', '3', '1', '1'),
('CREAT', 'Cynomolgus', 'm', '4', null, null),
('CREAT', 'Marmoset', 'f', '1', null, null),
('CREAT', 'Marmoset', 'f', '2', null, null),
('CREAT', 'Marmoset', 'f', '3', '0', '1'),
('CREAT', 'Marmoset', 'f', '4', null, null),
('CREAT', 'Marmoset', 'm', '1', null, null),
('CREAT', 'Marmoset', 'm', '2', null, null),
('CREAT', 'Marmoset', 'm', '3', '0', '1'),
('CREAT', 'Marmoset', 'm', '4', null, null),
('CREAT', 'Rhesus', 'f', '1', '0', '1'),
('CREAT', 'Rhesus', 'f', '2', '1', '1'),
('CREAT', 'Rhesus', 'f', '3', '1', '1'),
('CREAT', 'Rhesus', 'f', '4', '1', '1'),
('CREAT', 'Rhesus', 'm', '1', '1', '1'),
('CREAT', 'Rhesus', 'm', '2', '1', '1'),
('CREAT', 'Rhesus', 'm', '3', '1', '2'),
('CREAT', 'Rhesus', 'm', '4', '1', '1'),
('FE', 'Cynomolgus', 'f', '1', null, null),
('FE', 'Cynomolgus', 'f', '2', null, null),
('FE', 'Cynomolgus', 'f', '3', '66', '174'),
('FE', 'Cynomolgus', 'f', '4', null, null),
('FE', 'Cynomolgus', 'm', '1', null, null),
('FE', 'Cynomolgus', 'm', '2', null, null),
('FE', 'Cynomolgus', 'm', '3', '94', '186'),
('FE', 'Cynomolgus', 'm', '4', null, null),
('FE', 'Marmoset', 'f', '1', null, null),
('FE', 'Marmoset', 'f', '2', null, null),
('FE', 'Marmoset', 'f', '3', '0', '243'),
('FE', 'Marmoset', 'f', '4', null, null),
('FE', 'Marmoset', 'm', '1', null, null),
('FE', 'Marmoset', 'm', '2', null, null),
('FE', 'Marmoset', 'm', '3', '72', '178'),
('FE', 'Marmoset', 'm', '4', null, null),
('FE', 'Rhesus', 'f', '1', '16', '199'),
('FE', 'Rhesus', 'f', '2', '48', '138'),
('FE', 'Rhesus', 'f', '3', '58', '192'),
('FE', 'Rhesus', 'f', '4', '39', '180'),
('FE', 'Rhesus', 'm', '1', '44', '186'),
('FE', 'Rhesus', 'm', '2', '69', '187'),
('FE', 'Rhesus', 'm', '3', '91', '209'),
('FE', 'Rhesus', 'm', '4', '76', '172'),
('GGT', 'Cynomolgus', 'f', '1', null, null),
('GGT', 'Cynomolgus', 'f', '2', null, null),
('GGT', 'Cynomolgus', 'f', '3', '14', '88'),
('GGT', 'Cynomolgus', 'f', '4', null, null),
('GGT', 'Cynomolgus', 'm', '1', null, null),
('GGT', 'Cynomolgus', 'm', '2', null, null),
('GGT', 'Cynomolgus', 'm', '3', '28', '116'),
('GGT', 'Cynomolgus', 'm', '4', null, null),
('GGT', 'Marmoset', 'f', '1', null, null),
('GGT', 'Marmoset', 'f', '2', null, null),
('GGT', 'Marmoset', 'f', '3', '0', '30'),
('GGT', 'Marmoset', 'f', '4', null, null),
('GGT', 'Marmoset', 'm', '1', null, null),
('GGT', 'Marmoset', 'm', '2', null, null),
('GGT', 'Marmoset', 'm', '3', '0', '17'),
('GGT', 'Marmoset', 'm', '4', null, null),
('GGT', 'Rhesus', 'f', '1', '64', '146'),
('GGT', 'Rhesus', 'f', '2', '39', '95'),
('GGT', 'Rhesus', 'f', '3', '23', '57'),
('GGT', 'Rhesus', 'f', '4', '21', '57'),
('GGT', 'Rhesus', 'm', '1', '51', '180'),
('GGT', 'Rhesus', 'm', '2', '47', '106'),
('GGT', 'Rhesus', 'm', '3', '24', '81'),
('GGT', 'Rhesus', 'm', '4', '23', '86'),
('GLUC', 'Cynomolgus', 'f', '1', null, null),
('GLUC', 'Cynomolgus', 'f', '2', null, null),
('GLUC', 'Cynomolgus', 'f', '3', '36', '90'),
('GLUC', 'Cynomolgus', 'f', '4', null, null),
('GLUC', 'Cynomolgus', 'm', '1', null, null),
('GLUC', 'Cynomolgus', 'm', '2', null, null),
('GLUC', 'Cynomolgus', 'm', '3', '22', '80'),
('GLUC', 'Cynomolgus', 'm', '4', null, null),
('GLUC', 'Marmoset', 'f', '1', null, null),
('GLUC', 'Marmoset', 'f', '2', null, null),
('GLUC', 'Marmoset', 'f', '3', '55', '211'),
('GLUC', 'Marmoset', 'f', '4', null, null),
('GLUC', 'Marmoset', 'm', '1', null, null),
('GLUC', 'Marmoset', 'm', '2', null, null),
('GLUC', 'Marmoset', 'm', '3', '56', '172'),
('GLUC', 'Marmoset', 'm', '4', null, null),
('GLUC', 'Rhesus', 'f', '1', '62', '132'),
('GLUC', 'Rhesus', 'f', '2', '42', '110'),
('GLUC', 'Rhesus', 'f', '3', '43', '97'),
('GLUC', 'Rhesus', 'f', '4', '40', '108'),
('GLUC', 'Rhesus', 'm', '1', '67', '125'),
('GLUC', 'Rhesus', 'm', '2', '49', '105'),
('GLUC', 'Rhesus', 'm', '3', '42', '97'),
('GLUC', 'Rhesus', 'm', '4', '41', '97'),
('HCT', 'Cynomolgus', 'f', '1', '32', '44'),
('HCT', 'Cynomolgus', 'm', '1', '34', '46'),
('HCT', 'Rhesus', 'f', '1', '38', '48'),
('HCT', 'Rhesus', 'f', '2', '32', '45'),
('HCT', 'Rhesus', 'f', '3', '36', '49'),
('HCT', 'Rhesus', 'f', '4', '38', '52'),
('HCT', 'Rhesus', 'm', '1', '39', '46'),
('HCT', 'Rhesus', 'm', '2', '35', '46'),
('HCT', 'Rhesus', 'm', '3', '41', '51'),
('HCT', 'Rhesus', 'm', '4', '39', '52'),
('HGB', 'Cynomolgus', 'f', '1', '11', '14'),
('HGB', 'Cynomolgus', 'm', '1', '11', '15'),
('HGB', 'Rhesus', 'f', '1', '12', '15'),
('HGB', 'Rhesus', 'f', '2', '11', '14'),
('HGB', 'Rhesus', 'f', '3', '12', '16'),
('HGB', 'Rhesus', 'f', '4', '12', '17'),
('HGB', 'Rhesus', 'm', '1', '13', '15'),
('HGB', 'Rhesus', 'm', '2', '12', '15'),
('HGB', 'Rhesus', 'm', '3', '13', '16'),
('HGB', 'Rhesus', 'm', '4', '13', '17'),
('K', 'Cynomolgus', 'f', '1', null, null),
('K', 'Cynomolgus', 'f', '2', null, null),
('K', 'Cynomolgus', 'f', '3', '3', '4'),
('K', 'Cynomolgus', 'f', '4', null, null),
('K', 'Cynomolgus', 'm', '1', null, null),
('K', 'Cynomolgus', 'm', '2', null, null),
('K', 'Cynomolgus', 'm', '3', '3', '5'),
('K', 'Cynomolgus', 'm', '4', null, null),
('K', 'Marmoset', 'f', '1', null, null),
('K', 'Marmoset', 'f', '2', null, null),
('K', 'Marmoset', 'f', '3', '3', '6'),
('K', 'Marmoset', 'f', '4', null, null),
('K', 'Marmoset', 'm', '1', null, null),
('K', 'Marmoset', 'm', '2', null, null),
('K', 'Marmoset', 'm', '3', '3', '5'),
('K', 'Marmoset', 'm', '4', null, null),
('K', 'Rhesus', 'f', '1', '3', '6'),
('K', 'Rhesus', 'f', '2', '3', '4'),
('K', 'Rhesus', 'f', '3', '3', '5'),
('K', 'Rhesus', 'f', '4', '3', '5'),
('K', 'Rhesus', 'm', '1', '3', '6'),
('K', 'Rhesus', 'm', '2', '3', '5'),
('K', 'Rhesus', 'm', '3', '3', '5'),
('K', 'Rhesus', 'm', '4', '4', '5'),
('LDH', 'Cynomolgus', 'f', '1', null, null),
('LDH', 'Cynomolgus', 'f', '2', null, null),
('LDH', 'Cynomolgus', 'f', '3', '68', '1100'),
('LDH', 'Cynomolgus', 'f', '4', null, null),
('LDH', 'Cynomolgus', 'm', '1', null, null),
('LDH', 'Cynomolgus', 'm', '2', null, null),
('LDH', 'Cynomolgus', 'm', '3', '0', '1544'),
('LDH', 'Cynomolgus', 'm', '4', null, null),
('LDH', 'Marmoset', 'f', '1', null, null),
('LDH', 'Marmoset', 'f', '2', null, null),
('LDH', 'Marmoset', 'f', '3', '100', '266'),
('LDH', 'Marmoset', 'f', '4', null, null),
('LDH', 'Marmoset', 'm', '1', null, null),
('LDH', 'Marmoset', 'm', '2', null, null),
('LDH', 'Marmoset', 'm', '3', '103', '253'),
('LDH', 'Marmoset', 'm', '4', null, null),
('LDH', 'Rhesus', 'f', '1', '190', '542'),
('LDH', 'Rhesus', 'f', '2', '78', '718'),
('LDH', 'Rhesus', 'f', '3', '45', '469'),
('LDH', 'Rhesus', 'f', '4', '46', '636'),
('LDH', 'Rhesus', 'm', '1', '165', '659'),
('LDH', 'Rhesus', 'm', '2', '180', '535'),
('LDH', 'Rhesus', 'm', '3', '94', '503'),
('LDH', 'Rhesus', 'm', '4', '50', '630'),
('MCH', 'Cynomolgus', 'f', '1', '23', '26'),
('MCH', 'Cynomolgus', 'm', '1', '23', '27'),
('MCH', 'Rhesus', 'f', '1', '22', '24'),
('MCH', 'Rhesus', 'f', '2', '21', '26'),
('MCH', 'Rhesus', 'f', '3', '22', '26'),
('MCH', 'Rhesus', 'f', '4', '21', '26'),
('MCH', 'Rhesus', 'm', '1', '21', '26'),
('MCH', 'Rhesus', 'm', '2', '22', '25'),
('MCH', 'Rhesus', 'm', '3', '23', '27'),
('MCH', 'Rhesus', 'm', '4', '22', '26'),
('MCHC', 'Cynomolgus', 'f', '1', '32', '34'),
('MCHC', 'Cynomolgus', 'm', '1', '32', '34'),
('MCHC', 'Rhesus', 'f', '1', '31', '33'),
('MCHC', 'Rhesus', 'f', '2', '31', '34'),
('MCHC', 'Rhesus', 'f', '3', '30', '34'),
('MCHC', 'Rhesus', 'f', '4', '30', '34'),
('MCHC', 'Rhesus', 'm', '1', '31', '33'),
('MCHC', 'Rhesus', 'm', '2', '31', '34'),
('MCHC', 'Rhesus', 'm', '3', '30', '34'),
('MCHC', 'Rhesus', 'm', '4', '31', '34'),
('MCV', 'Cynomolgus', 'f', '1', '68', '80'),
('MCV', 'Cynomolgus', 'm', '1', '72', '82'),
('MCV', 'Rhesus', 'f', '1', '68', '76'),
('MCV', 'Rhesus', 'f', '2', '67', '76'),
('MCV', 'Rhesus', 'f', '3', '69', '80'),
('MCV', 'Rhesus', 'f', '4', '69', '81'),
('MCV', 'Rhesus', 'm', '1', '68', '79'),
('MCV', 'Rhesus', 'm', '2', '70', '76'),
('MCV', 'Rhesus', 'm', '3', '72', '84'),
('MCV', 'Rhesus', 'm', '4', '70', '81'),
('MPV', 'Cynomolgus', 'f', '1', '8', '11'),
('MPV', 'Cynomolgus', 'm', '1', '8', '11'),
('MPV', 'Rhesus', 'f', '1', '9', '13'),
('MPV', 'Rhesus', 'f', '2', '8', '13'),
('MPV', 'Rhesus', 'f', '3', '8', '12'),
('MPV', 'Rhesus', 'f', '4', '7', '13'),
('MPV', 'Rhesus', 'm', '1', '8', '12'),
('MPV', 'Rhesus', 'm', '2', '8', '12'),
('MPV', 'Rhesus', 'm', '3', '8', '12'),
('MPV', 'Rhesus', 'm', '4', '7', '11'),
('NA', 'Cynomolgus', 'f', '1', null, null),
('NA', 'Cynomolgus', 'f', '2', null, null),
('NA', 'Cynomolgus', 'f', '3', '143', '147'),
('NA', 'Cynomolgus', 'f', '4', null, null),
('NA', 'Cynomolgus', 'm', '1', null, null),
('NA', 'Cynomolgus', 'm', '2', null, null),
('NA', 'Cynomolgus', 'm', '3', '143', '149'),
('NA', 'Cynomolgus', 'm', '4', null, null),
('NA', 'Marmoset', 'f', '1', null, null),
('NA', 'Marmoset', 'f', '2', null, null),
('NA', 'Marmoset', 'f', '3', '146', '154'),
('NA', 'Marmoset', 'f', '4', null, null),
('NA', 'Marmoset', 'm', '1', null, null),
('NA', 'Marmoset', 'm', '2', null, null),
('NA', 'Marmoset', 'm', '3', '148', '157'),
('NA', 'Marmoset', 'm', '4', null, null),
('NA', 'Rhesus', 'f', '1', '140', '149'),
('NA', 'Rhesus', 'f', '2', '141', '150'),
('NA', 'Rhesus', 'f', '3', '141', '152'),
('NA', 'Rhesus', 'f', '4', '140', '151'),
('NA', 'Rhesus', 'm', '1', '141', '150'),
('NA', 'Rhesus', 'm', '2', '140', '152'),
('NA', 'Rhesus', 'm', '3', '142', '153'),
('NA', 'Rhesus', 'm', '4', '143', '150'),
('PHOS', 'Cynomolgus', 'f', '1', null, null),
('PHOS', 'Cynomolgus', 'f', '2', null, null),
('PHOS', 'Cynomolgus', 'f', '3', '3', '6'),
('PHOS', 'Cynomolgus', 'f', '4', null, null),
('PHOS', 'Cynomolgus', 'm', '1', null, null),
('PHOS', 'Cynomolgus', 'm', '2', null, null),
('PHOS', 'Cynomolgus', 'm', '3', '4', '7'),
('PHOS', 'Cynomolgus', 'm', '4', null, null),
('PHOS', 'Marmoset', 'f', '1', null, null),
('PHOS', 'Marmoset', 'f', '2', null, null),
('PHOS', 'Marmoset', 'f', '3', '2', '7'),
('PHOS', 'Marmoset', 'f', '4', null, null),
('PHOS', 'Marmoset', 'm', '1', null, null),
('PHOS', 'Marmoset', 'm', '2', null, null),
('PHOS', 'Marmoset', 'm', '3', '3', '6'),
('PHOS', 'Marmoset', 'm', '4', null, null),
('PHOS', 'Rhesus', 'f', '1', '5', '8'),
('PHOS', 'Rhesus', 'f', '2', '3', '7'),
('PHOS', 'Rhesus', 'f', '3', '2', '6'),
('PHOS', 'Rhesus', 'f', '4', '2', '6'),
('PHOS', 'Rhesus', 'm', '1', '5', '8'),
('PHOS', 'Rhesus', 'm', '2', '4', '8'),
('PHOS', 'Rhesus', 'm', '3', '2', '6'),
('PHOS', 'Rhesus', 'm', '4', '3', '6'),
('PLT', 'Cynomolgus', 'f', '1', '232', '522'),
('PLT', 'Cynomolgus', 'm', '1', '269', '489'),
('PLT', 'Rhesus', 'f', '1', '341', '678'),
('PLT', 'Rhesus', 'f', '2', '277', '620'),
('PLT', 'Rhesus', 'f', '3', '229', '524'),
('PLT', 'Rhesus', 'f', '4', '197', '482'),
('PLT', 'Rhesus', 'm', '1', '333', '682'),
('PLT', 'Rhesus', 'm', '2', '308', '603'),
('PLT', 'Rhesus', 'm', '3', '231', '491'),
('PLT', 'Rhesus', 'm', '4', '236', '551'),
('RBC', 'Cynomolgus', 'f', '1', '4', '6'),
('RBC', 'Cynomolgus', 'm', '1', '4', '6'),
('RBC', 'Rhesus', 'f', '1', '5', '7'),
('RBC', 'Rhesus', 'f', '2', '4', '6'),
('RBC', 'Rhesus', 'f', '3', '5', '7'),
('RBC', 'Rhesus', 'f', '4', '5', '7'),
('RBC', 'Rhesus', 'm', '1', '5', '6'),
('RBC', 'Rhesus', 'm', '2', '5', '6'),
('RBC', 'Rhesus', 'm', '3', '5', '7'),
('RBC', 'Rhesus', 'm', '4', '5', '7'),
('RDW', 'Cynomolgus', 'f', '1', '11', '13'),
('RDW', 'Cynomolgus', 'm', '1', '11', '13'),
('RDW', 'Rhesus', 'f', '1', '11', '15'),
('RDW', 'Rhesus', 'f', '2', '11', '14'),
('RDW', 'Rhesus', 'f', '3', '11', '15'),
('RDW', 'Rhesus', 'f', '4', '11', '14'),
('RDW', 'Rhesus', 'm', '1', '11', '15'),
('RDW', 'Rhesus', 'm', '2', '12', '14'),
('RDW', 'Rhesus', 'm', '3', '11', '14'),
('RDW', 'Rhesus', 'm', '4', '10', '17'),
('SGOT', 'Cynomolgus', 'f', '1', null, null),
('SGOT', 'Cynomolgus', 'f', '2', null, null),
('SGOT', 'Cynomolgus', 'f', '3', '23', '63'),
('SGOT', 'Cynomolgus', 'f', '4', null, null),
('SGOT', 'Cynomolgus', 'm', '1', null, null),
('SGOT', 'Cynomolgus', 'm', '2', null, null),
('SGOT', 'Cynomolgus', 'm', '3', '24', '66'),
('SGOT', 'Cynomolgus', 'm', '4', null, null),
('SGOT', 'Marmoset', 'f', '1', null, null),
('SGOT', 'Marmoset', 'f', '2', null, null),
('SGOT', 'Marmoset', 'f', '3', '68', '178'),
('SGOT', 'Marmoset', 'f', '4', null, null),
('SGOT', 'Marmoset', 'm', '1', null, null),
('SGOT', 'Marmoset', 'm', '2', null, null),
('SGOT', 'Marmoset', 'm', '3', '89', '171'),
('SGOT', 'Marmoset', 'm', '4', null, null),
('SGOT', 'Rhesus', 'f', '1', '26', '69'),
('SGOT', 'Rhesus', 'f', '2', '23', '64'),
('SGOT', 'Rhesus', 'f', '3', '15', '48'),
('SGOT', 'Rhesus', 'f', '4', '17', '54'),
('SGOT', 'Rhesus', 'm', '1', '30', '70'),
('SGOT', 'Rhesus', 'm', '2', '29', '69'),
('SGOT', 'Rhesus', 'm', '3', '16', '50'),
('SGOT', 'Rhesus', 'm', '4', '22', '49'),
('SGPT', 'Cynomolgus', 'f', '1', null, null),
('SGPT', 'Cynomolgus', 'f', '2', null, null),
('SGPT', 'Cynomolgus', 'f', '3', '13', '69'),
('SGPT', 'Cynomolgus', 'f', '4', null, null),
('SGPT', 'Cynomolgus', 'm', '1', null, null),
('SGPT', 'Cynomolgus', 'm', '2', null, null),
('SGPT', 'Cynomolgus', 'm', '3', '18', '54'),
('SGPT', 'Cynomolgus', 'm', '4', null, null),
('SGPT', 'Marmoset', 'f', '1', null, null),
('SGPT', 'Marmoset', 'f', '2', null, null),
('SGPT', 'Marmoset', 'f', '3', '0', '17'),
('SGPT', 'Marmoset', 'f', '4', null, null),
('SGPT', 'Marmoset', 'm', '1', null, null),
('SGPT', 'Marmoset', 'm', '2', null, null),
('SGPT', 'Marmoset', 'm', '3', '1', '12'),
('SGPT', 'Marmoset', 'm', '4', null, null),
('SGPT', 'Rhesus', 'f', '1', '13', '39'),
('SGPT', 'Rhesus', 'f', '2', '18', '45'),
('SGPT', 'Rhesus', 'f', '3', '6', '48'),
('SGPT', 'Rhesus', 'f', '4', '9', '54'),
('SGPT', 'Rhesus', 'm', '1', '11', '45'),
('SGPT', 'Rhesus', 'm', '2', '16', '51'),
('SGPT', 'Rhesus', 'm', '3', '6', '64'),
('SGPT', 'Rhesus', 'm', '4', '13', '63'),
('TB', 'Cynomolgus', 'f', '1', null, null),
('TB', 'Cynomolgus', 'f', '2', null, null),
('TB', 'Cynomolgus', 'f', '3', '0', '0'),
('TB', 'Cynomolgus', 'f', '4', null, null),
('TB', 'Cynomolgus', 'm', '1', null, null),
('TB', 'Cynomolgus', 'm', '2', null, null),
('TB', 'Cynomolgus', 'm', '3', '0', '0'),
('TB', 'Cynomolgus', 'm', '4', null, null),
('TB', 'Marmoset', 'f', '1', null, null),
('TB', 'Marmoset', 'f', '2', null, null),
('TB', 'Marmoset', 'f', '3', '0', '0'),
('TB', 'Marmoset', 'f', '4', null, null),
('TB', 'Marmoset', 'm', '1', null, null),
('TB', 'Marmoset', 'm', '2', null, null),
('TB', 'Marmoset', 'm', '3', '0', '1'),
('TB', 'Marmoset', 'm', '4', null, null),
('TB', 'Rhesus', 'f', '1', '0', '0'),
('TB', 'Rhesus', 'f', '2', '0', '0'),
('TB', 'Rhesus', 'f', '3', '0', '1'),
('TB', 'Rhesus', 'f', '4', '0', '0'),
('TB', 'Rhesus', 'm', '1', '0', '0'),
('TB', 'Rhesus', 'm', '2', '0', '0'),
('TB', 'Rhesus', 'm', '3', '0', '0'),
('TB', 'Rhesus', 'm', '4', '0', '0'),
('TP', 'Cynomolgus', 'f', '1', null, null),
('TP', 'Cynomolgus', 'f', '2', null, null),
('TP', 'Cynomolgus', 'f', '3', '6', '8'),
('TP', 'Cynomolgus', 'f', '4', null, null),
('TP', 'Cynomolgus', 'm', '1', null, null),
('TP', 'Cynomolgus', 'm', '2', null, null),
('TP', 'Cynomolgus', 'm', '3', '7', '8'),
('TP', 'Cynomolgus', 'm', '4', null, null),
('TP', 'Marmoset', 'f', '1', null, null),
('TP', 'Marmoset', 'f', '2', null, null),
('TP', 'Marmoset', 'f', '3', '6', '9'),
('TP', 'Marmoset', 'f', '4', null, null),
('TP', 'Marmoset', 'm', '1', null, null),
('TP', 'Marmoset', 'm', '2', null, null),
('TP', 'Marmoset', 'm', '3', '7', '9'),
('TP', 'Marmoset', 'm', '4', null, null),
('TP', 'Rhesus', 'f', '1', '6', '7'),
('TP', 'Rhesus', 'f', '2', '6', '7'),
('TP', 'Rhesus', 'f', '3', '6', '8'),
('TP', 'Rhesus', 'f', '4', '6', '8'),
('TP', 'Rhesus', 'm', '1', '6', '8'),
('TP', 'Rhesus', 'm', '2', '6', '7'),
('TP', 'Rhesus', 'm', '3', '7', '8'),
('TP', 'Rhesus', 'm', '4', '6', '9'),
('TRIG', 'Cynomolgus', 'f', '1', null, null),
('TRIG', 'Cynomolgus', 'f', '2', null, null),
('TRIG', 'Cynomolgus', 'f', '3', '0', '98'),
('TRIG', 'Cynomolgus', 'f', '4', null, null),
('TRIG', 'Cynomolgus', 'm', '1', null, null),
('TRIG', 'Cynomolgus', 'm', '2', null, null),
('TRIG', 'Cynomolgus', 'm', '3', '5', '121'),
('TRIG', 'Cynomolgus', 'm', '4', null, null),
('TRIG', 'Marmoset', 'f', '1', null, null),
('TRIG', 'Marmoset', 'f', '2', null, null),
('TRIG', 'Marmoset', 'f', '3', '0', '541'),
('TRIG', 'Marmoset', 'f', '4', null, null),
('TRIG', 'Marmoset', 'm', '1', null, null),
('TRIG', 'Marmoset', 'm', '2', null, null),
('TRIG', 'Marmoset', 'm', '3', '4', '304'),
('TRIG', 'Marmoset', 'm', '4', null, null),
('TRIG', 'Rhesus', 'f', '1', '15', '68'),
('TRIG', 'Rhesus', 'f', '2', '0', '96'),
('TRIG', 'Rhesus', 'f', '3', '0', '164'),
('TRIG', 'Rhesus', 'f', '4', '0', '385'),
('TRIG', 'Rhesus', 'm', '1', '2', '92'),
('TRIG', 'Rhesus', 'm', '2', '0', '128'),
('TRIG', 'Rhesus', 'm', '3', '0', '119'),
('TRIG', 'Rhesus', 'm', '4', '0', '305'),
('UA', 'Marmoset', 'f', '1', null, null),
('UA', 'Marmoset', 'f', '2', null, null),
('UA', 'Marmoset', 'f', '3', null, null),
('UA', 'Marmoset', 'f', '4', null, null),
('UA', 'Marmoset', 'm', '1', null, null),
('UA', 'Marmoset', 'm', '2', null, null),
('UA', 'Marmoset', 'm', '3', null, null),
('UA', 'Marmoset', 'm', '4', null, null),
('WBC', 'Cynomolgus', 'f', '1', '6', '18'),
('WBC', 'Cynomolgus', 'm', '1', '8', '16'),
('WBC', 'Rhesus', 'f', '1', '7', '21'),
('WBC', 'Rhesus', 'f', '2', '4', '20'),
('WBC', 'Rhesus', 'f', '3', '4', '16'),
('WBC', 'Rhesus', 'f', '4', '4', '13'),
('WBC', 'Rhesus', 'm', '1', '7', '18'),
('WBC', 'Rhesus', 'm', '2', '6', '18'),
('WBC', 'Rhesus', 'm', '3', '4', '12'),
('WBC', 'Rhesus', 'm', '4', '4', '13');

-- ----------------------------
-- Table structure for mhc_institutions
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.mhc_institutions;
CREATE TABLE ehr_lookups.mhc_institutions (
technique varchar(255) NOT NULL,

CONSTRAINT PK_mhc_institutions PRIMARY KEY (technique)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of mhc_institutions
-- ----------------------------


-- ----------------------------
-- Table structure for ehr_lookups.months
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.months;
CREATE TABLE ehr_lookups.months (
rowId serial not null,
month varchar(255) not null,

CONSTRAINT PK_months PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of months
-- ----------------------------
INSERT into ehr_lookups.months (month) VALUES
('January'),
('February'),
('March'),
('April'),
('May'),
('June'),
('July'),
('August'),
('September'),
('October'),
('November'),
('December');



-- ----------------------------
-- Table structure for necropsy_condition
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.necropsy_condition;
CREATE TABLE ehr_lookups.necropsy_condition (
score varchar(255) NOT NULL,

CONSTRAINT PK_necropsy_condition PRIMARY KEY (score)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Records of necropsy_condition
-- ----------------------------

-- ----------------------------
-- Table structure for necropsy_perfusion
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.necropsy_perfusion;
CREATE TABLE ehr_lookups.necropsy_perfusion (
perfusion varchar(255) NOT NULL,

CONSTRAINT PK_perfusion PRIMARY KEY (perfusion)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of necropsy_perfusion
-- ----------------------------
INSERT INTO ehr_lookups.necropsy_perfusion VALUES ('4% PFA');
INSERT INTO ehr_lookups.necropsy_perfusion VALUES ('2% PFA');
INSERT INTO ehr_lookups.necropsy_perfusion VALUES ('Saline');
INSERT INTO ehr_lookups.necropsy_perfusion VALUES ('Other');

-- ----------------------------
-- Table structure for necropsy_perfusion_area
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.necropsy_perfusion_area;
CREATE TABLE ehr_lookups.necropsy_perfusion_area (
perfusion varchar(255) NOT NULL,

CONSTRAINT PK_perfusion_area PRIMARY KEY (perfusion)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of necropsy_perfusion_area
-- ----------------------------
INSERT INTO ehr_lookups.necropsy_perfusion_area VALUES ('Upper Body');
INSERT INTO ehr_lookups.necropsy_perfusion_area VALUES ('Whole Body');

-- ----------------------------
-- Table structure for pairtest_bhav
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.pairtest_bhav;
CREATE TABLE ehr_lookups.pairtest_bhav (
value varchar(255) NOT NULL,

CONSTRAINT PK_pairtest_bhav PRIMARY KEY (value)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of pairtest_bhav
-- ----------------------------
INSERT INTO ehr_lookups.pairtest_bhav VALUES ('gradual');
INSERT INTO ehr_lookups.pairtest_bhav VALUES ('protected contact');
INSERT INTO ehr_lookups.pairtest_bhav VALUES ('re-pair');

-- ----------------------------
-- Table structure for pairtest_conclusion
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.pairtest_conclusion;
CREATE TABLE ehr_lookups.pairtest_conclusion (
value varchar(255) NOT NULL,

CONSTRAINT PK_pairtest_conclusion PRIMARY KEY (value)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of pairtest_conclusion
-- ----------------------------
INSERT INTO ehr_lookups.pairtest_conclusion VALUES ('Compatible, will pair');
INSERT INTO ehr_lookups.pairtest_conclusion VALUES ('Incompatible, will not pair');
INSERT INTO ehr_lookups.pairtest_conclusion VALUES ('Inconclusive, another test is needed');
INSERT INTO ehr_lookups.pairtest_conclusion VALUES ('Successfully paired');

-- ----------------------------
-- Table structure for pe_region
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.pe_region;
CREATE TABLE ehr_lookups.pe_region (
region varchar(255) NOT NULL,

CONSTRAINT PK_pe_region PRIMARY KEY (region)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of pe_region
-- ----------------------------
INSERT INTO ehr_lookups.pe_region VALUES ('Head');
INSERT INTO ehr_lookups.pe_region VALUES ('Lymph Nodes');
INSERT INTO ehr_lookups.pe_region VALUES ('Cardiac Auscultation');
INSERT INTO ehr_lookups.pe_region VALUES ('Thoracic Auscultation');
INSERT INTO ehr_lookups.pe_region VALUES ('Abdominal Palpation');
INSERT INTO ehr_lookups.pe_region VALUES ('Joints');
INSERT INTO ehr_lookups.pe_region VALUES ('Other');



-- ----------------------------
-- Table structure for ehr_lookups.obs_behavior
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_behavior;
CREATE TABLE ehr_lookups.obs_behavior (
code varchar not null,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_obs_behavior PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_behavior
-- ----------------------------
INSERT INTO ehr_lookups.obs_behavior VALUES ('NP', null);
INSERT INTO ehr_lookups.obs_behavior VALUES ('OG', null);
INSERT INTO ehr_lookups.obs_behavior VALUES ('P', null);
INSERT INTO ehr_lookups.obs_behavior VALUES ('S', null);
INSERT INTO ehr_lookups.obs_behavior VALUES ('F', null);
INSERT INTO ehr_lookups.obs_behavior VALUES ('SIB', null);

-- ----------------------------
-- Table structure for ehr_lookups.obs_breeding
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_breeding;
CREATE TABLE ehr_lookups.obs_breeding (
code varchar not null,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_osb_breeding PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_breeding
-- ----------------------------
INSERT INTO ehr_lookups.obs_breeding VALUES ('E', null);
INSERT INTO ehr_lookups.obs_breeding VALUES ('NOE', null);
INSERT INTO ehr_lookups.obs_breeding VALUES ('N/A', null);

-- ----------------------------
-- Table structure for ehr_lookups.obs_feces
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_feces;
CREATE TABLE ehr_lookups.obs_feces (
code varchar NOT NULL,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_obs_feces PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_feces
-- ----------------------------
INSERT INTO ehr_lookups.obs_feces VALUES ('SF', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('FS', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('BF', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('D', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('WD', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('B', null);
INSERT INTO ehr_lookups.obs_feces VALUES ('MU', null);

-- ----------------------------
-- Table structure for ehr_lookups.obs_mens
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_mens;
CREATE TABLE ehr_lookups.obs_mens (
code varchar NOT NULL,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_obs_mens PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_mens
-- ----------------------------
INSERT INTO ehr_lookups.obs_mens VALUES ('M', null);
INSERT INTO ehr_lookups.obs_mens VALUES ('LM', null);
INSERT INTO ehr_lookups.obs_mens VALUES ('HM', null);
INSERT INTO ehr_lookups.obs_mens VALUES ('PPM', null);
INSERT INTO ehr_lookups.obs_mens VALUES ('HPPM', null);

-- ----------------------------
-- Table structure for ehr_lookups.obs_other
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_other;
CREATE TABLE ehr_lookups.obs_other (
code varchar NOT NULL,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_obs_other PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_other
-- ----------------------------
INSERT INTO ehr_lookups.obs_other VALUES ('V', null);
INSERT INTO ehr_lookups.obs_other VALUES ('NE', null);
INSERT INTO ehr_lookups.obs_other VALUES ('L', null);
INSERT INTO ehr_lookups.obs_other VALUES ('RP', null);
INSERT INTO ehr_lookups.obs_other VALUES ('VP', null);
INSERT INTO ehr_lookups.obs_other VALUES ('N', null);
INSERT INTO ehr_lookups.obs_other VALUES ('T', null);

-- ----------------------------
-- Table structure for ehr_lookups.obs_remarks
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_remarks;
CREATE TABLE ehr_lookups.obs_remarks (
title varchar NOT NULL,
remark varchar,

CONSTRAINT PK_obs_remarks PRIMARY KEY (title)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_remarks
-- ----------------------------
INSERT INTO ehr_lookups.obs_remarks VALUES ('healing', 'healing');
INSERT INTO ehr_lookups.obs_remarks VALUES ('some FS', 'some FS');
INSERT INTO ehr_lookups.obs_remarks VALUES ('ok', 'ok');
INSERT INTO ehr_lookups.obs_remarks VALUES ('stool ok', 'stool ok');
INSERT INTO ehr_lookups.obs_remarks VALUES ('4 clo', '4 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('small FS', 'small FS');
INSERT INTO ehr_lookups.obs_remarks VALUES ('5 clo', '5 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('runny nose', 'runny nose');
INSERT INTO ehr_lookups.obs_remarks VALUES ('6 clo', '6 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('3 clo', '3 clo');


-- ----------------------------
-- Table structure for ehr_lookups.obs_tlocation
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_tlocation;
CREATE TABLE ehr_lookups.obs_tlocation (
location varchar NOT NULL,
sort_order int4,
code varchar(100),

CONSTRAINT PK_obs_tlocation PRIMARY KEY (location)
)
WITH (OIDS=FALSE)
;

-- ----------------------------
-- Records of obs_tlocation
-- ----------------------------
INSERT INTO ehr_lookups.obs_tlocation 
(location, sort_order)
VALUES 
('head', '1'),
('generalized', '2'),
('upper right', '3'),
('upper right-back', '4'),
('upper left', '5'),
('upper left-back', '6'),
('lower right', '7'),
('lower right-back', '8'),
('lower left', '9'),
('lower left-back', '10'),
('right arm', '11'),
('right hand', '12'),
('right hand D1', '13'),
('right hand D2', '14'),
('right hand D3', '15'),
('right hand D4', '16'),
('right hand D5', '17'),
('left arm', '18'),
('left hand', '19'),
('left hand D1', '20'),
('left hand D2', '21'),
('left hand D3', '22'),
('left hand D4', '23'),
('left hand D5', '24'),
('right leg', '25'),
('right foot', '26'),
('right foot D1', '27'),
('right foot D2', '28'),
('right foot D3', '29'),
('right foot D4', '30'),
('right foot D5', '31'),
('left leg', '32'),
('left foot', '33'),
('left foot D1', '34'),
('left foot D2', '35'),
('left foot D3', '36'),
('left foot D4', '37'),
('left foot D5', '38'),
('tail', '39');




-- ----------------------------
-- Table structure for ehr_lookups.origin_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.origin_codes;
CREATE TABLE ehr_lookups.origin_codes (
Code varchar(255) NOT NULL,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_origin_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of origin_codes
-- ----------------------------
INSERT INTO ehr_lookups.origin_codes VALUES ('abl', 'Advanced Bioscience Laboratories');
INSERT INTO ehr_lookups.origin_codes VALUES ('avp', 'Aventis Pasteur, Toronto, Ontario Canada');
INSERT INTO ehr_lookups.origin_codes VALUES ('bab', 'Brooks Air Force Base, TX');
INSERT INTO ehr_lookups.origin_codes VALUES ('bmy', 'Bristol Meyers Labs, IN');
INSERT INTO ehr_lookups.origin_codes VALUES ('bos', 'Boston');
INSERT INTO ehr_lookups.origin_codes VALUES ('bqi', 'Bioqual Inc, Rockville MD');
INSERT INTO ehr_lookups.origin_codes VALUES ('brl', 'Biologic Resources Lab, Univ of IL/ Chicago');
INSERT INTO ehr_lookups.origin_codes VALUES ('bru', 'Brown University, Warwick, RI');
INSERT INTO ehr_lookups.origin_codes VALUES ('btl', 'Industrial Biotest Laboratory');
INSERT INTO ehr_lookups.origin_codes VALUES ('cal', 'California');
INSERT INTO ehr_lookups.origin_codes VALUES ('cen', 'WNPRC');
INSERT INTO ehr_lookups.origin_codes VALUES ('cpc', 'Caribbean Primate Center');
INSERT INTO ehr_lookups.origin_codes VALUES ('crh', 'Charles River Brf, Houston Texas');
INSERT INTO ehr_lookups.origin_codes VALUES ('crp', 'Covance Research Products');
INSERT INTO ehr_lookups.origin_codes VALUES ('csc', 'Clinical Science Clinic, Madison, WI');
INSERT INTO ehr_lookups.origin_codes VALUES ('csp', 'Central State Primates, Kaiser, MO');
INSERT INTO ehr_lookups.origin_codes VALUES ('cuw', 'Catholic University, Washington, DE');
INSERT INTO ehr_lookups.origin_codes VALUES ('dfs', 'Department Of Food Science, Madison, WI');
INSERT INTO ehr_lookups.origin_codes VALUES ('fer', 'Feral');
INSERT INTO ehr_lookups.origin_codes VALUES ('fri', 'Food Research Inst, UW-Madison');
INSERT INTO ehr_lookups.origin_codes VALUES ('haw', 'Hawaii');
INSERT INTO ehr_lookups.origin_codes VALUES ('hmc', 'Hershey Medical Center Hershey, PA');
INSERT INTO ehr_lookups.origin_codes VALUES ('hms', 'Harvard Medical School, New England Primate Center, Southborough MA');
INSERT INTO ehr_lookups.origin_codes VALUES ('hzt', 'Hazelton Labs, Madison, WI');
INSERT INTO ehr_lookups.origin_codes VALUES ('lab', 'Harlow Primate Lab, UW-Madison');
INSERT INTO ehr_lookups.origin_codes VALUES ('lbi', 'Litton Bionetics');
INSERT INTO ehr_lookups.origin_codes VALUES ('lbs', 'Laboratory Animal Breeders & Services, Yemassee, SC');
INSERT INTO ehr_lookups.origin_codes VALUES ('loy', 'Dr. Loy');
INSERT INTO ehr_lookups.origin_codes VALUES ('lsp', 'Lensip Tuxedo, NY');
INSERT INTO ehr_lookups.origin_codes VALUES ('mds', 'University of WI Medical School');
INSERT INTO ehr_lookups.origin_codes VALUES ('mic', 'Michigan');
INSERT INTO ehr_lookups.origin_codes VALUES ('mrb', 'Miami Rare Bird Farm');
INSERT INTO ehr_lookups.origin_codes VALUES ('opc', 'Oregon Primate Center');
INSERT INTO ehr_lookups.origin_codes VALUES ('pfi', 'Pfizer, Kalamazoo MI');
INSERT INTO ehr_lookups.origin_codes VALUES ('pii', 'Primate Imports Inc.');
INSERT INTO ehr_lookups.origin_codes VALUES ('pit', 'University Of Pittsburg');
INSERT INTO ehr_lookups.origin_codes VALUES ('pli', 'Primelabs Inc.');
INSERT INTO ehr_lookups.origin_codes VALUES ('pr', 'Puerto Rico');
INSERT INTO ehr_lookups.origin_codes VALUES ('sfi', 'Shamrock Farms Inc.');
INSERT INTO ehr_lookups.origin_codes VALUES ('snb', 'Shin Nippon Biomedical Labs, Everett, WA');
INSERT INTO ehr_lookups.origin_codes VALUES ('sun', 'State University of New York At Syracuse');
INSERT INTO ehr_lookups.origin_codes VALUES ('tpc', 'Texas Primate Center');
INSERT INTO ehr_lookups.origin_codes VALUES ('tss', 'Three Springs Scientific, Yemassee, SC');
INSERT INTO ehr_lookups.origin_codes VALUES ('tul', 'Tulsa Zoo');
INSERT INTO ehr_lookups.origin_codes VALUES ('ucd', 'Univ. of California-Davis Primate Center');
INSERT INTO ehr_lookups.origin_codes VALUES ('ucr', 'University Of California-Riverside, Riverside, CA');
INSERT INTO ehr_lookups.origin_codes VALUES ('vs', 'Veterinary Science from Hazleton Labs');
INSERT INTO ehr_lookups.origin_codes VALUES ('wac', 'Woodard Asiatic Corporation');
INSERT INTO ehr_lookups.origin_codes VALUES ('wai', 'Waisman Center, Madison, WI');
INSERT INTO ehr_lookups.origin_codes VALUES ('wnc', 'Winston-Salem, NC');
INSERT INTO ehr_lookups.origin_codes VALUES ('wvh', 'VA Hospital, Wood, WI');
INSERT INTO ehr_lookups.origin_codes VALUES ('ypc', 'Yerkes Primate Center, Atlanta, GA');
INSERT INTO ehr_lookups.origin_codes VALUES ('zoo', 'Zoology, UW-Madison');



-- ----------------------------
-- Table structure for restraint_type
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.restraint_type;
CREATE TABLE ehr_lookups.restraint_type (
type varchar(255) not null,
code varchar(255) NOT NULL,

CONSTRAINT PK_restraint_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of restraint_type
-- ----------------------------
INSERT INTO ehr_lookups.restraint_type VALUES ('Table-Top', 'w-10238');
INSERT INTO ehr_lookups.restraint_type VALUES ('Tube', '	w-10239');
INSERT INTO ehr_lookups.restraint_type VALUES ('Other', '');

-- ----------------------------
-- Table structure for tb_eye
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.tb_eye;
CREATE TABLE ehr_lookups.tb_eye (
eye varchar(255) NOT NULL,
meaning varchar(255),

CONSTRAINT PK_tb_eye PRIMARY KEY (eye)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of tb_eye
-- ----------------------------
INSERT INTO ehr_lookups.tb_eye VALUES ('b', 'Both');
INSERT INTO ehr_lookups.tb_eye VALUES ('l', 'Left');
INSERT INTO ehr_lookups.tb_eye VALUES ('r', 'Right');

-- ----------------------------
-- Table structure for tb_result
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.tb_result;
CREATE TABLE ehr_lookups.tb_result (
result varchar(255) NOT NULL,

CONSTRAINT PK_tb_result PRIMARY KEY (result)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of tb_result
-- ----------------------------
INSERT INTO ehr_lookups.tb_result VALUES (0);
INSERT INTO ehr_lookups.tb_result VALUES (1);
INSERT INTO ehr_lookups.tb_result VALUES (2);
INSERT INTO ehr_lookups.tb_result VALUES (3);
INSERT INTO ehr_lookups.tb_result VALUES (4);
INSERT INTO ehr_lookups.tb_result VALUES (5);

-- ----------------------------
-- Table structure for treatment_frequency
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.treatment_frequency;
CREATE TABLE ehr_lookups.treatment_frequency (
RowId serial NOT NULL,
meaning varchar(32) DEFAULT NULL NOT NULL,

CONSTRAINT PK_treatment_frequency PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of treatment_frequency
-- ----------------------------
INSERT INTO ehr_lookups.treatment_frequency VALUES (1, 'DAILYAM');
INSERT INTO ehr_lookups.treatment_frequency VALUES (2, 'TWICEAMPM');
INSERT INTO ehr_lookups.treatment_frequency VALUES (3, 'THREE');
INSERT INTO ehr_lookups.treatment_frequency VALUES (4, 'DAILYPM');
INSERT INTO ehr_lookups.treatment_frequency VALUES (5, 'DAILYNIGHT');
INSERT INTO ehr_lookups.treatment_frequency VALUES (6, 'TWICEAMNIGHT');
INSERT INTO ehr_lookups.treatment_frequency VALUES (7, 'WEEKLY');
INSERT INTO ehr_lookups.treatment_frequency VALUES (8, 'MONTHLY');
INSERT INTO ehr_lookups.treatment_frequency VALUES (9, 'ALTDAYS');

-- ----------------------------
-- Table structure for viral_status
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.viral_status;
CREATE TABLE ehr_lookups.viral_status (
viral_status varchar(255) NOT NULL,

CONSTRAINT PK_viral_status PRIMARY KEY (viral_status)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of viral_status
-- ----------------------------
INSERT INTO ehr_lookups.viral_status VALUES ('SPF');
INSERT INTO ehr_lookups.viral_status VALUES ('Conventional');
INSERT INTO ehr_lookups.viral_status VALUES ('Not Defined');
INSERT INTO ehr_lookups.viral_status VALUES ('Viral Free');

-- ----------------------------
-- Table structure for vl_category
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.vl_category;
CREATE TABLE ehr_lookups.vl_category (
category varchar(255) NOT NULL,

CONSTRAINT PK_vl_category PRIMARY KEY (category)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of vl_category
-- ----------------------------
INSERT INTO ehr_lookups.vl_category VALUES ('CTL');
INSERT INTO ehr_lookups.vl_category VALUES ('Sample');
INSERT INTO ehr_lookups.vl_category VALUES ('STD');

-- ----------------------------
-- Table structure for vl_instrument
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.vl_instrument;
CREATE TABLE ehr_lookups.vl_instrument (
instrument varchar(255) NOT NULL,

CONSTRAINT PK_vl_instrument PRIMARY KEY (instrument)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of vl_instrument
-- ----------------------------
INSERT INTO ehr_lookups.vl_instrument VALUES ('LC480');
INSERT INTO ehr_lookups.vl_instrument VALUES ('Light Cycler');

-- ----------------------------
-- Table structure for vl_sampletype
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.vl_sampletype;
CREATE TABLE ehr_lookups.vl_sampletype (
sample_type varchar(255) NOT NULL,

CONSTRAINT PK_vl_sampletype PRIMARY KEY (sample_type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of vl_sampletype
-- ----------------------------
INSERT INTO ehr_lookups.vl_sampletype VALUES ('gDNA');
INSERT INTO ehr_lookups.vl_sampletype VALUES ('vRNA');

-- ----------------------------
-- Table structure for vl_technique
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.vl_technique;
CREATE TABLE ehr_lookups.vl_technique (
technique varchar(255) NOT NULL,

CONSTRAINT PK_vl_technique PRIMARY KEY (technique)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of vl_technique
-- ----------------------------
INSERT INTO ehr_lookups.vl_technique VALUES ('Lifson 1-Step VL');

-- ----------------------------
-- Table structure for vl_virus
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.vl_virus;
CREATE TABLE ehr_lookups.vl_virus (
virus varchar(255) NOT NULL,

CONSTRAINT PK_vl_virus PRIMARY KEY (virus)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of vl_virus
-- ----------------------------
INSERT INTO ehr_lookups.vl_virus VALUES ('SIVmac239');

-- ----------------------------
-- Table structure for yesno
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.yesno;
CREATE TABLE ehr_lookups.yesno (
value varchar(255) NOT NULL,

CONSTRAINT PK_yesno PRIMARY KEY (value)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of yesno
-- ----------------------------
INSERT INTO ehr_lookups.yesno VALUES ('Yes');
INSERT INTO ehr_lookups.yesno VALUES ('No');
INSERT INTO ehr_lookups.yesno VALUES ('NA');



-- ----------------------------
-- Table structure for ehr_lookups.routes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.routes;
CREATE TABLE ehr_lookups.routes (
route varchar(100) NOT NULL,

CONSTRAINT PK_routes PRIMARY KEY (route)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of routes
-- ----------------------------
INSERT INTO ehr_lookups.routes VALUES ('IM');
INSERT INTO ehr_lookups.routes VALUES ('IT');
INSERT INTO ehr_lookups.routes VALUES ('IV');
INSERT INTO ehr_lookups.routes VALUES ('IVAG');
INSERT INTO ehr_lookups.routes VALUES ('oral');
INSERT INTO ehr_lookups.routes VALUES ('rectal');
INSERT INTO ehr_lookups.routes VALUES ('SQ');
INSERT INTO ehr_lookups.routes VALUES ('topical (eye)');
INSERT INTO ehr_lookups.routes VALUES ('topical (skin)');
INSERT INTO ehr_lookups.routes VALUES ('topical');

-- ----------------------------
-- Table structure for ehr_lookups.species
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.species;
CREATE TABLE ehr_lookups.species (
common varchar(255) NOT NULL,
scientific_name varchar(255) DEFAULT NULL,
id_prefix varchar(255) DEFAULT NULL,
mhc_prefix varchar(255) DEFAULT NULL,

CONSTRAINT PK_species PRIMARY KEY (common)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of species
-- ----------------------------
INSERT INTO ehr_lookups.species VALUES ('Baboon', '', '', '');
INSERT INTO ehr_lookups.species VALUES ('Cotton-top Tamarin', 'Saguinus oedipus', 'so', 'Saoe');
INSERT INTO ehr_lookups.species VALUES ('Cynomolgus', 'Macaca fascicularis', 'cy', 'Mafa');
INSERT INTO ehr_lookups.species VALUES ('Marmoset', 'Callithrix jacchus', 'cj', 'Caja');
INSERT INTO ehr_lookups.species VALUES ('Pigtail', 'Macaca Nemestrina', '', 'Mane');
INSERT INTO ehr_lookups.species VALUES ('Rhesus', 'Macaca mulatta', 'r|rh', 'Mamu');
INSERT INTO ehr_lookups.species VALUES ('Sooty Mangabey', 'Cercocebus atys', '', 'Ceat');
INSERT INTO ehr_lookups.species VALUES ('Stump Tailed', 'Macaca Arctoides', '', 'Maar');
INSERT INTO ehr_lookups.species VALUES ('Vervet', 'Chlorocebus sabaeus', 'ag', 'Chsa');

-- ----------------------------
-- Table structure for ehr_lookups.species_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.species_codes;
CREATE TABLE ehr_lookups.species_codes (
code varchar(255) NOT NULL,
scientific_name varchar(255) DEFAULT NULL,
common_name varchar(255) DEFAULT NULL,

CONSTRAINT PK_species_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of species_codes
-- ----------------------------
INSERT INTO ehr_lookups.species_codes VALUES ('ag', 'Chlorocebus sabaeus', 'Vervet');
INSERT INTO ehr_lookups.species_codes VALUES ('cj', 'Callithrix jacchus', 'Marmoset');
INSERT INTO ehr_lookups.species_codes VALUES ('cy', 'Macaca fascicularis', 'Cynomolgus');
INSERT INTO ehr_lookups.species_codes VALUES ('r', 'Macaca mulatta', 'Rhesus');
INSERT INTO ehr_lookups.species_codes VALUES ('rh', 'Macaca mulatta', 'Rhesus');
INSERT INTO ehr_lookups.species_codes VALUES ('so', 'Saguinus oedipus', 'Cotton-top Tamarin');

-- ----------------------------
-- Table structure for ehr_lookups.status_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.status_codes;
CREATE TABLE ehr_lookups.status_codes (
Code varchar(20) NOT NULL,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_status_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of status_codes
-- ----------------------------
INSERT INTO ehr_lookups.status_codes VALUES ('alive', 'alive');
INSERT INTO ehr_lookups.status_codes VALUES ('d-expr', 'died experimentally (e.g., sacrifice)');
INSERT INTO ehr_lookups.status_codes VALUES ('d-othr', 'died for other reason (e.g., clinical death)');
INSERT INTO ehr_lookups.status_codes VALUES ('d-quar', 'died in quarantine');
INSERT INTO ehr_lookups.status_codes VALUES ('shippd', 'shipped');


-- -- ----------------------------
-- -- Table structure for ehr_lookups.virus_snomed
-- -- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.virus_snomed;
-- CREATE TABLE ehr_lookups.virus_snomed (
-- pathogen varchar(255) DEFAULT NULL,
-- challenge_type varchar(255) DEFAULT NULL,
-- code varchar(255) DEFAULT NULL,
-- RowId serial NOT NULL,
--
-- CONSTRAINT PK_virus_snomed PRIMARY KEY (rowid)
-- )
-- WITH (OIDS=FALSE)
--
-- ;
--
-- -- ----------------------------
-- -- Records of virus_snomed
-- -- ----------------------------
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'l-35230');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', '@e-37301');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'l-35260');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', '@e-37302');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10049');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10050');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10154');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10156');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'w-10164');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10172');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10173');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10174');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10175');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10176');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10177');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10178');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10179');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10180');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10181');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10182');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10183');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10184');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10187');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10189');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10190');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10191');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'w-10196');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'w-10205');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'w-10253');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Challenge', 'w-10264');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10290');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10296');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10311');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10312');
-- INSERT INTO ehr_lookups.virus_snomed VALUES ('SIV', 'Vaccine', 'w-10313');


-- ----------------------------
-- Table structure for ehr_lookups.volume_units
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.volume_units;
CREATE TABLE ehr_lookups.volume_units (
unit varchar(100) NOT NULL,

CONSTRAINT PK_volume_units PRIMARY KEY (unit)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of volume_units
-- ----------------------------
INSERT INTO ehr_lookups.volume_units VALUES ('mL');
INSERT INTO ehr_lookups.volume_units VALUES ('drop(s)');
INSERT INTO ehr_lookups.volume_units VALUES ('tablet(s)');
INSERT INTO ehr_lookups.volume_units VALUES ('capsule(s)');
INSERT INTO ehr_lookups.volume_units VALUES ('tsp');
INSERT INTO ehr_lookups.volume_units VALUES ('piece(s)');

-- ----------------------------
-- Table structure for ehr_lookups.amount_units
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.amount_units;
CREATE TABLE ehr_lookups.amount_units (
unit varchar(100) NOT NULL,

CONSTRAINT PK_amount_units PRIMARY KEY (unit)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of amount_units
-- ----------------------------
INSERT INTO ehr_lookups.amount_units VALUES ('mg');
INSERT INTO ehr_lookups.amount_units VALUES ('units');
INSERT INTO ehr_lookups.amount_units VALUES ('ug');
INSERT INTO ehr_lookups.amount_units VALUES ('g');
INSERT INTO ehr_lookups.amount_units VALUES ('mEq');
INSERT INTO ehr_lookups.amount_units VALUES ('IU');




-- ----------------------------
-- Table structure for avail_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.avail_codes;
CREATE TABLE ehr_lookups.avail_codes (
code varchar(4000) NOT NULL,
meaning varchar(4000),

CONSTRAINT PK_avail_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Records of avail_codes
-- ----------------------------
INSERT INTO ehr_lookups.avail_codes VALUES ('a', 'assigned to a project');
INSERT INTO ehr_lookups.avail_codes VALUES ('b', 'assigned to the breeding project');
INSERT INTO ehr_lookups.avail_codes VALUES ('c', 'under consideration for assignment');
INSERT INTO ehr_lookups.avail_codes VALUES ('m', 'medical exempt');
INSERT INTO ehr_lookups.avail_codes VALUES ('n', 'assigned to nia set-aside project');
INSERT INTO ehr_lookups.avail_codes VALUES ('p', 'assignment to project is pending');
INSERT INTO ehr_lookups.avail_codes VALUES ('q', 'assigned to quarantine project');
INSERT INTO ehr_lookups.avail_codes VALUES ('r', 'assigned to a research project');
INSERT INTO ehr_lookups.avail_codes VALUES ('t', 'assigned to the training project');
INSERT INTO ehr_lookups.avail_codes VALUES ('u', 'unassigned');
INSERT INTO ehr_lookups.avail_codes VALUES ('v', 'vet exempt');



-- ----------------------------
-- Table structure for ehr_lookups.lab_tests
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.lab_tests;
CREATE TABLE ehr_lookups.lab_tests (
testid varchar(100) NOT NULL,
name varchar(100),
units varchar(100),

CONSTRAINT PK_lab_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)
;



-- ----------------------------
-- Records of lab_tests
-- ----------------------------
INSERT INTO ehr_lookups.lab_tests VALUES ('A/P', 'Albumin/Protein Ratio', 'ratio');
INSERT INTO ehr_lookups.lab_tests VALUES ('ALB', 'Albumin', 'g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('ALKP', 'Alkaline Phosphatase', 'IU/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('APPEARANCE', 'Appearance', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('B/C', 'BUN/Creatinine Ratio', 'ratio');
INSERT INTO ehr_lookups.lab_tests VALUES ('BANDS', 'Bands', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('BD', 'Bands??', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('BD-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('BILIRUBIN', 'Bilirubin', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('BLOOD', 'Blood', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('BS', 'Basophils', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('BS-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('BUN', 'Blood urea nitrogen', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('CA', 'Calcium', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('CD20', 'CD20', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('CD3', 'CD3', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('CD4', 'CD4', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('CD8', 'CD8', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('CHOL', 'Cholesterol', 'mg/dl');
INSERT INTO ehr_lookups.lab_tests VALUES ('CL', 'Chloride', 'mEq/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('CPK', 'Creatine phosphokinase', 'U/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('CREAT', 'Creatinine', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('EO', 'Eosinophils', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('EO-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('FE', 'Iron', '?g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('FIBR', 'Fibrinogen', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('GGT', 'Gamma-glutamyltransferase', 'IU/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('GLOB', 'Globulin', 'g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('GLUC', 'Glucose', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('GLYCOSYLATED HGB', 'GLYCOSYLATED HGB', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('HCT', 'Hematocrit', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('HDL', 'High-Density Lipoprotein', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('HGB', 'Hemoglobin', 'g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('K', 'Potassium', 'mmol/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('KETONE', 'Ketone', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('LDH', 'Lactate dehydrogenase', 'IU/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('LDL', 'Low-Density Lipoprotein', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('LEUKOCYTES', 'Leukocytes', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('LY', 'Lymphocytes', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('LY-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('MCH', 'Mean corpuscular hemoglobin', 'picograms');
INSERT INTO ehr_lookups.lab_tests VALUES ('MCHC', 'Mean corpuscular hemoglobin concentration', 'g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('MCV', 'Mean corpuscular volume', 'fL');
INSERT INTO ehr_lookups.lab_tests VALUES ('METAMYELO', 'Metamyelocytes', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('MICROSCOPIC', 'Microscopic', '');
INSERT INTO ehr_lookups.lab_tests VALUES ('MN', 'Monocytes', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('MN-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('MPV', 'Mean platelet volume', 'fl');
INSERT INTO ehr_lookups.lab_tests VALUES ('MYELO', 'Myelocytes', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('NA', 'Sodium', 'mmol/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('NE', 'Neutrophils', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('NE-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('NITRITE', 'Nitrite', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('PCV', 'Packed cell volume', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('PH', 'pH', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('PHOS', 'Phosphorus', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('PLT', 'Platelets', 'ths/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('PROTEIN', 'Protein', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('RBC', 'Red Blood Cells', '10^6/uL');
INSERT INTO ehr_lookups.lab_tests VALUES ('RDW', 'Red blood cell distribution width', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('RETICULO', 'Reticulocytes', '%');
INSERT INTO ehr_lookups.lab_tests VALUES ('SGOT', 'Serum glutamic oxaloacetic transaminase', 'IU/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('SGPT', 'Serum glutamic pyruvic transaminase', 'IU/L');
INSERT INTO ehr_lookups.lab_tests VALUES ('SP_GRAVITY', 'Specific Gravity', 'no units');
INSERT INTO ehr_lookups.lab_tests VALUES ('TB', 'Total Bilirubin', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('TP', 'Total Protein', 'g/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('TRIG', 'Triglyceride', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('UA', 'Uric Acid', 'mg/dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('UROBILINOGEN', 'Urobilinogen', 'E.U./dL');
INSERT INTO ehr_lookups.lab_tests VALUES ('WBC', 'White Blood Cells', 'ths/uL');


-- ----------------------------
-- Table structure for charge_items
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.charge_items;
CREATE TABLE ehr_lookups.charge_items (
RowId SERIAL not null,
category varchar(255),
description varchar(4000) NOT NULL,
cost FLOAT,
Container ENTITYID,
CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_charge_items PRIMARY KEY (rowid)

)
WITH (OIDS=FALSE)

;



-- ----------------------------
-- Table structure for blood_draw_tube_type
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.blood_draw_tube_type;
CREATE TABLE ehr_lookups.blood_draw_tube_type (
type varchar(255) NOT NULL,
volume float,

CONSTRAINT PK_blood_draw_tube_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of blood_draw_tube_type
-- ----------------------------
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('EDTA - 0.5 ml', 0.5);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('EDTA - 2 ml', 2);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('EDTA - 6 ml', 6);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('SST - 3.5 ml', 3.5);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('SST - 5 ml SST', 5);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('Hep - 4 ml', 4);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('Hep - 6 ml', 6);
INSERT INTO ehr_lookups.blood_draw_tube_type VALUES ('Other', null);



-- ----------------------------
-- Table structure for snomed
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.snomed;
CREATE TABLE ehr_lookups.snomed (
code varchar(255) NOT NULL,
meaning varchar(2000),

-- Container ENTITYID,
CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_snomed PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Table structure for snomed_subset_codes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.snomed_subset_codes;
CREATE TABLE ehr_lookups.snomed_subset_codes (
rowId serial NOT NULL,
primaryCategory varchar(255) NOT NULL,
secondaryCategory varchar(255),
code varchar(255) NOT NULL,

Container ENTITYID,
CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_snomed_subset_codes PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Table structure for normal_abnormal
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.normal_abnormal;
CREATE TABLE ehr_lookups.normal_abnormal (
state varchar(255) NOT NULL,

CONSTRAINT PK_normal_abnormal PRIMARY KEY (state)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of normal_abnormal
-- ----------------------------
INSERT INTO ehr_lookups.normal_abnormal
(state)
VALUES
('Normal'),
('Abnormal')
;


-- ----------------------------
-- Table structure for observations_anesthesia_recovery
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.observations_anesthesia_recovery;
CREATE TABLE ehr_lookups.observations_anesthesia_recovery (
  value varchar(255) NOT NULL,
  sort_order integer not null,

  CONSTRAINT PK_observations_anesthesia_recovery PRIMARY KEY (value)
)
WITH (OIDS=FALSE)

;


INSERT INTO ehr_lookups.observations_anesthesia_recovery
(value, sort_order)
VALUES
('Laying Down', 1),
('Sitting Upright', 2),
('Fully Recovered', 3)
;



-- ----------------------------
-- Table structure for error_types
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.error_types;
CREATE TABLE ehr_lookups.error_types (
  type varchar(255) NOT NULL,
  sort_order integer,

  CONSTRAINT PK_error_types PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;


INSERT INTO ehr_lookups.error_types
(type, sort_order)
VALUES
('Blood overdraw', 1),
('Wrong animal had blood drawn', 2),
('Treatment missed', 3),
('Wrong animal received treatment/anesthesia', 4),
('Food/water deprivation missed', 5),
('Animal not assigned to correct protocol', 6),
('Prolonged food/water deprivation', 7),
('Other', 8)
;


-- ----------------------------
-- Table structure for urine_method
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.urine_method;
CREATE TABLE ehr_lookups.urine_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_urine_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;


INSERT INTO ehr_lookups.urine_method
(method)
VALUES
('Void'),
('Catheter'),
('Cysto'),
('Free catch'),
('CC'),
('From pan')
;


-- ----------------------------
-- Table structure for virology_source
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.virology_source;
CREATE TABLE ehr_lookups.virology_source (
  source varchar(255) NOT NULL,
  code varchar(255),

  CONSTRAINT PK_virology_source PRIMARY KEY (source)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.virology_source
(source,code)
VALUES
('blood', ''),
('both eyes', ''),
('breast milk', ''),
('buccal', ''),
('buccal swab', ''),
('bvirus', ''),
('cells', ''),
('chopped dispersed tissue', ''),
('chopped dispersed tissue swab', ''),
('eye', ''),
('eyes', ''),
('feces', ''),
('genital', ''),
('genital swab', ''),
('hbv', ''),
('hep blood', ''),
('l. eye', ''),
('l. eye swab', ''),
('lesion', ''),
('lymph node', ''),
('r. eye', ''),
('r. eye swab', ''),
('Rectal', ''),
('Rectal Swab', ''),
('semen', ''),
('serum', ''),
('siv', ''),
('spleen', ''),
('srv', ''),
('stlv-1', ''),
('stool', ''),
('swab buccal', ''),
('swab genital', ''),
('tissue', ''),
('whole blood', ''),
('whole tissue', ''),
('whole tissue swab', '')
;


-- ----------------------------
-- Table structure for drug_defaults
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.drug_defaults;
CREATE TABLE ehr_lookups.drug_defaults (
  code varchar(255) NOT NULL,
  dosage float,
  dosage_units varchar(255),
  concentration float,
  conc_units varchar(255),

  CONSTRAINT PK_drug_defaults PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;



-- ----------------------------
-- Table structure for oor_indicators
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.oor_indicators;
CREATE TABLE ehr_lookups.oor_indicators (
  indicator varchar(255) NOT NULL,

  CONSTRAINT PK_oor_indicators PRIMARY KEY (indicator)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.oor_indicators
(indicator)
VALUES
('<'),
('>')
;

/* EHR_Lookups-11.101-11.102.sql */

INSERT INTO ehr_lookups.blood_draw_services
(service) VALUES
('Vet-19')
;


DROP TABLE IF EXISTS ehr_lookups.weight_ranges;
CREATE TABLE ehr_lookups.weight_ranges (
species varchar(255),
min_weight float,
max_weight float,

CONSTRAINT PK_weight_ranges PRIMARY KEY (species)
)
WITH (OIDS=FALSE)

;

/* EHR_Lookups-11.102-11.103.sql */

DROP TABLE IF EXISTS ehr_lookups.problem_list_category;
CREATE TABLE ehr_lookups.problem_list_category (
category varchar(200),

CONSTRAINT PK_problem_list_category PRIMARY KEY (category)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.problem_list_category
(category) VALUES
('Trauma')
;

INSERT into ehr_lookups.weight_ranges
(species, min_weight, max_weight)
VALUES
('Marmoset', 0, 1),
('Cynomolgus', 0, 20),
('Rhesus', 0, 35)
;

insert into ehr_lookups.encounter_types
(type) values
('Procedure - Clinical'),
('Procedure - Training')
;

/* EHR_Lookups-11.103-11.104.sql */

DROP TABLE IF EXISTS ehr_lookups.blood_billed_by;
CREATE TABLE ehr_lookups.blood_billed_by (
code varchar(200),
title varchar(200),

CONSTRAINT PK_blood_billed_by PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.blood_billed_by
(code, title) VALUES
('a', 'Animal Care'),
('c', 'SPI'),
('n', 'Neither')
;

DROP TABLE IF EXISTS ehr_lookups.housing_reason;
CREATE TABLE ehr_lookups.housing_reason (
reason varchar(200),

CONSTRAINT PK_housing_reason PRIMARY KEY (reason)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.housing_reason
(reason) VALUES
('Euthanasia/Death of Partner'),
('Departure/Shipment of Partner'),
('Research'),
('Behavior'),
('Clinical'),
('Breeding'),
('Weening'),
('Pair Testing'),
('Other')
;

/* EHR_Lookups-11.104-11.106.sql */

DELETE from ehr_lookups.cageclass;

INSERT INTO ehr_lookups.cageclass
(low, high, sqft, height) VALUES
(0, 1.5, 2.1, 30),
(1.5, 3, 3, 30),
(3, 10, 4.3, 30),
(10, 15, 6, 32),
(15, 20, 8, 36),
(20, 25, 10, 46),
(25, 30, 15, 46),
(30, 100, 25, 60)
;


DELETE from ehr_lookups.obs_mens;

-- ----------------------------
-- Records of obs_mens
-- ----------------------------
INSERT INTO ehr_lookups.obs_mens VALUES ('M', 'Regular Mens');
INSERT INTO ehr_lookups.obs_mens VALUES ('LM', 'Light Mens');
INSERT INTO ehr_lookups.obs_mens VALUES ('HM', 'Heavy Mens');
INSERT INTO ehr_lookups.obs_mens VALUES ('PPM', 'Regular after birth bleeding');
INSERT INTO ehr_lookups.obs_mens VALUES ('HPPM', 'Heavy after birth bleeding');
INSERT INTO ehr_lookups.obs_mens VALUES ('LPPM', 'Light after birth bleeding');

-- ----------------------------
-- Table structure for ehr_lookups.obs_other
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_other;
CREATE TABLE ehr_lookups.obs_other (
code varchar NOT NULL,
meaning varchar DEFAULT NULL,

CONSTRAINT PK_obs_other PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;


DELETE from ehr_lookups.obs_other;

-- ----------------------------
-- Records of obs_other
-- ----------------------------
INSERT INTO ehr_lookups.obs_other VALUES ('V', 'Vomit');
INSERT INTO ehr_lookups.obs_other VALUES ('NE', 'Not Eating');
INSERT INTO ehr_lookups.obs_other VALUES ('L', 'Lethargic');
INSERT INTO ehr_lookups.obs_other VALUES ('RP', 'Rectal Prolapse');
INSERT INTO ehr_lookups.obs_other VALUES ('VP', 'Vaginal Prolapse');
INSERT INTO ehr_lookups.obs_other VALUES ('N', 'Newborn Infant(s)');
INSERT INTO ehr_lookups.obs_other VALUES ('T', 'Trauma');





DELETE from ehr_lookups.obs_behavior;
-- ----------------------------
-- Records of obs_behavior
-- ----------------------------
INSERT INTO ehr_lookups.obs_behavior VALUES ('NP', 'New pair of animals');
INSERT INTO ehr_lookups.obs_behavior VALUES ('OG', 'Over-groomed animal');
INSERT INTO ehr_lookups.obs_behavior VALUES ('P', 'Pacing');
INSERT INTO ehr_lookups.obs_behavior VALUES ('S', 'Saluting');
INSERT INTO ehr_lookups.obs_behavior VALUES ('F', 'Flipping');
INSERT INTO ehr_lookups.obs_behavior VALUES ('SIB', 'Self-injurious behavior');


DELETE from ehr_lookups.obs_breeding;

INSERT INTO ehr_lookups.obs_breeding VALUES ('E', 'Visible ejaculate');
INSERT INTO ehr_lookups.obs_breeding VALUES ('NOE', 'No visible ejaculate');
INSERT INTO ehr_lookups.obs_breeding VALUES ('N/A', 'N/A');


DELETE from ehr_lookups.obs_feces;

INSERT INTO ehr_lookups.obs_feces VALUES ('SF', 'Soft feces');
INSERT INTO ehr_lookups.obs_feces VALUES ('FS', 'Firm stool');
INSERT INTO ehr_lookups.obs_feces VALUES ('BF', 'Bloody feces');
INSERT INTO ehr_lookups.obs_feces VALUES ('D', 'Diarrhea');
INSERT INTO ehr_lookups.obs_feces VALUES ('WD', 'Watery diarrhea');
INSERT INTO ehr_lookups.obs_feces VALUES ('B', 'Bloody diarrhea');
INSERT INTO ehr_lookups.obs_feces VALUES ('MU', 'Mucus');


INSERT INTO ehr_lookups.restraint_type VALUES ('Chair', '');


INSERT into ehr_lookups.weight_ranges
(species, min_weight, max_weight)
VALUES
('Vervet', 0, 20)
;

/* EHR_Lookups-11.106-11.107.sql */

-- ----------------------------
-- Records of tb_result
-- ----------------------------
INSERT INTO ehr_lookups.tb_result VALUES ('-');

/* EHR_Lookups-11.107-11.108.sql */

DROP TABLE IF EXISTS ehr_lookups.procedures;
CREATE TABLE ehr_lookups.procedures (
rowid SERIAL,
procedure varchar(255),
code varchar(255),
description varchar(255),

CONSTRAINT PK_procedures PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.encounter_types VALUES ('Biopsy');

/* EHR_Lookups-11.109-11.110.sql */

DROP TABLE IF EXISTS ehr_lookups.treatment_frequency;
CREATE TABLE ehr_lookups.treatment_frequency (
RowId serial NOT NULL,
meaning varchar(100) DEFAULT NULL NOT NULL,
sort_order integer,

CONSTRAINT PK_treatment_frequency PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.treatment_frequency
(rowid, meaning, sort_order)
VALUES
(1, 'Daily - AM', 1),
(4, 'Daily - PM', 2),
(5, 'Daily - Night', 3),
(2, 'Daily - AM/PM', 4),
(6, 'Daily - AM/Night', 5),
(3, 'Daily - AM/PM/Night', 6),
(7, 'Weekly', 7),
(8, 'Monthly', 8),
(9, 'Alternating Days', 9)
;

/* EHR_Lookups-11.110-11.111.sql */

DELETE FROM ehr_lookups.blood_draw_tube_type WHERE type = 'Other';


-- ----------------------------
-- Table structure for ehr_lookups.death_cause
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.death_cause;
CREATE TABLE ehr_lookups.death_cause (
cause varchar(255) not null,

CONSTRAINT PK_death_cause PRIMARY KEY (cause)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of death_codes
-- ----------------------------
INSERT INTO ehr_lookups.death_cause
(cause) VALUES
('Experimental'),
('Other'),
('QX'),
('QC'),
('Quarantine')
;

/* EHR_Lookups-11.111-11.112.sql */

ALTER TABLE ehr_lookups.cage
  ADD column canJoinToNeighbor bool
;


DROP TABLE IF EXISTS ehr_lookups.calculated_status_codes;
CREATE TABLE ehr_lookups.calculated_status_codes (
Code varchar(20) NOT NULL,
Meaning varchar(255) DEFAULT NULL,

CONSTRAINT PK_calculated_status_codes PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.calculated_status_codes
 (code)
 VALUES
 ('Alive'),
 ('Dead'),
 ('Shipped'),
 ('No Record'),
 ('ERROR')
 ;

/* EHR_Lookups-11.112-11.113.sql */

ALTER TABLE ehr_lookups.cage
  drop column canJoinToNeighbor
;

ALTER TABLE ehr_lookups.cage
  ADD column joinToCage varchar(50)
;

/* EHR_Lookups-11.114-11.115.sql */

-- ----------------------------
-- Table structure for histology_stain
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.histology_stain;
CREATE TABLE ehr_lookups.histology_stain (
stain varchar(255) not null,

CONSTRAINT PK_histology_stain PRIMARY KEY (stain)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.histology_stain
(stain) VALUES
('Hematoxylin & Eosin'),
('GMS'),
('Trichrome'),
('Gram Stain')
 ;


DROP TABLE IF EXISTS ehr_lookups.bacteriology_method;
CREATE TABLE ehr_lookups.bacteriology_method (
method varchar(255) not null,

CONSTRAINT PK_bacteriology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.bacteriology_method
(method) VALUES
('EIA')
;


-- ----------------------------
-- Table structure for clinpath_services
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.clinpath_services;
CREATE TABLE ehr_lookups.clinpath_services (
type varchar(255) not null,
category varchar(255) not null,
dataset varchar(255) NOT NULL,
defaultLabware varchar(255),
defaultSource varchar(255),

CONSTRAINT PK_clinpath_services PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.clinpath_services
(type,Category,Dataset,DefaultLabware,DefaultSource)
VALUES
('CBC', 'Hematology', 'Hematology Results', 'purple top', 'blood'),
('Glycosylated Hemoglobin', 'Hematology', 'Hematology Results', 'purple top', 'blood'),
('Hematology Profile', 'Hematology', 'Hematology Results', 'purple top', 'blood'),
('Culture and Sensitivity', 'Bacteriology', 'Bacteriology Results', 'culturette', 'blood'),
('Ova and Parasite Exam (wet preparation)', 'Parasitology', 'Parasitology Results', '', 'feces'),
('Ova and Parasite Exam (concentration)', 'Parasitology', 'Parasitology Results', '', 'feces'),
('Cryptosporidium/Giardia/E. Histolytica EIA', 'Parasitology', 'Parasitology Results', '', 'feces'),
('Trichrome Stain', 'Parasitology', 'Parasitology Results', '', 'feces'),
('Vet 19+ CPK Panel', 'Blood Chemistry', 'Blood Chemistry Results', '3.5mL SST', 'blood'),
('Chemistry - Other', 'Blood Chemistry', 'Blood Chemistry Results', '3.5mL SST', 'blood'),
('SRV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('STLV-1', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('SIV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('B-virus', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('EBV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('CMV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('RSV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('SVV', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('SV40', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('Virology - Other', 'Virology', 'Virology Results', '3.5mL SST', 'blood'),
('Urinalysis', 'Urinalysis', 'Urinalysis Results', '', '')
;

/* EHR_Lookups-11.115-11.116.sql */

DROP TABLE IF EXISTS ehr_lookups.qualitative_results;
CREATE TABLE ehr_lookups.qualitative_results (
result varchar(255) not null,

CONSTRAINT PK_qualitative_results PRIMARY KEY (result)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.qualitative_results
(result) VALUES
('Positive'),
('Negative'),
('Indeterminate')
 ;


DROP TABLE IF EXISTS ehr_lookups.urine_method;
-- ----------------------------
-- Table structure for urinalysis_method
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.urinalysis_method;
CREATE TABLE ehr_lookups.urinalysis_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_urinalysis_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;


INSERT INTO ehr_lookups.urinalysis_method
(method)
VALUES
('Void'),
('Catheter'),
('Cysto'),
('Free catch'),
('Cysti'),
('CC'),
('From pan')
;



DROP TABLE IF EXISTS ehr_lookups.virology_tests;
CREATE TABLE ehr_lookups.virology_tests (
testid varchar(255) not null,

CONSTRAINT PK_virology_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)

;

/* EHR_Lookups-11.116-11.117.sql */

UPDATE ehr_lookups.cageclass
set sqft = 1.6
WHERE low=0 AND high=1.5 ;

/* EHR_Lookups-11.117-11.118.sql */

UPDATE ehr_lookups.arearooms
SET area = 'AB-Old'
WHERE area = 'SPF';

UPDATE ehr_lookups.arearooms
set area = 'AB-New'
WHERE area = 'NSPF';


UPDATE ehr_lookups.areas
SET area = 'AB-Old'
WHERE area = 'SPF';

UPDATE ehr_lookups.areas
set area = 'AB-New'
WHERE area = 'NSPF';

/* EHR_Lookups-11.118-11.119.sql */

DROP TABLE IF EXISTS ehr_lookups.treatment_codes;
CREATE TABLE ehr_lookups.treatment_codes (
  meaning varchar(250) not null,
  code varchar(100),
  category varchar(100),
  route varchar(100),
  concentration numeric,
  conc_units varchar(100),
  dosage numeric,
  dosage_units varchar(100),
  volume numeric,
  vol_units varchar(100),
  amount numeric,
  amount_units varchar(100),

  CONSTRAINT PK_treatment_codes PRIMARY KEY (meaning)
);

/* EHR_Lookups-11.119-11.120.sql */

INSERT INTO ehr_lookups.condition_codes
(code, meaning) VALUES
('gaf', 'in a group with adopted father'),
('mgaf', 'in a group with mother and adopted father')
;

/* EHR_Lookups-11.120-11.121.sql */

DROP TABLE IF EXISTS ehr_lookups.tissue_recipients;
CREATE TABLE ehr_lookups.tissue_recipients (
recipient varchar(255) not null,

CONSTRAINT PK_tissue_recipients PRIMARY KEY (recipient)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.tissue_recipients
(recipient) VALUES
('PI'),
('Pathologist'),
('NHPBMD'),
('Other')
 ;


INSERT INTO ehr_lookups.death_codes VALUES ('d-clin', 'Death - Clinical');


DROP TABLE IF EXISTS ehr_lookups.parasitology_method;
CREATE TABLE ehr_lookups.parasitology_method (
method varchar(255) not null,

CONSTRAINT PK_parasitology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.parasitology_method
(method) VALUES
('EIA'),
('Ova and Parasite Exam (Wet Prep)'),
('Ova and Parasite Exam (Concentration)'),
('Direct Smear')
;

INSERT INTO ehr_lookups.parasitology_method
(method) VALUES
('PCR'),
('Culture')
;

INSERT INTO ehr_lookups.blood_draw_services
(service) VALUES
('Viral Load')
;

/* EHR_Lookups-11.121-11.122.sql */

-- ----------------------------
-- Table structure for blood_draw_tube_type
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.blood_draw_tube_type;
CREATE TABLE ehr_lookups.blood_draw_tube_type (
type varchar(255) NOT NULL,

CONSTRAINT PK_blood_draw_tube_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of blood_draw_tube_type
-- ----------------------------
INSERT INTO ehr_lookups.blood_draw_tube_type
(type)
VALUES
('EDTA'),
('SST'),
('Heparin')
;

/* EHR_Lookups-11.122-11.123.sql */

delete from ehr_lookups.dental_priority ;

INSERT INTO ehr_lookups.dental_priority
VALUES
('Low', 'No tartar and no gingivitis', 1),
('Low/Medium', 'Mild tartar and no gingivitis.  Mild tartar and very localized gingivitis.', 2),
('Medium', 'Moderate tartar and no gingivitis.  Moderate tartar and very localized gingivitis.  Mild tartar and mild, generalized gingivitis.', 3),
('Medium/High', 'Severe tartar and no gingivitis.  Mild tartar and moderate, generalized gingivitis.  Moderate tartar and mild, generalized gingivitis.', 4),
('High', 'Anything needing extraction.  Severe tartar and generalized gingivitis.', 5)
;


INSERT INTO ehr_lookups.blood_draw_tube_type
(type)
VALUES
('No Additive')
;


DROP TABLE IF EXISTS ehr_lookups.clinpath_collection_method;
CREATE TABLE ehr_lookups.clinpath_collection_method (
method varchar(255) not null,

CONSTRAINT PK_clinpath_collection_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.clinpath_collection_method
(method) VALUES
('Aspirate'),
('Biopsy'),
('Curette'),
('Skin scraping'),
('Swab'),
('Syringe aspirate'),
('Venipuncture')
;


DROP TABLE IF EXISTS ehr_lookups.clinpath_sampletype;
CREATE TABLE ehr_lookups.clinpath_sampletype (
sampletype varchar(255) not null,

CONSTRAINT PK_clinpath_sampletype PRIMARY KEY (sampletype)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.clinpath_sampletype
(sampletype) VALUES
('Abscess, bite wound, or deep wound'),
('Biopsy'),
('Body Fluid'),
('Bone or Tissue'),
('Buccal Swab'),
('Eye Swab - Left'),
('Eye Swab - Right'),
('Ear, eye, skin swab'),
('Feces'),
('Genital Swab'),
('Hair'),
('Heparinized Whole Blood'),
('Lithium Heparin Plasma'),
('Nail'),
('Rectal Swab'),
('Serum'),
('Skin'),
('Sodium Citrate Whole Blood'),
('Soft Tissue Aspirate'),
('Tissue Biopsy'),
('Ulcers (decubitus and nodules)'),
('Urine'),
('Vaginal Swab Specimen Collection Kit'),
('Whole Blood EDTA')
;


alter table ehr_lookups.clinpath_tests
  drop column units,
  add column units varchar(20)
;

INSERT INTO ehr_lookups.clinpath_tests
(testname, dataset) VALUES
('ELISA - HBV', 'Virology'),
('ELISA - SRV', 'Virology'),
('ELISA - SIV', 'Virology'),
('ELISA - STLV-1', 'Virology'),
('ELISA - Measles', 'Virology'),
('PCR - STLV-1', 'Virology'),
('PCR - SRV 1,2,3,4,5', 'Virology'),
('Isolation - HBV', 'Virology'),
('CBC', 'Hematology'),
('Glycosylated Hemoglobin', 'Hematology'),
('Vet-19 Chem Panel', 'Chemistry'),
('Lipid Panel', 'Chemistry'),
('Prothrombin Time (PT) and Activated Partial Thromboplastin Time (APTT)', 'Chemistry'),
('Ova and Parasite Antigen Panel (EIA)', 'Parasitology'),
('Ova and Parasite Concentration (Fecal Float)', 'Parasitology'),
('Ova and Parasite Wet Prep', 'Parasitology'),
('Direct Smear for Protozoa', 'Parasitology'),
('Culture, Enteric', 'Bacteriology'),
('Culture, Bacterial/Smear', 'Bacteriology'),
('Culture, Fungus, Dermal/Smear', 'Bacteriology'),
('Culture, Sterile Fluid/Tissue/Smear', 'Bacteriology'),
('Culture, Urine', 'Bacteriology'),
('Culture, Wound/Smear', 'Bacteriology'),
('Culture, Other', 'Bacteriology'),
('Chlamydia trachomatis Detection by NAA', 'Bacteriology'),
('GIFN for TB detection', 'Bacteriology')
;

/* EHR_Lookups-11.123-11.124.sql */

INSERT INTO ehr_lookups.clinpath_tests
(testname, dataset) VALUES
('Occult Blood', 'Parasitology'),
('Mycobacteria Smear and Culture', 'Bacteriology'),
('PCR - Individual Bacterium', 'Bacteriology')
;

/* EHR_Lookups-11.124-11.125.sql */

DROP TABLE IF EXISTS ehr_lookups.clinpath_types;
CREATE TABLE ehr_lookups.clinpath_types (
type varchar(255) not null,

CONSTRAINT PK_clinpath_types PRIMARY KEY (type)
)
WITH (OIDS=FALSE)
;


INSERT INTO ehr_lookups.clinpath_types
(type) VALUES
('Bacteriology'),
('Chemistry'),
('Hematology'),
('Immunology'),
('Parasitology'),
('Urinalysis'),
('Virology')
;

/* EHR_Lookups-11.125-11.126.sql */

DELETE FROM ehr_lookups.clinpath_collection_method
WHERE method like '%Biopsy%';

INSERT INTO ehr_lookups.clinpath_collection_method
(method) VALUES
('Biopsy, punch'),
('Biopsy, excisional'),
('Biopsy, needle (true cut)')
;




DELETE FROM ehr_lookups.clinpath_sampletype;

INSERT INTO ehr_lookups.clinpath_sampletype
(sampletype) VALUES
('Bone�'),
('Feces�'),
('Hair�'),
('Blood -�Heparinized Whole Blood�'),
('Blood -�EDTA�Whole Blood�'),
('Blood -�Plasma�Lithium Heparin'),
('Blood -�Sodium Citrate Whole Blood�'),
('Blood - Serum�'),
('Blood - Plasma EDTA'),
('Fluid, abdominal'),
('Fluid, thorax'),
('Fluid, uterine'),
('Mass�(list tissue/location)'),
('Nail�'),
('Skin��'),
('Swab -�Buccal�'),
('Swab -��left Eye �'),
('Swab -�Right�Eye�'),
('Swab -��Genital'),
('Swab -�Rectal'),
('Urine�'),
('Vaginal Swab Specimen Collection Kit�'),
('Wound/abscess�(list tissue/location)')
;

drop table ehr_lookups.clinpath_services;

/* EHR_Lookups-11.126-11.127.sql */

INSERT INTO ehr_lookups.pe_region
(region)
VALUES
('EENT'),
('Skin'),
('Urogenital'),
('Palpation'),
('Auscultation'),
('Digits')
;

/* EHR_Lookups-11.127-11.128.sql */

INSERT INTO ehr_lookups.clinpath_collection_method
(method) VALUES
('Cystocentesis'),
('Void'),
('Catheter')
;

INSERT INTO ehr_lookups.clinpath_tests
(testname, dataset)
VALUES
('Chol/HDL Ratio', 'Chemistry'),
('Osmolarity', 'Chemistry');
;

/* EHR_Lookups-11.128-11.129.sql */

DROP TABLE IF EXISTS ehr_lookups.urinalysis_qualitative_results;
CREATE TABLE ehr_lookups.urinalysis_qualitative_results (
result varchar(255) not null,

CONSTRAINT PK_urinalysis_qualitative_results PRIMARY KEY (result)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.urinalysis_qualitative_results
(result) VALUES
('Small'),
('Moderate'),
('Large'),
('Trace'),
('Trace-Lysed'),
('Trace-Intact'),
('Clear'),
('Hazy'),
('Cloudy'),
('Flocc.')
;

/* EHR_Lookups-11.129-11.130.sql */

DROP TABLE IF EXISTS ehr_lookups.blood_tube_volumes;
CREATE TABLE ehr_lookups.blood_tube_volumes (
volume float,
tube_types varchar(100),

CONSTRAINT PK_blood_tube_volumes PRIMARY KEY (volume)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.blood_tube_volumes
(tube_types, volume) VALUES
('EDTA', 0.5),
('EDTA', 2),
('SST', 3.5),
('SST', 5),
('Heparin', 4),
('EDTA,Heparin', 6)
;

/* EHR_Lookups-11.130-11.131.sql */

DROP TABLE IF EXISTS ehr_lookups.tattoo_status;
CREATE TABLE ehr_lookups.tattoo_status (
status varchar(100),

CONSTRAINT PK_tattoo_status PRIMARY KEY (status)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.tattoo_status
(status) VALUES
('Good'),
('Poor'),
('Absent'),
('Done Today')
;


DROP TABLE IF EXISTS ehr_lookups.pe_remarks;
CREATE TABLE ehr_lookups.pe_remarks (
remark varchar(500),

CONSTRAINT PK_pe_remarks PRIMARY KEY (remark)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.pe_remarks
(remark) VALUES
('Physical exam'),
('Physical exam and TB test'),
('Pre-assignment physical exam'),
('Pre-assignment physical exam and TB test')
;

INSERT INTO ehr_lookups.encounter_types
(type) VALUES
('Physical Exam and TB Test'),
('Pre-assignment Physical Exam'),
('Pre-assignment Physical Exam and TB Test')
;

/* EHR_Lookups-11.131-11.132.sql */

INSERT INTO ehr_lookups.amount_units VALUES ('ounces');

ALTER table ehr_lookups.treatment_codes
  add column qualifier varchar(200)
  ;

/* EHR_Lookups-11.132-11.133.sql */

alter table ehr_lookups.dosage_units
  add column denominator varchar(20)
  ;

update ehr_lookups.dosage_units set denominator = 'kg' where unit like '%kg' ;

INSERT INTO ehr_lookups.dosage_units VALUES ('mg/animal', 'mg', 'animal');

ALTER TABLE ehr_lookups.treatment_codes
  add column frequency varchar(100)
  ;



DELETE FROM ehr_lookups.treatment_codes;

INSERT INTO ehr_lookups.treatment_codes
(category,meaning,code,qualifier,route,concentration,conc_units,dosage,dosage_units,volume,vol_units,amount,amount_units,frequency)
values
('Analgesic' ,'Acetaminophen (Tylenol)' ,'c-60130' ,'' ,'oral' ,100 ,'mg/mL', 6, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Aspirin' ,'c-60320' ,'' ,'oral' ,81 ,'mg/tablet', 20, 'mg/kg', null, 'tablet(s)', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Buprenorphine' ,'c-60a11' ,'' ,'IM' ,0.3 ,'mg/mL', 0.01, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Carprofen (Rimadyl)' ,'c-60187' ,'' ,'oral' ,25 ,'mg/tablet', 2, 'mg/kg', null, 'tablet(s)', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Flunixin Meglumine (Banamine)' ,'c-d1467' ,'Flunixin Meglumine (Banamine)' ,'IM' ,50 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Ketoprofen' ,'c-603e0' ,'' ,'IM' ,100 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Meloxicam (injectable) (Metacam)' ,'c-60431' ,'' ,'SQ' ,5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Analgesic' ,'Meloxicam (oral suspension) (Metacam)' ,'c-60432' ,'' ,'oral' ,1.5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Analgesic' ,'Tramadol' ,'c-60111' ,'Tramadol' ,'oral' ,50 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Antibiotic' ,'Amoxicillin' ,'c-54620' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Azithromycin (Zithromax)' ,'c-52a20' ,'' ,'oral' ,40 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Cefazolin' ,'c-53120' ,'' ,'IM' ,330 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Antibiotic' ,'Ceftriaxone' ,'c-53560' ,'' ,'IM' , null,'mg/mL', 350, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Ceftriaxone sodium' ,'c-53561' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Cephalexin' ,'c-53130' ,'' ,'oral' ,50 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Antibiotic' ,'Clarithromycin' ,'c-52a10' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Clavulanic Acid/Amoxicillin trihydrate (Clavamox)' ,'w-10226' ,'' ,'oral' ,50 ,'mg/tablet', 10, 'mg/kg', null, 'tablet(s)', null, 'mg', 'THREE'),
('Antibiotic' ,'Enrofloxacin (Baytril)' ,'c-d1507' ,'' ,'IM' ,22.7 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Erythromycin' ,'c-52a00' ,'' ,'IM' ,200 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', ''),
('Antibiotic' ,'Penicillin' ,'c-54221' ,'Penicillin' ,'IM' ,300000 ,'units/mL', 50000, 'units/kg', null, 'mL', null, 'units', 'DAILYAM'),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 400mg/80mg tablet' ,'c-55638' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Sulfamethoxazole + trimethoprim (TMS) 200mg/40mg' ,'c-55635' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 80mg/16mg injectable' ,'c-55639' ,'' ,'SQ' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Tetracycline HCl' ,'c-55001' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Tylosin tartrate (Tylan)' ,'c-52340' ,'Tylosin tartrate (Tylan)' ,'oral' , null,'', 0.125, 'tsp/animal', 0.125, 'tsp', null, '', 'DAILYAM'),
('Antiparasitic' ,'Fenbendazole (Panacur)' ,'c-d4657' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antiparasitic' ,'Ivermectin (Ivomec)' ,'c-d3739' ,'' ,'SQ' ,10 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antiparasitic' ,'Metronidazole (Flagyl)' ,'c-52040' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('GI' ,'Bismuth Subsalicylate (Pepto Bismol)' ,'c-93040' ,'' ,'oral' ,17.5 ,'mg/mL', 2.33, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('GI' ,'Cisapride' ,'c-84990' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Famotidine' ,'c-84020' ,'' ,'oral' ,10 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('GI' ,'Inulin (Fiber Bites) ' ,'r-f94e9' ,'Fiber Bites' ,'oral' ,2 ,'g/piece', 1, 'piece', null, 'piece(s)', null, 'g', 'DAILYAM'),
('GI' ,'Inulin (Fiber Choice)' ,'c-b0158' ,'Fiber Choice' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Lactobacillus acidophilus/reuteri/rhomnosus (Primadophilus)' ,'w-10222' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Loperamide hydrochloride (Immodium)' ,'c-84540' ,'Immodium' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Metoclopramide' ,'c-84040' ,'' ,'SQ' ,5 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('GI' ,'Omeprazole (Prilosec)' ,'c-c22fa' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'orallycharbophil (Fiberlax)' ,'c-84560' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Primadophilus chewable tablet)' ,'f-61e1f' ,'Primadophilus chewable tablet' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Primadophilus oralwder)' ,'f-61e1f' ,'Primadophilus oralwder' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Yakult)' ,'f-61e1f' ,'Yakult' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Psyllium (Metamucil)' ,'@e-82870' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Cloprostenol sodium (Estrumate)' ,'c-d2985' ,'' ,'IM' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Dexamethasone SP ' ,'c-913a4' ,'Dexamethasone SP ' ,'IM' ,4 ,'mg/mL', 0.5, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Hormone' ,'FSH (Follicle Stimulating Hormone)' ,'c-a1580' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'hCG (human chorionic gonadotropin)' ,'c-a1010' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'hCG Recombinant' ,'w-10030' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Human FSH Recombinant' ,'w-10011' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Insulin Glargine' ,'c-a2206' ,'' ,'IM' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Medroxyprogesterone Acetate (Deoral-provera)' ,'c-a1221' ,'' ,'IM' ,150 ,'mg/mL', 150, 'mg/animal', null, 'mL', null, 'mg', 'MONTHLY'),
('Hormone' ,'Oxytocin' ,'c-a0d05' ,'' ,'IM' ,20 ,'mg/mL', null, 'mg/kg', null, 'mL', null, 'mg', ''),
('Hormone' ,'Pioglitazone hcl (Actos)' ,'w-10053' ,'' ,'oral' ,45 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Hormone' ,'Progesterone preparation' ,'c-a1210' ,'Progesterone preparation' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Prostaglandin F2Alpha tromethamine (Prostamate)' ,'f-ba150' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Clomipramine (Clomicalm)' ,'c-622b0' ,'Clomipramine (Clomicalm)' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Diazepam (injectable) (Valium)' ,'c-64555' ,'' ,'IM' ,5 ,'mg/mL', 0.05, 'mg/kg', null, 'mL', null, 'mg', ''),
('Miscellaneous' ,'Diazepam (oral) (Valium)' ,'c-64555' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Diphenhydramine hydrochloride (Benadryl)' ,'c-51451' ,'' ,'oral' ,25 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Miscellaneous' ,'Enalapril maleate' ,'c-803c1' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Epinephrine' ,'c-680d0' ,'Epinephrine' ,'IV' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Furosemide (Lasix)' ,'c-72040' ,'' ,'IM' ,20 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 'THREE'),
('Miscellaneous' ,'Gabapentin (Neurontin Gabarone)' ,'c-61002' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Ketoconazole oral suspension ' ,'c-52b50' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin w/ Iron (Animal Parade Gummi)' ,'w-10068' ,'Animal Parade Gummi' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin w/ Iron (Solaray Chewable)' ,'w-10068' ,'Solaray Chewable' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin with Iron' ,'w-10068' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin without Iron' ,'w-10067' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'oraltassium chloride (oral solution)' ,'c-71063' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'oraltassium Gluconate (tumil-K)' ,'c-71064' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Enrichment' ,'w-10192' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Soak chow in ensure' ,'c-f0000' ,'Soak chow in ensure' ,'oral' , null,'', null, '', 1, '', null, '', 'TWICEAMPM'),
('Miscellaneous' ,'Soak chow in water' ,'c-f0000' ,'Soak chow in water' ,'oral' , null,'', null, '', 1, '', null, '', 'TWICEAMPM'),
('Miscellaneous' ,'Supp Food - 1 cup softies' ,'c-f0000' ,'1 cup softies' ,'oral' , null,'', null, '', 1, 'cup', null, '', 'DAILYAM'),
('Miscellaneous' ,'Supp Food - 1 oz. Zupreem' ,'c-f0000' ,'1 oz. Zupreem' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - 1/2 cup softies' ,'c-f0000' ,'1/2 cup softies' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - 1/2 cup yogurt' ,'c-f0000' ,'1/2 cup yogurt' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - Fruit' ,'c-f0000' ,'Fruit' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand' ,'c-f0000' ,'PB Sand' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton' ,'c-f0000' ,'PB Sand or Fig Newton' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton / Fruit' ,'c-f0000' ,'PB Sand or Fig Newton or Fruit' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Yogurt Sand' ,'c-f0000' ,'PB Sand or Yogurt Sand' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Food' ,'c-f0000' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Liquid Diet' ,'c-f2300' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Liquid Diet - Ensure' ,'c-f2300' ,'Ensure' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Tacrolimus (dilution to 0.3 mg/ml with .9% NaCl) (FK506)' ,'w-10137' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Sedative' ,'Fluoxetine (Prozac)' ,'c-62290' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'1% Silver sulfadiazine (Silvadine)' ,'c-902b0' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'2% Miconazole Nitrate' ,'c-52b62' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'Panalog ointment' ,'c-d4673' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ointment)' ,'c-d1451' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ophthalmic Ointment)' ,'w-10031' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'Tolnaftate oralwder (Tinactin)' ,'f-61a58' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Fish Oil' ,'c-8060a' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Insulin-NPH-Humulin N' ,'c-a2220' ,'' ,'IM' , null,'', null, '', null, '', null, '', '')
;

/* EHR_Lookups-11.133-11.134.sql */

DELETE FROM ehr_lookups.clinpath_sampletype;

INSERT INTO ehr_lookups.clinpath_sampletype
(sampletype) VALUES
('Bone'),
('Feces'),
('Hair'),
('Blood - Heparinized Whole Blood'),
('Blood - EDTA Whole Blood'),
('Blood - Plasma Lithium Heparin'),
('Blood - Sodium Citrate Whole Blood'),
('Blood - Serum'),
('Blood - Plasma EDTA'),
('Fluid, abdominal'),
('Fluid, thorax'),
('Fluid, uterine'),
('Mass (list tissue/location)'),
('Nail'),
('Skin'),
('Swab - Buccal'),
('Swab - Left Eye'),
('Swab - Right Eye'),
('Swab - Genital'),
('Swab - Rectal'),
('Urine'),
('Vaginal Swab Specimen Collection Kit'),
('Wound/abscess (list tissue/location)')
;


update ehr_lookups.gender_codes set meaning = 'female' where meaning = 'Female';

/* EHR_Lookups-11.134-11.135.sql */

INSERT INTO ehr_lookups.dental_jaw VALUES ('Both');
INSERT INTO ehr_lookups.dental_side VALUES ('Both');
INSERT INTO ehr_lookups.dental_status VALUES ('Pulpotomized');
INSERT INTO ehr_lookups.dental_status VALUES ('Retained Deciduous');

INSERT INTO ehr_lookups.condition_codes VALUES ('gmaf', 'in a group with the mother and adopted father');

DROP TABLE IF EXISTS ehr_lookups.blood_code_prefixes;
CREATE TABLE ehr_lookups.blood_code_prefixes (
prefix varchar(10) NOT NULL,

CONSTRAINT PK_blood_code_prefixes PRIMARY KEY (prefix)
)
WITH (OIDS=FALSE)

;

insert into ehr_lookups.blood_code_prefixes
(prefix) values
('a'),
('aa'),
('ab'),
('ac'),
('ad'),
('ae'),
('ag'),
('al'),
('am'),
('ap'),
('ar'),
('as'),
('aw'),
('b1'),
('b2'),
('b3'),
('b4'),
('b5'),
('b6'),
('b7'),
('b8'),
('b9'),
('ba'),
('bb'),
('bc'),
('bd'),
('bh'),
('bm'),
('br'),
('c1'),
('c2'),
('c3'),
('c4'),
('c5'),
('c6'),
('c7'),
('c8'),
('c9'),
('ca'),
('cb'),
('cc'),
('ct'),
('d'),
('da'),
('dh'),
('dr'),
('ds'),
('dy'),
('e-'),
('e1'),
('e2'),
('e3'),
('e4'),
('e5'),
('e6'),
('e7'),
('e8'),
('e9'),
('ec'),
('et'),
('f'),
('fb'),
('fm'),
('g'),
('gc'),
('gm'),
('gs'),
('gv'),
('he'),
('i'),
('ia'),
('iu'),
('j'),
('jd'),
('je'),
('jk'),
('jr'),
('jt'),
('jv'),
('k'),
('kr'),
('ks'),
('l'),
('la'),
('lc'),
('le'),
('lf'),
('lh'),
('lj'),
('m'),
('mb'),
('mh'),
('mm'),
('mo'),
('mp'),
('ms'),
('mw'),
('n'),
('nd'),
('nh'),
('ni'),
('ns'),
('o-'),
('o'),
('p'),
('pf'),
('pg'),
('pk'),
('po'),
('pw'),
('q'),
('r'),
('rf'),
('rg'),
('rh'),
('rr'),
('rs'),
('rt'),
('s-'),
('s'),
('sa'),
('sb'),
('sc'),
('si'),
('sm'),
('sp'),
('sw'),
('t-'),
('t'),
('t@'),
('tc'),
('th'),
('tm'),
('tr'),
('ts'),
('tz'),
('u'),
('v'),
('va'),
('vb'),
('vc'),
('vd'),
('ve'),
('vf'),
('vg'),
('vh'),
('vj'),
('vr'),
('vt'),
('vv'),
('w'),
('wb'),
('wm'),
('ws'),
('y'),
('ys'),
('z'),
('zz')
;

DROP TABLE IF EXISTS ehr_lookups.snomed_qualifiers;
CREATE TABLE ehr_lookups.snomed_qualifiers (
qualifier varchar(100) NOT NULL,

CONSTRAINT PK_snomed_qualifiers PRIMARY KEY (qualifier)
)
WITH (OIDS=FALSE)

;

insert into ehr_lookups.snomed_qualifiers
(qualifier) values
('right'),
('left'),
('proximal'),
('middle'),
('distal'),
('both'),
('entire')
;

INSERT INTO ehr_lookups.necropsy_perfusion VALUES ('PBS');


DROP TABLE IF EXISTS ehr_lookups.preservation_solutions;
CREATE TABLE ehr_lookups.preservation_solutions (
solution varchar(100) NOT NULL,

CONSTRAINT PK_preservation_solutions PRIMARY KEY (solution)
)
WITH (OIDS=FALSE)

;

insert into ehr_lookups.preservation_solutions
(solution) values
('10% Formalin'),
('4% PFA'),
('2% PFA'),
('RPMI'),
('PBS'),
('RNA Later'),
('OCT'),
('Liquid Nitrogen'),
('Dry Ice'),
('Foil'),
('Fresh')
;

/* EHR_Lookups-11.135-11.136.sql */

DELETE FROM ehr_lookups.treatment_codes;

INSERT INTO ehr_lookups.treatment_codes
(category,meaning,code,qualifier,route,concentration,conc_units,dosage,dosage_units,volume,vol_units,amount,amount_units,frequency)
values
('Analgesic' ,'Acetaminophen (Tylenol)' ,'c-60130' ,'' ,'oral' ,100 ,'mg/mL', 6, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Aspirin' ,'c-60320' ,'' ,'oral' ,81 ,'mg/tablet', 20, 'mg/kg', null, 'tablet(s)', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Buprenorphine' ,'c-60a11' ,'' ,'IM' ,0.3 ,'mg/mL', 0.01, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Carprofen (Rimadyl)' ,'c-60187' ,'Rimadyl' ,'oral' ,25 ,'mg/tablet', 2, 'mg/kg', null, 'tablet(s)', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Flunixin Meglumine (Banamine)' ,'c-d1467' ,'Flunixin Meglumine (Banamine)' ,'IM' ,50 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Ketoprofen' ,'c-603e0' ,'' ,'IM' ,100 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Analgesic' ,'Meloxicam (injectable) (Metacam)' ,'c-60431' ,'' ,'SQ' ,5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Analgesic' ,'Meloxicam (oral suspension) (Metacam)' ,'c-60432' ,'' ,'oral' ,1.5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Analgesic' ,'Tramadol' ,'c-60111' ,'Tramadol' ,'oral' ,50 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Antibiotic' ,'Amoxicillin' ,'c-54620' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Azithromycin (Zithromax)' ,'c-52a20' ,'' ,'oral' ,40 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Cefazolin' ,'c-53120' ,'' ,'IM' ,330 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Antibiotic' ,'Ceftriaxone' ,'c-53560' ,'' ,'IM' , null,'mg/mL', 350, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Ceftriaxone sodium' ,'c-53561' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Cephalexin' ,'c-53130' ,'' ,'oral' ,50 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('Antibiotic' ,'Clarithromycin' ,'c-52a10' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Clavulanic Acid/Amoxicillin trihydrate (Clavamox)' ,'w-10226' ,'' ,'oral' ,50 ,'mg/tablet', 10, 'mg/kg', null, 'tablet(s)', null, 'mg', 'THREE'),
('Antibiotic' ,'Enrofloxacin (Baytril)' ,'c-d1507' ,'' ,'IM' ,22.7 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antibiotic' ,'Erythromycin' ,'c-52a00' ,'' ,'IM' ,200 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', ''),
('Antibiotic' ,'Penicillin' ,'c-54221' ,'Penicillin' ,'IM' ,300000 ,'units/mL', 50000, 'units/kg', null, 'mL', null, 'units', 'DAILYAM'),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 400mg/80mg tablet' ,'c-55638' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Sulfamethoxazole + trimethoprim (TMS) 200mg/40mg' ,'c-55635' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 80mg/16mg injectable' ,'c-55639' ,'' ,'SQ' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Tetracycline HCl' ,'c-55001' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Antibiotic' ,'Tylosin tartrate (Tylan)' ,'c-52340' ,'Tylosin tartrate (Tylan)' ,'oral' , null,'', 0.125, 'tsp/animal', 0.125, 'tsp', null, '', 'DAILYAM'),
('Antiparasitic' ,'Fenbendazole (Panacur)' ,'c-d4657' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antiparasitic' ,'Ivermectin (Ivomec)' ,'c-d3739' ,'' ,'SQ' ,10 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Antiparasitic' ,'Metronidazole (Flagyl)' ,'c-52040' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('GI' ,'Bismuth Subsalicylate (Pepto Bismol)' ,'c-93040' ,'' ,'oral' ,17.5 ,'mg/mL', 2.33, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('GI' ,'Cisapride' ,'c-84990' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Famotidine' ,'c-84020' ,'' ,'oral' ,10 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('GI' ,'Inulin (Fiber Bites) ' ,'r-f94e9' ,'' ,'oral' ,2 ,'g/piece', 1, 'piece', null, 'piece(s)', null, 'g', 'DAILYAM'),
('GI' ,'Inulin (Fiber Choice)' ,'c-b0158' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Lactobacillus acidophilus/reuteri/rhomnosus (Primadophilus)' ,'w-10222' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Loperamide hydrochloride (Immodium)' ,'c-84540' ,'Immodium' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Metoclopramide' ,'c-84040' ,'' ,'SQ' ,5 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 'TWICEAMPM'),
('GI' ,'Omeprazole (Prilosec)' ,'c-c22fa' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'orallycharbophil (Fiberlax)' ,'c-84560' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Primadophilus chewable tablet)' ,'f-61e1f' ,'Primadophilus chewable tablet' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Primadophilus oralwder)' ,'f-61e1f' ,'Primadophilus oralwder' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Probiotic (Yakult)' ,'f-61e1f' ,'Yakult' ,'oral' , null,'', null, '', null, '', null, '', ''),
('GI' ,'Psyllium (Metamucil)' ,'@e-82870' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Cloprostenol sodium (Estrumate)' ,'c-d2985' ,'' ,'IM' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Dexamethasone SP ' ,'c-913a4' ,'' ,'IM' ,4 ,'mg/mL', 0.5, 'mg/kg', null, 'mL', null, 'mg', 'DAILYAM'),
('Hormone' ,'FSH (Follicle Stimulating Hormone)' ,'c-a1580' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'hCG (human chorionic gonadotropin)' ,'c-a1010' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'hCG Recombinant' ,'w-10030' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Human FSH Recombinant' ,'w-10011' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Insulin Glargine' ,'c-a2206' ,'' ,'IM' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Medroxyprogesterone Acetate (Deoral-provera)' ,'c-a1221' ,'' ,'IM' ,150 ,'mg/mL', 150, 'mg/animal', null, 'mL', null, 'mg', 'MONTHLY'),
('Hormone' ,'Oxytocin' ,'c-a0d05' ,'' ,'IM' ,20 ,'mg/mL', null, 'mg/kg', null, 'mL', null, 'mg', ''),
('Hormone' ,'Pioglitazone hcl (Actos)' ,'w-10053' ,'' ,'oral' ,45 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Hormone' ,'Progesterone preparation' ,'c-a1210' ,'Progesterone preparation' ,'' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Prostaglandin F2Alpha tromethamine (Prostamate)' ,'f-ba150' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Clomipramine (Clomicalm)' ,'c-622b0' ,'Clomicalm' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Diazepam (injectable) (Valium)' ,'c-64555' ,'' ,'IM' ,5 ,'mg/mL', 0.05, 'mg/kg', null, 'mL', null, 'mg', ''),
('Miscellaneous' ,'Diazepam (oral) (Valium)' ,'c-64555' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Diphenhydramine hydrochloride (Benadryl)' ,'c-51451' ,'' ,'oral' ,25 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', ''),
('Miscellaneous' ,'Enalapril maleate' ,'c-803c1' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Epinephrine' ,'c-680d0' ,'Epinephrine' ,'IV' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Furosemide (Lasix)' ,'c-72040' ,'' ,'IM' ,20 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 'THREE'),
('Miscellaneous' ,'Gabapentin (Neurontin Gabarone)' ,'c-61002' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Ketoconazole oral suspension ' ,'c-52b50' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin w/ Iron (Animal Parade Gummi)' ,'w-10068' ,'Animal Parade Gummi' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin w/ Iron (Solaray Chewable)' ,'w-10068' ,'Solaray Chewable' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin with Iron' ,'w-10068' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Multivitamin without Iron' ,'w-10067' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'oraltassium chloride (oral solution)' ,'c-71063' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'oraltassium Gluconate (tumil-K)' ,'c-71064' ,'tumil-K' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Enrichment' ,'w-10192' ,'Supplemental Enrichment' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Soak chow in ensure' ,'c-f0000' ,'Soak chow in ensure' ,'oral' , null,'', null, '', 1, '', null, '', 'TWICEAMPM'),
('Miscellaneous' ,'Soak chow in water' ,'c-f0000' ,'Soak chow in water' ,'oral' , null,'', null, '', 1, '', null, '', 'TWICEAMPM'),
('Miscellaneous' ,'Supp Food - 1 cup softies' ,'c-f0000' ,'softies' ,'oral' , null,'', null, '', 1, 'cup', null, '', 'DAILYAM'),
('Miscellaneous' ,'Supp Food - 1 oz. Zupreem' ,'c-f0000' ,'1 oz. Zupreem' ,'oral' , null,'', null, '', 1, 'ounce(s)', null, '', ''),
('Miscellaneous' ,'Supp Food - 1/2 cup softies' ,'c-f0000' ,'softies' ,'oral' , null,'', null, '', 0.5, 'cup', null, '', ''),
('Miscellaneous' ,'Supp Food - 1/2 cup yogurt' ,'c-f0000' ,'yogurt' ,'oral' , null,'', null, '', 0.5, 'cup', null, '', ''),
('Miscellaneous' ,'Supp Food - Fruit' ,'c-f0000' ,'Fruit' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand' ,'c-f0000' ,'PB Sand' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton' ,'c-f0000' ,'PB Sand or Fig Newton' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton / Fruit' ,'c-f0000' ,'PB Sand or Fig Newton or Fruit' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supp Food - PB Sand / Yogurt Sand' ,'c-f0000' ,'PB Sand or Yogurt Sand' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Food' ,'c-f0000' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Liquid Diet' ,'c-f2300' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Supplemental Liquid Diet - Ensure' ,'c-f2300' ,'Ensure' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Tacrolimus (dilution to 0.3 mg/ml with .9% NaCl) (FK506)' ,'w-10137' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Sedative' ,'Fluoxetine (Prozac)' ,'c-62290' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'1% Silver sulfadiazine (Silvadine)' ,'c-902b0' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'2% Miconazole Nitrate' ,'c-52b62' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'Panalog ointment' ,'c-d4673' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ointment)' ,'c-d1451' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ophthalmic Ointment)' ,'w-10031' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Topical' ,'Tolnaftate oralwder (Tinactin)' ,'f-61a58' ,'' ,'' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Fish Oil' ,'c-8060a' ,'' ,'oral' , null,'', null, '', null, '', null, '', ''),
('Hormone' ,'Insulin-NPH-Humulin N' ,'c-a2220' ,'' ,'IM' , null,'', null, '', null, '', null, '', ''),
('Miscellaneous' ,'Water' ,'c-10120' ,'' ,'' , null,'', null, '', null, '', null, '', '')
;


INSERT INTO ehr_lookups.volume_units VALUES ('cup');
INSERT INTO ehr_lookups.volume_units VALUES ('ounce(s)');

/* EHR_Lookups-11.136-11.137.sql */

delete from ehr_lookups.dental_gingivitis where result = 'No';
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('None', 1);


DROP TABLE IF EXISTS ehr_lookups.virology_method;
CREATE TABLE ehr_lookups.virology_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_virology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;

DROP TABLE IF EXISTS ehr_lookups.immunology_method;
CREATE TABLE ehr_lookups.immunology_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_immunology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;

DROP TABLE IF EXISTS ehr_lookups.chemistry_method;
CREATE TABLE ehr_lookups.chemistry_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_chemistry_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;

DROP TABLE IF EXISTS ehr_lookups.virology_method;
CREATE TABLE ehr_lookups.virology_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_virology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;

DROP TABLE IF EXISTS ehr_lookups.hematology_method;
CREATE TABLE ehr_lookups.hematology_method (
  method varchar(255) NOT NULL,

  CONSTRAINT PK_hematology_method PRIMARY KEY (method)
)
WITH (OIDS=FALSE)

;


DROP TABLE IF EXISTS ehr_lookups.urinalysis_tests;
CREATE TABLE ehr_lookups.urinalysis_tests (
testid varchar(100) NOT NULL,
name varchar(100),
units varchar(100),

CONSTRAINT PK_urinalysis_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.urinalysis_tests VALUES ('BILIRUBIN', 'Bilirubin', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('KETONE', 'Ketone', 'mg/dL');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('SP_GRAVITY', 'Specific Gravity', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('BLOOD', 'Blood', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('PH', 'pH', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('PROTEIN', 'Protein', 'mg/dL');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('UROBILINOGEN', 'Urobilinogen', 'E.U./dL');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('NITRITE', 'Nitrite', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('LEUKOCYTES', 'Leukocytes', 'no units');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('APPEARANCE', 'Appearance', '');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('GLUC', 'Glucose', 'mg/dL');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('MICROSCOPIC', 'Microscopic', '');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('TURBIDITY', 'Turbidity', '');
INSERT INTO ehr_lookups.urinalysis_tests VALUES ('COLOR', 'Color', '');


DROP TABLE IF EXISTS ehr_lookups.immunology_tests;
CREATE TABLE ehr_lookups.immunology_tests (
testid varchar(100) NOT NULL,
name varchar(100),
units varchar(100),

CONSTRAINT PK_immunology_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.immunology_tests VALUES ('CD20', 'CD20', '');
INSERT INTO ehr_lookups.immunology_tests VALUES ('CD3', 'CD3', '');
INSERT INTO ehr_lookups.immunology_tests VALUES ('CD4', 'CD4', '');
INSERT INTO ehr_lookups.immunology_tests VALUES ('CD8', 'CD8', '');



DROP TABLE IF EXISTS ehr_lookups.chemistry_tests;
CREATE TABLE ehr_lookups.chemistry_tests (
testid varchar(100) NOT NULL,
name varchar(100),
units varchar(100),

CONSTRAINT PK_chemistry_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)
;

INSERT INTO ehr_lookups.chemistry_tests VALUES ('GLUC', 'Glucose', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('BUN', 'Blood urea nitrogen', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('CPK', 'Creatine phosphokinase', 'U/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('CREAT', 'Creatinine', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('CHOL', 'Cholesterol', 'mg/dl');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('TRIG', 'Triglyceride', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('SGOT', 'Serum glutamic oxaloacetic transaminase', 'IU/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('SGPT', 'Serum glutamic pyruvic transaminase', 'IU/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('LDH', 'Lactate dehydrogenase', 'IU/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('LDL', 'Low-Density Lipoprotein', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('GGT', 'Gamma-glutamyltransferase', 'IU/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('TP', 'Total Protein', 'g/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('TB', 'Total Bilirubin', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('ALKP', 'Alkaline Phosphatase', 'IU/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('CA', 'Calcium', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('CL', 'Chloride', 'mEq/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('UA', 'Uric Acid', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('A/P', 'Albumin/Protein Ratio', 'ratio');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('ALB', 'Albumin', 'g/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('B/C', 'BUN/Creatinine Ratio', 'ratio');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('FE', 'Iron', '?g/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('FIBR', 'Fibrinogen', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('HDL', 'High-Density Lipoprotein', 'mg/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('HGB', 'Hemoglobin', 'g/dL');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('K', 'Potassium', 'mmol/L');
INSERT INTO ehr_lookups.chemistry_tests VALUES ('PHOS', 'Phosphorus', 'mg/dL');





DROP TABLE IF EXISTS ehr_lookups.hematology_tests;
CREATE TABLE ehr_lookups.hematology_tests (
testid varchar(100) NOT NULL,
name varchar(100),
units varchar(100),

CONSTRAINT PK_hematology_tests PRIMARY KEY (testid)
)
WITH (OIDS=FALSE)
;



INSERT INTO ehr_lookups.hematology_tests VALUES ('WBC', 'White Blood Cells', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('BANDS', 'Bands', '');
INSERT INTO ehr_lookups.hematology_tests VALUES ('BD', 'Bands??', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('BD-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('BS', 'Basophils', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('BS-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('EO', 'Eosinophils', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('EO-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('PLT', 'Platelets', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('RBC', 'Red Blood Cells', '10^6/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('RDW', 'Red blood cell distribution width', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('RETICULO', 'Reticulocytes', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('LY', 'Lymphocytes', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('LY-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MCH', 'Mean corpuscular hemoglobin', 'picograms');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MCHC', 'Mean corpuscular hemoglobin concentration', 'g/dL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MCV', 'Mean corpuscular volume', 'fL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('METAMYELO', 'Metamyelocytes', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MN', 'Monocytes', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MN-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MPV', 'Mean platelet volume', 'fl');
INSERT INTO ehr_lookups.hematology_tests VALUES ('MYELO', 'Myelocytes', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('NA', 'Sodium', 'mmol/L');
INSERT INTO ehr_lookups.hematology_tests VALUES ('NE', 'Neutrophils', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('NE-AB', 'AB = absolute count??', 'ths/uL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('PCV', 'Packed cell volume', '%');
INSERT INTO ehr_lookups.hematology_tests VALUES ('GLOB', 'Globulin', 'g/dL');
INSERT INTO ehr_lookups.hematology_tests VALUES ('GLYCOSYLATED HGB', 'GLYCOSYLATED HGB', '');
INSERT INTO ehr_lookups.hematology_tests VALUES ('HCT', 'Hematocrit', '%');

/* EHR_Lookups-11.137-11.138.sql */

DROP TABLE IF EXISTS ehr_lookups.booleanCombo;

CREATE TABLE ehr_lookups.booleanCombo
(
  key bool NOT NULL,
  display varchar(20),
  CONSTRAINT pk_booleanCombo PRIMARY KEY (key)
)
WITH (
  OIDS=FALSE
);

insert into ehr_lookups.booleanCombo
(key, display)
 values
(true, 'Yes'),
(false, 'No')
;

/* EHR_Lookups-11.138-11.139.sql */

alter table ehr_lookups.treatment_codes
  drop column frequency
  ;

alter table ehr_lookups.treatment_codes
  add column frequency integer
  ;

delete from ehr_lookups.treatment_codes;


INSERT INTO ehr_lookups.treatment_codes
(category,meaning,code,qualifier,route,concentration,conc_units,dosage,dosage_units,volume,vol_units,amount,amount_units,frequency)
values
('Analgesic' ,'Acetaminophen (Tylenol)' ,'c-60130' ,'' ,'oral' ,100 ,'mg/mL', 6, 'mg/kg', null, 'mL', null, 'mg', 4),
('Analgesic' ,'Aspirin' ,'c-60320' ,'' ,'oral' ,81 ,'mg/tablet', 20, 'mg/kg', null, 'tablet(s)', null, 'mg', 4),
('Analgesic' ,'Buprenorphine' ,'c-60a11' ,'' ,'IM' ,0.3 ,'mg/mL', 0.01, 'mg/kg', null, 'mL', null, 'mg', 4),
('Analgesic' ,'Carprofen (Rimadyl)' ,'c-60187' ,'Rimadyl' ,'oral' ,25 ,'mg/tablet', 2, 'mg/kg', null, 'tablet(s)', null, 'mg', 4),
('Analgesic' ,'Flunixin Meglumine (Banamine)' ,'c-d1467' ,'Flunixin Meglumine (Banamine)' ,'IM' ,50 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 4),
('Analgesic' ,'Ketoprofen' ,'c-603e0' ,'' ,'IM' ,100 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 4),
('Analgesic' ,'Meloxicam (injectable) (Metacam)' ,'c-60431' ,'' ,'SQ' ,5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 1),
('Analgesic' ,'Meloxicam (oral suspension) (Metacam)' ,'c-60432' ,'' ,'oral' ,1.5 ,'mg/mL', 0.1, 'mg/kg', null, 'mL', null, 'mg', 1),
('Analgesic' ,'Tramadol' ,'c-60111' ,'Tramadol' ,'oral' ,50 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', null),
('Antibiotic' ,'Amoxicillin' ,'c-54620' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Azithromycin (Zithromax)' ,'c-52a20' ,'' ,'oral' ,40 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', 1),
('Antibiotic' ,'Cefazolin' ,'c-53120' ,'' ,'IM' ,330 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 4),
('Antibiotic' ,'Ceftriaxone' ,'c-53560' ,'' ,'IM' , null,'mg/mL', 350, 'mg/kg', null, 'mL', null, 'mg', 1),
('Antibiotic' ,'Ceftriaxone sodium' ,'c-53561' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Cephalexin' ,'c-53130' ,'' ,'oral' ,50 ,'mg/mL', 25, 'mg/kg', null, 'mL', null, 'mg', 4),
('Antibiotic' ,'Clarithromycin' ,'c-52a10' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Clavulanic Acid/Amoxicillin trihydrate (Clavamox)' ,'w-10226' ,'' ,'oral' ,50 ,'mg/tablet', 10, 'mg/kg', null, 'tablet(s)', null, 'mg', 6),
('Antibiotic' ,'Enrofloxacin (Baytril)' ,'c-d1507' ,'' ,'IM' ,22.7 ,'mg/mL', 5, 'mg/kg', null, 'mL', null, 'mg', 1),
('Antibiotic' ,'Erythromycin' ,'c-52a00' ,'' ,'IM' ,200 ,'mg/mL', 20, 'mg/kg', null, 'mL', null, 'mg', null),
('Antibiotic' ,'Penicillin' ,'c-54221' ,'Penicillin' ,'IM' ,300000 ,'units/mL', 50000, 'units/kg', null, 'mL', null, 'units', 1),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 400mg/80mg tablet' ,'c-55638' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Sulfamethoxazole + trimethoprim (TMS) 200mg/40mg' ,'c-55635' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Sulfamethoxazole + trimethorprim (TMS) 80mg/16mg injectable' ,'c-55639' ,'' ,'SQ' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Tetracycline HCl' ,'c-55001' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Antibiotic' ,'Tylosin tartrate (Tylan)' ,'c-52340' ,'Tylosin tartrate (Tylan)' ,'oral' , null,'', 0.125, 'tsp/animal', 0.125, 'tsp', null, '', 1),
('Antiparasitic' ,'Fenbendazole (Panacur)' ,'c-d4657' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 1),
('Antiparasitic' ,'Ivermectin (Ivomec)' ,'c-d3739' ,'' ,'SQ' ,10 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 1),
('Antiparasitic' ,'Metronidazole (Flagyl)' ,'c-52040' ,'' ,'oral' ,100 ,'mg/mL', 50, 'mg/kg', null, 'mL', null, 'mg', 1),
('GI' ,'Bismuth Subsalicylate (Pepto Bismol)' ,'c-93040' ,'' ,'oral' ,17.5 ,'mg/mL', 2.33, 'mg/kg', null, 'mL', null, 'mg', 4),
('GI' ,'Cisapride' ,'c-84990' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('GI' ,'Famotidine' ,'c-84020' ,'' ,'oral' ,10 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', null),
('GI' ,'Inulin (Fiber Bites) ' ,'r-f94e9' ,'' ,'oral' ,2 ,'g/piece', 1, 'piece', null, 'piece(s)', null, 'g', 1),
('GI' ,'Inulin (Fiber Choice)' ,'c-b0158' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Lactobacillus acidophilus/reuteri/rhomnosus (Primadophilus)' ,'w-10222' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Loperamide hydrochloride (Immodium)' ,'c-84540' ,'Immodium' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Metoclopramide' ,'c-84040' ,'' ,'SQ' ,5 ,'mg/mL', 0.2, 'mg/kg', null, 'mL', null, 'mg', 4),
('GI' ,'Omeprazole (Prilosec)' ,'c-c22fa' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'orallycharbophil (Fiberlax)' ,'c-84560' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Probiotic (Primadophilus chewable tablet)' ,'f-61e1f' ,'Primadophilus chewable tablet' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Probiotic (Primadophilus oralwder)' ,'f-61e1f' ,'Primadophilus oralwder' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Probiotic (Yakult)' ,'f-61e1f' ,'Yakult' ,'oral' , null,'', null, '', null, '', null, '', null),
('GI' ,'Psyllium (Metamucil)' ,'@e-82870' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Cloprostenol sodium (Estrumate)' ,'c-d2985' ,'' ,'IM' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Dexamethasone SP ' ,'c-913a4' ,'' ,'IM' ,4 ,'mg/mL', 0.5, 'mg/kg', null, 'mL', null, 'mg', 1),
('Hormone' ,'FSH (Follicle Stimulating Hormone)' ,'c-a1580' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'hCG (human chorionic gonadotropin)' ,'c-a1010' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'hCG Recombinant' ,'w-10030' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Human FSH Recombinant' ,'w-10011' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Insulin Glargine' ,'c-a2206' ,'' ,'IM' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Medroxyprogesterone Acetate (Deoral-provera)' ,'c-a1221' ,'' ,'IM' ,150 ,'mg/mL', 150, 'mg/animal', null, 'mL', null, 'mg', 8),
('Hormone' ,'Oxytocin' ,'c-a0d05' ,'' ,'IM' ,20 ,'mg/mL', null, 'mg/kg', null, 'mL', null, 'mg', null),
('Hormone' ,'Pioglitazone hcl (Actos)' ,'w-10053' ,'' ,'oral' ,45 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', null),
('Hormone' ,'Progesterone preparation' ,'c-a1210' ,'Progesterone preparation' ,'' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Prostaglandin F2Alpha tromethamine (Prostamate)' ,'f-ba150' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Clomipramine (Clomicalm)' ,'c-622b0' ,'Clomicalm' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Diazepam (injectable) (Valium)' ,'c-64555' ,'' ,'IM' ,5 ,'mg/mL', 0.05, 'mg/kg', null, 'mL', null, 'mg', null),
('Miscellaneous' ,'Diazepam (oral) (Valium)' ,'c-64555' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Diphenhydramine hydrochloride (Benadryl)' ,'c-51451' ,'' ,'oral' ,25 ,'mg/tablet', null, 'mg/kg', null, 'tablet(s)', null, 'mg', null),
('Miscellaneous' ,'Enalapril maleate' ,'c-803c1' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Epinephrine' ,'c-680d0' ,'Epinephrine' ,'IV' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Furosemide (Lasix)' ,'c-72040' ,'' ,'IM' ,20 ,'mg/mL', 2, 'mg/kg', null, 'mL', null, 'mg', 6),
('Miscellaneous' ,'Gabapentin (Neurontin Gabarone)' ,'c-61002' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Ketoconazole oral suspension ' ,'c-52b50' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Multivitamin w/ Iron (Animal Parade Gummi)' ,'w-10068' ,'Animal Parade Gummi' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Multivitamin w/ Iron (Solaray Chewable)' ,'w-10068' ,'Solaray Chewable' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Multivitamin with Iron' ,'w-10068' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Multivitamin without Iron' ,'w-10067' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'oraltassium chloride (oral solution)' ,'c-71063' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'oraltassium Gluconate (tumil-K)' ,'c-71064' ,'tumil-K' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supplemental Enrichment' ,'w-10192' ,'Supplemental Enrichment' ,'' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Soak chow in ensure' ,'c-f0000' ,'Soak chow in ensure' ,'oral' , null,'', null, '', 1, '', null, '', 4),
('Miscellaneous' ,'Soak chow in water' ,'c-f0000' ,'Soak chow in water' ,'oral' , null,'', null, '', 1, '', null, '', 4),
('Miscellaneous' ,'Supp Food - 1 cup softies' ,'c-f0000' ,'softies' ,'oral' , null,'', null, '', 1, 'cup', null, '', 1),
('Miscellaneous' ,'Supp Food - 1 oz. Zupreem' ,'c-f0000' ,'1 oz. Zupreem' ,'oral' , null,'', null, '', 1, 'ounce(s)', null, '', null),
('Miscellaneous' ,'Supp Food - 1/2 cup softies' ,'c-f0000' ,'softies' ,'oral' , null,'', null, '', 0.5, 'cup', null, '', null),
('Miscellaneous' ,'Supp Food - 1/2 cup yogurt' ,'c-f0000' ,'yogurt' ,'oral' , null,'', null, '', 0.5, 'cup', null, '', null),
('Miscellaneous' ,'Supp Food - Fruit' ,'c-f0000' ,'Fruit' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supp Food - PB Sand' ,'c-f0000' ,'PB Sand' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton' ,'c-f0000' ,'PB Sand or Fig Newton' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supp Food - PB Sand / Fig Newton / Fruit' ,'c-f0000' ,'PB Sand or Fig Newton or Fruit' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supp Food - PB Sand / Yogurt Sand' ,'c-f0000' ,'PB Sand or Yogurt Sand' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supplemental Food' ,'c-f0000' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supplemental Liquid Diet' ,'c-f2300' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Supplemental Liquid Diet - Ensure' ,'c-f2300' ,'Ensure' ,'oral' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Tacrolimus (dilution to 0.3 mg/ml with .9% NaCl) (FK506)' ,'w-10137' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Sedative' ,'Fluoxetine (Prozac)' ,'c-62290' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Topical' ,'1% Silver sulfadiazine (Silvadine)' ,'c-902b0' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Topical' ,'2% Miconazole Nitrate' ,'c-52b62' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Topical' ,'Panalog ointment' ,'c-d4673' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ointment)' ,'c-d1451' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Topical' ,'orallymyxin B/Bacitracin/Neomycin (Triple Antibiotic Ophthalmic Ointment)' ,'w-10031' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Topical' ,'Tolnaftate oralwder (Tinactin)' ,'f-61a58' ,'' ,'' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Fish Oil' ,'c-8060a' ,'' ,'oral' , null,'', null, '', null, '', null, '', null),
('Hormone' ,'Insulin-NPH-Humulin N' ,'c-a2220' ,'' ,'IM' , null,'', null, '', null, '', null, '', null),
('Miscellaneous' ,'Water' ,'c-10120' ,'' ,'' , null,'', null, '', null, '', null, '', null)
;

/* EHR_Lookups-11.139-11.140.sql */

DELETE FROM ehr_lookups.death_cause;

INSERT INTO ehr_lookups.death_cause
(cause) VALUES
('Experimental'),
('Clinical'),
('Other'),
('Quarantine Clinical (QC)'),
('Quarantine Experimental (QX)'),
('Quarantine Other')
;

DROP TABLE IF EXISTS ehr_lookups.death_manner;
CREATE TABLE ehr_lookups.death_manner (
manner varchar(255) not null,

CONSTRAINT PK_death_manner PRIMARY KEY (manner)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.death_manner
(manner) VALUES
('Euthanasia'),
('Died during medical treatment'),
('Found dead'),
('Other')
;

delete from ehr_lookups.conc_units where unit = 'g/mL';

INSERT INTO ehr_lookups.conc_units
(unit, denominator, numerator) VALUES
('g/mL', 'g', 'mL')
;

delete from ehr_lookups.treatment_codes where meaning = 'Inulin (Fiber Bites) ';
delete from ehr_lookups.treatment_codes where meaning = 'Inulin (Fiber Bites)';


INSERT INTO ehr_lookups.treatment_codes
(category,meaning,code,qualifier,route,concentration,conc_units,dosage,dosage_units,volume,vol_units,amount,amount_units,frequency)
values
('GI' ,'Inulin (Fiber Bites)' ,'r-f94e9' ,'' ,'oral' ,2 ,'g/piece', null, null, 1, 'piece(s)', 2, 'g', 1)
;

/* EHR_Lookups-11.140-11.141.sql */

-- ----------------------------
-- Table structure for snomed_subsets
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.snomed_subsets;
CREATE TABLE ehr_lookups.snomed_subsets (
subset varchar(255) NOT NULL,

Container ENTITYID,
CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_snomed_subsets PRIMARY KEY (subset)
)
WITH (OIDS=FALSE)

;

/* EHR_Lookups-11.141-11.142.sql */

DELETE FROM ehr_lookups.clinpath_sampletype;

INSERT INTO ehr_lookups.clinpath_sampletype
(sampletype) VALUES
('Bone'),
('Feces'),
('Hair'),
('Blood - Heparinized Whole Blood'),
('Blood - EDTA Whole Blood'),
('Blood - Plasma Lithium Heparin'),
('Blood - Sodium Citrate Whole Blood'),
('Blood - Serum'),
('Blood - Plasma EDTA'),
('Fluid, abdominal'),
('Fluid, thorax'),
('Fluid, uterine'),
('Mass (list tissue/location)'),
('Nail'),
('Skin'),
('Swab - Buccal'),
('Swab - Left Eye'),
('Swab - Right Eye'),
('Swab - Genital'),
('Swab - Rectal'),
('Urine'),
('Vaginal Swab Specimen Collection Kit'),
('Wound/abscess (list tissue/location)')
;


-- ----------------------------
-- Table structure for ehr_lookups.biopsy_type
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.biopsy_type;
CREATE TABLE ehr_lookups.biopsy_type (
type varchar(255) not null,

CONSTRAINT PK_biopsy_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of biopsy_type
-- ----------------------------
INSERT INTO ehr_lookups.biopsy_type VALUES ('Clinical');
INSERT INTO ehr_lookups.biopsy_type VALUES ('Experimental');


delete from ehr_lookups.death_manner where manner='Died during experimental procedure';
INSERT INTO ehr_lookups.death_manner (manner) VALUES ('Died during experimental procedure');

/* EHR_Lookups-11.142-11.143.sql */

DROP TABLE IF EXISTS ehr_lookups.treatment_frequency;
CREATE TABLE ehr_lookups.treatment_frequency (
RowId serial NOT NULL,
meaning varchar(100) DEFAULT NULL NOT NULL,
sort_order integer,

CONSTRAINT PK_treatment_frequency PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;

--note: it is important that the rowIDs are consistent for legacy purposes
INSERT INTO ehr_lookups.treatment_frequency
(rowid, meaning, sort_order)
VALUES
(1, 'Daily - AM', 1),
(11, 'Daily - Noon', 2),
(4, 'Daily - PM', 3),
(5, 'Daily - Night', 4),
(2, 'Daily - AM/PM', 5),
(6, 'Daily - AM/Night', 6),
(3, 'Daily - AM/PM/Night', 7),
(12, 'Daily - Any Time', 8),
(7, 'Weekly', 9),
(8, 'Monthly', 10),
(9, 'Alternating Days', 11)
;


delete from ehr_lookups.amount_units where unit = 'no units';
INSERT INTO ehr_lookups.amount_units VALUES ('no units');

delete from ehr_lookups.volume_units where unit = 'no units';
INSERT INTO ehr_lookups.volume_units VALUES ('no units');


delete from ehr_lookups.dental_teeth;
INSERT INTO ehr_lookups.dental_teeth VALUES ('M3', '1');
INSERT INTO ehr_lookups.dental_teeth VALUES ('M2', '2');
INSERT INTO ehr_lookups.dental_teeth VALUES ('M1', '3');
INSERT INTO ehr_lookups.dental_teeth VALUES ('PM3', '4');
INSERT INTO ehr_lookups.dental_teeth VALUES ('PM2', '5');
INSERT INTO ehr_lookups.dental_teeth VALUES ('PM1', '6');
INSERT INTO ehr_lookups.dental_teeth VALUES ('K9', '7');
INSERT INTO ehr_lookups.dental_teeth VALUES ('I2', '8');
INSERT INTO ehr_lookups.dental_teeth VALUES ('I1', '9');


DROP TABLE IF EXISTS ehr_lookups.microchip_comments;
CREATE TABLE ehr_lookups.microchip_comments (
comment varchar(100),

CONSTRAINT PK_microchip_comments PRIMARY KEY (comment)
)
WITH (OIDS=FALSE)

;

insert into  ehr_lookups.microchip_comments
(comment) VALUES
('ok'),
('placed today'),
('not present')
;


INSERT INTO ehr_lookups.blood_tube_volumes
(tube_types, volume) VALUES
('EDTA', 3)
;

/* EHR_Lookups-11.143-11.144.sql */

INSERT INTO ehr_lookups.condition_codes VALUES ('gb', 'group breeding');


delete from ehr_lookups.dental_gingivitis where result = 'Not Recorded';
INSERT INTO ehr_lookups.dental_gingivitis VALUES ('Not Recorded', 1);


delete from ehr_lookups.dental_tartar where result = 'Not Recorded';
INSERT INTO ehr_lookups.dental_tartar VALUES ('Not Recorded');


update ehr_lookups.blood_billed_by set title = 'SPI' where code = 'c';

delete from ehr_lookups.bcs_score where score = '3.5';
INSERT INTO ehr_lookups.bcs_score VALUES ('3.5', 'Slightly Overweight', null);

/* EHR_Lookups-11.144-11.145.sql */

delete from ehr_lookups.encounter_types where type = 'Procedure - Clinical';
delete from ehr_lookups.encounter_types where type = 'Procedure - Training';
delete from ehr_lookups.encounter_types where type = 'Procedure - Experimental';
delete from ehr_lookups.encounter_types where type = 'Procedure - Other';


insert into ehr_lookups.encounter_types
(type) values
('Procedure')
;


DROP TABLE IF EXISTS ehr_lookups.restraint_type;
CREATE TABLE ehr_lookups.restraint_type (
type varchar(255) not null,
code varchar(255),
include bool,

CONSTRAINT PK_restraint_type PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of restraint_type
-- ----------------------------
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Table-Top', 'w-10238', true);
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Tube', '	w-10239', true);
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Other', null, true);
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Squeeze Back', null, false);
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Manual', null, false);
INSERT INTO ehr_lookups.restraint_type (type, code, include) VALUES ('Chemical', null, false);

/* EHR_Lookups-11.145-11.146.sql */

update ehr_lookups.conc_units set numerator = 'mL'
where unit = 'g/mL'
;

/* EHR_Lookups-11.20-11.30.sql */

/* EHR_Lookups-11.21-11.22.sql */

DROP TABLE IF EXISTS ehr_lookups.restraint_duration;
CREATE TABLE ehr_lookups.restraint_duration (
duration varchar(200),
sort_order integer,

CONSTRAINT PK_restraint_duration PRIMARY KEY (duration)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_remarks
-- ----------------------------
INSERT INTO ehr_lookups.restraint_duration (duration, sort_order)
VALUES
('<30 min', 1),
('30-59 min', 2),
('1-12 hours', 3),
('>12 hours', 4)
;

/* EHR_Lookups-11.22-11.23.sql */

alter table ehr_lookups.chemistry_tests
  add column aliases varchar(500)
  ;

UPDATE ehr_lookups.chemistry_tests set aliases = 'GLU' WHERE testid = 'GLUC';
UPDATE ehr_lookups.chemistry_tests set aliases = 'CR' WHERE testid = 'CREAT';
UPDATE ehr_lookups.chemistry_tests set aliases = 'CHO' WHERE testid = 'CHOL';
UPDATE ehr_lookups.chemistry_tests set aliases = 'TRG' WHERE testid = 'TRIG';
UPDATE ehr_lookups.chemistry_tests set aliases = 'AST' WHERE testid = 'SGOT';
UPDATE ehr_lookups.chemistry_tests set aliases = 'BIL' WHERE testid = 'TB';
UPDATE ehr_lookups.chemistry_tests set aliases = 'ALT' WHERE testid = 'SGPT';
UPDATE ehr_lookups.chemistry_tests set aliases = 'ALP' WHERE testid = 'ALKP';
UPDATE ehr_lookups.chemistry_tests set aliases = 'PHO' WHERE testid = 'PHOS';

/* EHR_Lookups-11.23-11.24.sql */

DROP TABLE IF EXISTS ehr_lookups.drug_categories;
CREATE TABLE ehr_lookups.drug_categories (
category varchar(200),

CONSTRAINT PK_drug_categories PRIMARY KEY (category)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.drug_categories
(category) VALUES
('Treatments'),
('Surgery Medication'),
('Surgery Anesthesia'),
('Procedure'),
('Surgery Fluid'),
('Hormone'),
('Drug')
;


alter table ehr_lookups.condition_codes
  add column min integer,
  add column max integer
  ;


DELETE FROM ehr_lookups.condition_codes;

INSERT INTO ehr_lookups.condition_codes
(code, meaning, min, max) VALUES
('am', 'with adopted mother', 2, null),
('b', 'breeding', 2, null),
('c', 'chair', 1, 1),
('f', 'with the father', 2, null),
('g', 'in a group (+3 animals living together)', 3, null),
('gam', 'in a group with adopted mother', 3, null),
('gf', 'in a group with father', 3, null),
('gm', 'in a group with the mother', 3, null),
('gmf', 'in a group with the mother and father', 3, null),
('m', 'with the mother', 2, null),
('p', 'paired', 2, null),
('pc', 'protected contact paired', 1, null),
('s', 'single', 1, 1),
('x', 'special housing condition', 1, 1),
('gaf', 'in a group with adopted father', 3, null),
('mgaf', 'in a group with mother and adopted father', 3, null),
('gb', 'group breeding', 3, null),
('gmaf', 'in a group with the mother and adopted father', 3, null),
('xs', 'special housing from single', 1, 1)
;



DROP TABLE IF EXISTS ehr_lookups.usda_codes;
CREATE TABLE ehr_lookups.usda_codes (
rowid serial not null,
code varchar(100),
category varchar(100),
usda_letter varchar(10),
include_previous bool default false,

CONSTRAINT PK_usda_codes PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;


DROP TABLE IF EXISTS ehr_lookups.full_snomed;
CREATE TABLE ehr_lookups.full_snomed (
code varchar(255) NOT NULL,
meaning varchar(2000),

-- Container ENTITYID,
CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_full_snomed PRIMARY KEY (code)
)
WITH (OIDS=FALSE)

;


DROP TABLE IF EXISTS ehr_lookups.snomap;
CREATE TABLE ehr_lookups.snomap (
rowid serial not null,
ocode varchar(255) NOT NULL,
ncode varchar(255) NOT NULL,
meaning varchar(2000),
date timestamp,
objectid ENTITYID NOT NULL,

CreatedBy USERID NOT NULL,
Created TIMESTAMP NOT NULL,
ModifiedBy USERID NOT NULL,
Modified TIMESTAMP NOT NULL,

CONSTRAINT PK_snomap PRIMARY KEY (rowid)
)
WITH (OIDS=FALSE)

;


DROP TABLE IF EXISTS ehr_lookups.chow_types;
CREATE TABLE ehr_lookups.chow_types (
type varchar(200),

CONSTRAINT PK_chow_types PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;


DELETE FROM ehr_lookups.snomed_qualifiers where qualifier in (
'right cranial lobe',
'right middle lobe',
'right caudal lobe',
'left cranial lobe',
'left middle lobe',
'left caudal lobe',
'accessory lobe'
);

INSERT into ehr_lookups.snomed_qualifiers (qualifier) VALUES
('right cranial lobe'),
('right middle lobe'),
('right caudal lobe'),
('left cranial lobe'),
('left middle lobe'),
('left caudal lobe'),
('accessory lobe')
;





alter table ehr_lookups.clinpath_tests
  add column alertOnAbnormal bool default false,
  add column alertOnComplete bool default false
;

/* EHR_Lookups-11.24-11.25.sql */

alter table ehr_lookups.hematology_tests
  add column sort_order integer
;


DROP TABLE IF EXISTS ehr_lookups.tissue_distribution;
CREATE TABLE ehr_lookups.tissue_distribution (
location varchar(100),

CONSTRAINT PK_tissue_distribution PRIMARY KEY (location)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.tissue_distribution
(location) VALUES
('NHPBMD'),
('NIA Tissue Bank')
;


INSERT INTO ehr_lookups.snomed_qualifiers
(qualifier) VALUES
('rostral'),
('caudal'),
('upper'),
('lower'),
('cranial'),
('lateral'),
('descending'),
('ascending'),
('portion'),
('head'),
('tail'),
('endo'),
('exo'),
('anterior'),
('posterior')
;

delete from ehr_lookups.death_manner where manner = 'Other';

insert into ehr_lookups.death_manner (manner) values ('Died in utero');

insert into ehr_lookups.preservation_solutions
(solution) values
('0.9% saline')
;


DROP TABLE IF EXISTS ehr_lookups.container_types;
CREATE TABLE ehr_lookups.container_types (
type varchar(100),

CONSTRAINT PK_container_types PRIMARY KEY (type)
)
WITH (OIDS=FALSE)

;

INSERT INTO ehr_lookups.container_types
(type) VALUES
('Cryotube'),
('15ml Conical Tube'),
('50ml Conical Tube')
;

update ehr_lookups.hematology_tests set sort_order = 1 where testid = 'WBC';
update ehr_lookups.hematology_tests set sort_order = 2 where testid = 'RBC';
update ehr_lookups.hematology_tests set sort_order = 3 where testid = 'HGB';
update ehr_lookups.hematology_tests set sort_order = 4 where testid = 'HCT';
update ehr_lookups.hematology_tests set sort_order = 5 where testid = 'MCV';
update ehr_lookups.hematology_tests set sort_order = 6 where testid = 'MCH';
update ehr_lookups.hematology_tests set sort_order = 7 where testid = 'MCHC';
update ehr_lookups.hematology_tests set sort_order = 8 where testid = 'RDW';
update ehr_lookups.hematology_tests set sort_order = 9 where testid = 'PLT';
update ehr_lookups.hematology_tests set sort_order = 10 where testid = 'MPV';
update ehr_lookups.hematology_tests set sort_order = 11 where testid = 'PCV';
update ehr_lookups.hematology_tests set sort_order = 12 where testid = 'NE';
update ehr_lookups.hematology_tests set sort_order = 13 where testid = 'LY';
update ehr_lookups.hematology_tests set sort_order = 14 where testid = 'MN';
update ehr_lookups.hematology_tests set sort_order = 15 where testid = 'EO';
update ehr_lookups.hematology_tests set sort_order = 16 where testid = 'BS';
update ehr_lookups.hematology_tests set sort_order = 17 where testid = 'BANDS';
update ehr_lookups.hematology_tests set sort_order = 18 where testid = 'METAMYELO';
update ehr_lookups.hematology_tests set sort_order = 19 where testid = 'MYELO';
update ehr_lookups.hematology_tests set sort_order = 20 where testid = 'TP';
update ehr_lookups.hematology_tests set sort_order = 21 where testid = 'RETICULO';
update ehr_lookups.hematology_tests set sort_order = 22 where testid = 'PRO MYELO';
update ehr_lookups.hematology_tests set sort_order = 23 where testid = 'ATYL LYMPH';
update ehr_lookups.hematology_tests set sort_order = 24 where testid = 'OTHER';

/* EHR_Lookups-11.27-11.28.sql */

DELETE FROM ehr_lookups.snomed_qualifiers where qualifier in (
'right cranial lobe',
'right middle lobe',
'right caudal lobe',
'left cranial lobe',
'left middle lobe',
'left caudal lobe',
'accessory lobe'
);

INSERT into ehr_lookups.snomed_qualifiers (qualifier) VALUES
('right cranial lobe'),
('right middle lobe'),
('right caudal lobe'),
('left cranial lobe'),
('left middle lobe'),
('left caudal lobe'),
('accessory lobe')
;


--drop/recreate table
DROP TABLE IF EXISTS ehr_lookups.clinpath_tests;
CREATE TABLE ehr_lookups.clinpath_tests (
testName varchar(255) NOT NULL,
units varchar(20),
dataset varchar(200),

CONSTRAINT PK_testName PRIMARY KEY (testname)
)
WITH (OIDS=FALSE)

;


INSERT INTO ehr_lookups.clinpath_tests
(testname, dataset) VALUES
('ELISA - HBV', 'Virology'),
('ELISA - SRV', 'Virology'),
('ELISA - SIV', 'Virology'),
('ELISA - STLV-1', 'Virology'),
('ELISA - Measles', 'Virology'),
('PCR - STLV-1', 'Virology'),
('PCR - SRV 1,2,3,4,5', 'Virology'),
('Isolation - HBV', 'Virology'),
('CBC', 'Hematology'),
('Glycosylated Hemoglobin', 'Hematology'),
('Vet-19 Chem Panel', 'Chemistry'),
('Lipid Panel', 'Chemistry'),
('Prothrombin Time (PT) and Activated Partial Thromboplastin Time (APTT)', 'Chemistry'),
('Ova and Parasite Antigen Panel (EIA)', 'Parasitology'),
('Ova and Parasite Concentration (Fecal Float)', 'Parasitology'),
('Ova and Parasite Wet Prep', 'Parasitology'),
('Direct Smear for Protozoa', 'Parasitology'),
('Culture, Enteric', 'Bacteriology'),
('Culture, Bacterial/Smear', 'Bacteriology'),
('Culture, Fungus, Dermal/Smear', 'Bacteriology'),
('Culture, Sterile Fluid/Tissue/Smear', 'Bacteriology'),
('Culture, Urine', 'Bacteriology'),
('Culture, Wound/Smear', 'Bacteriology'),
('Culture, Other', 'Bacteriology'),
('Chlamydia trachomatis Detection by NAA', 'Bacteriology'),
('GIFN for TB detection', 'Bacteriology'),
('Occult Blood', 'Parasitology'),
('Mycobacteria Smear and Culture', 'Bacteriology'),
('PCR - Individual Bacterium', 'Bacteriology'),
('Chol/HDL Ratio', 'Chemistry'),
('Osmolarity', 'Chemistry')
;

alter table ehr_lookups.clinpath_tests
  add column alertOnAbnormal bool default false,
  add column alertOnComplete bool default false
;



--



alter table ehr_lookups.lab_tests
  add column alertOnAbnormal bool default true,
  add column categories varchar(200),
  add column sort_order integer
;



alter table ehr_lookups.clinpath_tests
  drop column alertOnAbnormal
;


alter table ehr_lookups.usda_codes
  add column keyword varchar(255)
;


alter table ehr_lookups.chemistry_tests
  add column alertOnAbnormal bool default true,
  add column alertOnAny bool default false,
  add column includeInPanel bool default false,
  add column sort_order integer
;

alter table ehr_lookups.hematology_tests
  add column alertOnAbnormal bool default true,
  add column alertOnAny bool default false,
  add column includeInPanel bool default false
  --add column sort_order integer
;

alter table ehr_lookups.immunology_tests
  add column alertOnAbnormal bool default true,
  add column alertOnAny bool default false,
  add column includeInPanel bool default false,
  add column sort_order integer
;

alter table ehr_lookups.urinalysis_tests
  add column alertOnAbnormal bool default true,
  add column alertOnAny bool default false,
  add column includeInPanel bool default false,
  add column sort_order integer
;

alter table ehr_lookups.virology_tests
  add column alertOnAbnormal bool default true,
  add column alertOnAny bool default false,
  add column includeInPanel bool default false,
  add column sort_order integer
;


update ehr_lookups.hematology_tests set sort_order = 1, includeInPanel=true where testid = 'WBC';
update ehr_lookups.hematology_tests set sort_order = 2, includeInPanel=true where testid = 'RBC';
update ehr_lookups.hematology_tests set sort_order = 3, includeInPanel=true where testid = 'HGB';
update ehr_lookups.hematology_tests set sort_order = 4, includeInPanel=true where testid = 'HCT';
update ehr_lookups.hematology_tests set sort_order = 5, includeInPanel=true where testid = 'MCV';
update ehr_lookups.hematology_tests set sort_order = 6, includeInPanel=true where testid = 'MCH';
update ehr_lookups.hematology_tests set sort_order = 7, includeInPanel=true where testid = 'MCHC';
update ehr_lookups.hematology_tests set sort_order = 8, includeInPanel=true where testid = 'RDW';
update ehr_lookups.hematology_tests set sort_order = 9, includeInPanel=true where testid = 'PLT';
update ehr_lookups.hematology_tests set sort_order = 10, includeInPanel=true where testid = 'MPV';
update ehr_lookups.hematology_tests set sort_order = 11, includeInPanel=true where testid = 'PCV';
update ehr_lookups.hematology_tests set sort_order = 12, includeInPanel=true where testid = 'NE';
update ehr_lookups.hematology_tests set sort_order = 13, includeInPanel=true where testid = 'LY';
update ehr_lookups.hematology_tests set sort_order = 14, includeInPanel=true where testid = 'MN';
update ehr_lookups.hematology_tests set sort_order = 15, includeInPanel=true where testid = 'EO';
update ehr_lookups.hematology_tests set sort_order = 16, includeInPanel=true where testid = 'BS';
update ehr_lookups.hematology_tests set sort_order = 17, includeInPanel=true where testid = 'BANDS';
update ehr_lookups.hematology_tests set sort_order = 18, includeInPanel=true where testid = 'METAMYELO';
update ehr_lookups.hematology_tests set sort_order = 19, includeInPanel=true where testid = 'MYELO';
update ehr_lookups.hematology_tests set sort_order = 20, includeInPanel=true where testid = 'TP';
update ehr_lookups.hematology_tests set sort_order = 21, includeInPanel=true where testid = 'RETICULO';
update ehr_lookups.hematology_tests set sort_order = 22, includeInPanel=true where testid = 'PRO MYELO';
update ehr_lookups.hematology_tests set sort_order = 23, includeInPanel=true where testid = 'ATYL LYMPH';
update ehr_lookups.hematology_tests set sort_order = 24, includeInPanel=true where testid = 'OTHER';


update ehr_lookups.chemistry_tests set sort_order = 1, includeInPanel=true where testid = 'GLUC';
update ehr_lookups.chemistry_tests set sort_order = 2, includeInPanel=true where testid = 'BUN';
update ehr_lookups.chemistry_tests set sort_order = 3, includeInPanel=true where testid = 'CREAT';
update ehr_lookups.chemistry_tests set sort_order = 4, includeInPanel=true where testid = 'CPK';
update ehr_lookups.chemistry_tests set sort_order = 5, includeInPanel=true where testid = 'CHOL';
update ehr_lookups.chemistry_tests set sort_order = 6, includeInPanel=true where testid = 'TRIG';
update ehr_lookups.chemistry_tests set sort_order = 7, includeInPanel=true where testid = 'SGOT';
update ehr_lookups.chemistry_tests set sort_order = 8, includeInPanel=true where testid = 'LDL';
update ehr_lookups.chemistry_tests set sort_order = 9, includeInPanel=true where testid = 'LDH';
update ehr_lookups.chemistry_tests set sort_order = 10, includeInPanel=true where testid = 'TB';
update ehr_lookups.chemistry_tests set sort_order = 11, includeInPanel=true where testid = 'GGT';
update ehr_lookups.chemistry_tests set sort_order = 12, includeInPanel=true where testid = 'SGPT';
update ehr_lookups.chemistry_tests set sort_order = 13, includeInPanel=true where testid = 'TP';
update ehr_lookups.chemistry_tests set sort_order = 14, includeInPanel=true where testid = 'ALB';
update ehr_lookups.chemistry_tests set sort_order = 15, includeInPanel=true where testid = 'ALKP';
update ehr_lookups.chemistry_tests set sort_order = 16, includeInPanel=true where testid = 'CA';
update ehr_lookups.chemistry_tests set sort_order = 17, includeInPanel=true where testid = 'PHOS';
update ehr_lookups.chemistry_tests set sort_order = 18, includeInPanel=true where testid = 'FE';
update ehr_lookups.chemistry_tests set sort_order = 19, includeInPanel=true where testid = 'NA';
update ehr_lookups.chemistry_tests set sort_order = 20, includeInPanel=true where testid = 'K';
update ehr_lookups.chemistry_tests set sort_order = 21, includeInPanel=true where testid = 'L';
update ehr_lookups.chemistry_tests set sort_order = 22, includeInPanel=true where testid = 'UA';

update ehr_lookups.immunology_tests set sort_order = 1, includeInPanel=true where testid = 'CD3';
update ehr_lookups.immunology_tests set sort_order = 2, includeInPanel=true where testid = 'CD20';
update ehr_lookups.immunology_tests set sort_order = 3, includeInPanel=true where testid = 'CD4';
update ehr_lookups.immunology_tests set sort_order = 4, includeInPanel=true where testid = 'CD8';

update ehr_lookups.urinalysis_tests set sort_order = 1, includeInPanel=true where testid = 'BILIRUBIN';
update ehr_lookups.urinalysis_tests set sort_order = 2, includeInPanel=true where testid = 'KETONE';
update ehr_lookups.urinalysis_tests set sort_order = 3, includeInPanel=true where testid = 'SP_GRAVITY';
update ehr_lookups.urinalysis_tests set sort_order = 4, includeInPanel=true where testid = 'BLOOD';
update ehr_lookups.urinalysis_tests set sort_order = 5, includeInPanel=true where testid = 'PH';
update ehr_lookups.urinalysis_tests set sort_order = 6, includeInPanel=true where testid = 'PROTEIN';
update ehr_lookups.urinalysis_tests set sort_order = 7, includeInPanel=true where testid = 'UROBILINOGEN';
update ehr_lookups.urinalysis_tests set sort_order = 8, includeInPanel=true where testid = 'NITRITE';
update ehr_lookups.urinalysis_tests set sort_order = 9, includeInPanel=true where testid = 'LEUKOCYTES';
update ehr_lookups.urinalysis_tests set sort_order = 10, includeInPanel=true where testid = 'APPEARANCE';
update ehr_lookups.urinalysis_tests set sort_order = 11, includeInPanel=true where testid = 'MICROSCOPIC';
update ehr_lookups.urinalysis_tests set sort_order = 12, includeInPanel=true where testid = 'GLUCOSE';





drop table if exists ehr_lookups.lab_tests;

/* EHR_Lookups-11.29-11.291.sql */

alter table ehr_lookups.lab_test_range
  add column type varchar(200)
;

update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'ALB';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'ALKP';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'BUN';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'CA';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'CHOL';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'CL';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'CPK';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'CREAT';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'FE';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'GGT';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'GLUC';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'HCT';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'HGB';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'K';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'LDH';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'MCH';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'MCHC';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'MCV';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'MPV';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'NA';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'PHOS';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'PLT';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'RBC';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'RDW';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'SGOT';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'SGPT';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'TB';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'TP';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'TRIG';
update ehr_lookups.lab_test_range set type = 'Chemistry' where test = 'UA';
update ehr_lookups.lab_test_range set type = 'Hematology' where test = 'WBC';

/* EHR_Lookups-11.291-11.292.sql */

delete from ehr.notificationtypes where notificationtype = 'Animal Death';
insert into ehr.notificationtypes
(notificationtype,description) VALUES
('Animal Death', 'An email will be sent each time an animal is marked as dead')
;


-- ----------------------------
-- Table structure for ehr_lookups.death_remarks
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.death_remarks;
CREATE TABLE ehr_lookups.death_remarks (
title varchar(100),
remark varchar(500),

CONSTRAINT PK_death_remarks PRIMARY KEY (title)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_remarks
-- ----------------------------
INSERT INTO ehr_lookups.death_remarks (title, remark)
VALUES
('Euthanasia', 'Monkey was euthanized and submitted for pathological examination'),
('Found dead', 'Monkey was found dead and submitted for pathological examination'),
('Died during medical treatment', 'Monkey died during clinical procedure and was submitted for pathological examination'),
('Died during experimental procedure', 'Monkey died during experimental procedure and was submitted for pathological examination')
;



-- ----------------------------
-- Table structure for ehr_lookups.obs_remarks
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.obs_remarks;
CREATE TABLE ehr_lookups.obs_remarks (
title varchar NOT NULL,
remark varchar,

CONSTRAINT PK_obs_remarks PRIMARY KEY (title)
)
WITH (OIDS=FALSE)

;

-- ----------------------------
-- Records of obs_remarks
-- ----------------------------
INSERT INTO ehr_lookups.obs_remarks VALUES ('healing', 'healing');
INSERT INTO ehr_lookups.obs_remarks VALUES ('some FS', 'some FS');
INSERT INTO ehr_lookups.obs_remarks VALUES ('ok', 'ok');
INSERT INTO ehr_lookups.obs_remarks VALUES ('stool ok', 'stool ok');
INSERT INTO ehr_lookups.obs_remarks VALUES ('4 clo', '4 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('small FS', 'small FS');
INSERT INTO ehr_lookups.obs_remarks VALUES ('5 clo', '5 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('runny nose', 'runny nose');
INSERT INTO ehr_lookups.obs_remarks VALUES ('6 clo', '6 clo');
INSERT INTO ehr_lookups.obs_remarks VALUES ('3 clo', '3 clo');

/* EHR_Lookups-11.292-11.293.sql */

--NOTE: Fix for test failure after improperly editing EHR_lookups-11.2-11.21

-- ----------------------------
-- Table structure for ehr_lookups.routes
-- ----------------------------
DROP TABLE IF EXISTS ehr_lookups.routes;
CREATE TABLE ehr_lookups.routes (
route varchar(100) NOT NULL,
meaning varchar(200),

CONSTRAINT PK_routes PRIMARY KEY (route)
)
WITH (OIDS=FALSE)

;


-- ----------------------------
-- Records of routes
-- ----------------------------
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('IM', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('IT', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('IV', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('IVAG', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('oral', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('rectal', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('SQ', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('topical (eye)', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('topical (skin)', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('topical', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('intracardiac', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('intracarotid', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('intracorneal',	'Intracorneal');
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('intracranial', null);
INSERT INTO ehr_lookups.routes (route, meaning) VALUES ('IP', 'intraperitoneal');

/* EHR_Lookups-11.30-12.10.sql */

/* EHR_Lookups-11.30-11.33.sql */

/* EHR_Lookups-11.30-11.32.sql */

SELECT setval('ehr_lookups.treatment_frequency_rowid_seq', (select max(rowid) as maxVal from ehr_lookups.treatment_frequency));
SELECT setval('ehr_lookups.ageclass_rowid_seq', (select max(rowid) as maxVal from ehr_lookups.ageclass));

ALTER table ehr_lookups.blood_draw_services
   add column automaticrequestfromblooddraw boolean not null default true;

update ehr_lookups.blood_draw_services
   set automaticrequestfromblooddraw = false where service = 'Viral Load';

/* EHR_Lookups-11.32-11.33.sql */

--drop/recreate table
DROP TABLE IF EXISTS ehr_lookups.sample_types;
CREATE TABLE ehr_lookups.sample_types (
type character varying(20) NOT NULL,

CONSTRAINT PK_sample_types PRIMARY KEY (type)
)
WITH (
 OIDS=FALSE
);

INSERT INTO ehr_lookups.sample_types
(type) VALUES
('BAL'),
('FNA'),
('Impression Smear'),
('Skin Scraping')
;

--drop/recreate table
DROP TABLE IF EXISTS ehr_lookups.stain_types;
CREATE TABLE ehr_lookups.stain_types (
type character varying(20) NOT NULL,

CONSTRAINT PK_stain_types PRIMARY KEY (type)
)
WITH (
 OIDS=FALSE
);

INSERT INTO ehr_lookups.stain_types 
(type) VALUES
('Gram'),
('Wright''s'),
('Wright-Giemsa'),
('Ziehl-Neelson')
;

/* EHR_Lookups-11.33-11.34.sql */

--drop/recreate table
DROP TABLE IF EXISTS ehr_lookups.cytology_tests;
CREATE TABLE ehr_lookups.cytology_tests (
testid character varying(100) NOT NULL,
"name" character varying(100),
units character varying(100),
sort_order integer,
alertonabnormal boolean DEFAULT true,
alertonany boolean DEFAULT false,
includeinpanel boolean DEFAULT false,
CONSTRAINT PK_cytology_tests PRIMARY KEY (testid)
)
WITH (
 OIDS=FALSE
);

INSERT INTO ehr_lookups.cytology_tests
(testid, name, units, sort_order) VALUES
('BS', 'Basophils', '%', 15),
('EO', 'Eosinophils', '%', 14),
('HCT', 'Hematocrit', '%', 4),
('HGB', 'Hemoglobin', 'g/dL', 3),
('LY', 'Lymphocytes', '%', 12),
('MCH', 'Mean Corpuscular Hemoglobin', 'pg', 6),
('MCHC', 'Mean Corpuscular Hemoglobin Concentration', 'g/dL', 7),
('MCV', 'Mean Corpuscular Volume', 'fL', 10),
('MN', 'Monocytes', '%', 13),
('MPV', 'Mean Platelet Volume', 'fL', 10),
('NE', 'Neutrophils', '%', 11),
('PLT', 'Platelet', '10^3/uL', 9),
('RBC', 'Red Blood Cells', '10^6/uL', 2),
('RDW-CV', 'Red Blood Cell Distribution Width - Coefficient Variation', '%', 8),
('WBC', 'White Blood Cells', '10^3/uL', 1)
;

/* EHR_Lookups-11.35-11.36.sql */

--to drop:
DROP TABLE ehr_lookups.vl_virus;
DROP TABLE ehr_lookups.vl_technique;
DROP TABLE ehr_lookups.vl_sampletype;
DROP TABLE ehr_lookups.vl_instrument;
DROP TABLE ehr_lookups.vl_category;

DROP TABLE ehr_lookups.booleancombo;

alter table ehr_lookups.dental_teeth alter column teeth TYPE varchar(100);
alter table ehr_lookups.obs_behavior alter column code TYPE varchar(100);

alter table ehr_lookups.obs_breeding alter column code TYPE varchar(100);
alter table ehr_lookups.obs_feces alter column code TYPE varchar(100);
alter table ehr_lookups.obs_mens alter column code TYPE varchar(100);
alter table ehr_lookups.obs_other alter column code TYPE varchar(100);
alter table ehr_lookups.obs_remarks alter column title TYPE varchar(200);
alter table ehr_lookups.obs_tlocation alter column location TYPE varchar(100);

alter table ehr_lookups.obs_behavior alter column meaning TYPE varchar(200);
alter table ehr_lookups.obs_breeding alter column meaning TYPE varchar(200);
alter table ehr_lookups.obs_feces alter column meaning TYPE varchar(200);
alter table ehr_lookups.obs_mens alter column meaning TYPE varchar(200);
alter table ehr_lookups.obs_other alter column meaning TYPE varchar(200);
alter table ehr_lookups.obs_remarks alter column remark TYPE varchar(500);

/* EHR_Lookups-11.37-11.38.sql */

CREATE TABLE ehr_lookups.cage_type
(
  cagetype varchar(100) not null,
  length double precision,
  width double precision,
  height double precision,
  sqft double precision,

  CONSTRAINT pk_cage_type PRIMARY KEY (cagetype)
);

/* EHR_Lookups-12.20-12.30.sql */

/* EHR_Lookups-12.20-12.21.sql */

ALTER TABLE ehr_lookups.snomed_subsets DROP container;

/* EHR_Lookups-12.21-12.22.sql */

CREATE TABLE ehr_lookups.charge_flags (
    rowid SERIAL NOT NULL,
    shortName varchar(100),
    description varchar(4000),

    createdBy USERID,
    created TIMESTAMP,
    modifiedBy USERID,
    modified TIMESTAMP,

    CONSTRAINT PK_charge_flags PRIMARY KEY (RowId)
);

CREATE TABLE ehr_lookups.account_tiers (
    rowid SERIAL NOT NULL,
    meaning varchar(200),
    multiplier double precision,

    createdBy USERID,
    created TIMESTAMP,
    modifiedBy USERID,
    modified TIMESTAMP,

    CONSTRAINT PK_account_tiers PRIMARY KEY (rowid)
);

/* EHR_Lookups-12.22-12.23.sql */

ALTER TABLE ehr_lookups.areas ADD column description varchar(500);

CREATE TABLE ehr_lookups.usda_levels (
    usda_level varchar(100),

    constraint pk_usda_levels primary key (usda_level)
);

INSERT INTO ehr_lookups.usda_levels (usda_level) VALUES ('A');
INSERT INTO ehr_lookups.usda_levels (usda_level) VALUES ('B');
INSERT INTO ehr_lookups.usda_levels (usda_level) VALUES ('C');
INSERT INTO ehr_lookups.usda_levels (usda_level) VALUES ('D');
INSERT INTO ehr_lookups.usda_levels (usda_level) VALUES ('None');


CREATE TABLE ehr_lookups.project_types (
    type varchar(100),
    multiplier double precision,

    constraint pk_project_types primary key (type)
);

INSERT INTO ehr_lookups.project_types (type) VALUES ('Federal');
INSERT INTO ehr_lookups.project_types (type) VALUES ('Contract');
INSERT INTO ehr_lookups.project_types (type) VALUES ('Other');


CREATE TABLE ehr_lookups.source
(
  code VARCHAR(255) NOT NULL,
  meaning VARCHAR(255) DEFAULT NULL,
  CONSTRAINT pk_source PRIMARY KEY (code )
);

insert into ehr_lookups.source
  select code, meaning FROM ehr_lookups.origin_codes;

drop table ehr_lookups.origin_codes;

ALTER table ehr_lookups.source
  add SourceCity varchar(200),
  add SourceState varchar(200),
  add SourceCountry varchar(200)
;


DELETE FROM ehr_lookups.birth_type WHERE type = 'c';
INSERT INTO ehr_lookups.birth_type VALUES ('c', 'C-Section');
DELETE FROM ehr_lookups.birth_type WHERE type = 'n';
INSERT INTO ehr_lookups.birth_type VALUES ('n', 'Natural');
DELETE FROM ehr_lookups.birth_type WHERE type = 'o';
INSERT INTO ehr_lookups.birth_type VALUES ('o', 'Other');


--INSERT INTO ehr_lookups.birth_type (type, meaning) VALUES ('Fetal ID Assigned');
INSERT INTO ehr_lookups.birth_type (type, meaning) VALUES ('fr', 'No Delivery - Fetus Recovered');
INSERT INTO ehr_lookups.birth_type (type, meaning) VALUES ('fa', 'No Delivery - Fetus Resorbed');
INSERT INTO ehr_lookups.birth_type (type, meaning) VALUES ('nr', 'Fetus Not Recovered');


CREATE TABLE ehr_lookups.birth_condition (
    rowid serial,
    meaning varchar(100),

    constraint pk_birth_condition primary key (rowid)
);

INSERT INTO ehr_lookups.birth_condition (meaning) VALUES ('Live Birth');
INSERT INTO ehr_lookups.birth_condition (meaning) VALUES ('Born Dead');
INSERT INTO ehr_lookups.birth_condition (meaning) VALUES ('Terminated At Birth');
INSERT INTO ehr_lookups.birth_condition (meaning) VALUES ('Incomplete Birth Info');

/* EHR_Lookups-12.24-12.25.sql */

DROP TABLE ehr_lookups.snomed_subsets;
CREATE TABLE ehr_lookups.snomed_subsets(
  subset VARCHAR(255) NOT NULL,
  createdby userid,
  created timestamp,
  modifiedby userid,
  modified timestamp,
  CONSTRAINT pk_snomed_subsets PRIMARY KEY (subset)
);

INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Antibiotic');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Bacteriology Results');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Culture Source');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Distribution');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Drugs and Procedures');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Duration');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Etiology');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Inflammation');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Organisms');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Organ/Tissue');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Parasitology Results');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Procedures');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Process/Disorder');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Severity Codes');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Treatment Codes');
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Viral Challenges');

/* EHR_Lookups-12.26-12.27.sql */

CREATE TABLE ehr_lookups.lookups (
  rowid serial,
  set_name varchar(100),
  value varchar(200),
  sort_order integer,
  date_disabled timestamp,

  createdby userid,
  created timestamp,
  modifiedby userid,
  modified timestamp,
  objectid char(36),
  CONSTRAINT pk_lookups PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.geographic_origins (
    rowid serial,
    meaning varchar(200),
    description varchar(4000),
    CONSTRAINT pk_geographic_origins PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.note_types (
    rowid serial,
    meaning varchar(200),
    description varchar(4000),
    CONSTRAINT pk_note_types PRIMARY KEY (rowid)
);

INSERT INTO ehr_lookups.note_types (meaning) VALUES ('Clinical');
INSERT INTO ehr_lookups.note_types (meaning) VALUES ('Assignments');

/* EHR_Lookups-12.28-12.29.sql */

CREATE TABLE ehr_lookups.treatment_frequency_times (
  rowid serial,
  frequency varchar(100),
  hourofday int,
  timedescription varchar(100),

  CONSTRAINT PK_treatment_frequency_times PRIMARY KEY (rowid)
);

INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - Noon', 12, 'Noon');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - PM', 14, 'PM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - Night', 19, 'Night');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/PM', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/PM', 14, 'PM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/Night', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/Night', 19, 'Night');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/PM/Night', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/PM/Night', 14, 'PM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - AM/PM/Night', 19, 'Night');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Daily - Any Time', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Weekly', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Monthly', 8, 'AM');
INSERT INTO ehr_lookups.treatment_frequency_times (frequency, hourofday, timedescription) VALUES ('Alternating Days', 8, 'AM');

ALTER TABLE ehr_lookups.treatment_frequency ADD intervalindays integer;
ALTER TABLE ehr_lookups.treatment_frequency ADD dayofweek integer;
ALTER TABLE ehr_lookups.treatment_frequency ADD dayofmonth integer;
ALTER TABLE ehr_lookups.treatment_frequency ADD weekofmonth integer;

CREATE TABLE ehr_lookups.buildings (
  name varchar(100),
  description varchar(500),

  CONSTRAINT PK_buildings PRIMARY KEY (name)
);

ALTER TABLE ehr_lookups.procedures DROP column code;
ALTER TABLE ehr_lookups.procedures ADD category varchar(100);
ALTER TABLE ehr_lookups.procedures ADD major boolean default false;

CREATE TABLE ehr_lookups.procedure_default_codes (
  rowid serial,
  procedureid int,
  groupnum int,
  code varchar(100),
  qualifier varchar(200),
  sort_order int,

  CONSTRAINT PK_procedure_default_codes PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.procedure_default_charges (
  rowid serial,
  chargeid int,
  quantity double precision,

  CONSTRAINT PK_procedure_default_charges PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.procedure_default_treatments (
  rowid serial,
  code varchar(100),
  qualifier varchar(100),
  volume double precision,
  volume_units varchar(100),
  dosage double precision,
  dosage_units varchar(100),
  concentration double precision,
  concentration_units varchar(100),
  amount double precision,
  amount_units varchar(100),
  route varchar(100),
  frequency int,

  CONSTRAINT PK_procedure_default_treatments PRIMARY KEY (rowid)
);

/* EHR_Lookups-12.30-12.301.sql */

CREATE TABLE ehr_lookups.procedure_default_comments (
  rowid serial,
  procedureid int,
  comment varchar(4000),

  CONSTRAINT PK_procedure_default_comments PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.procedure_default_flags (
  rowid serial,
  procedureid int,
  flag varchar(200),
  value varchar(200),

  CONSTRAINT PK_procedure_default_flags PRIMARY KEY (rowid)
);

ALTER TABLE ehr_lookups.procedure_default_charges ADD COLUMN procedureid int;
ALTER TABLE ehr_lookups.procedure_default_treatments ADD COLUMN procedureid int;

ALTER TABLE ehr_lookups.procedures ADD COLUMN active boolean;
ALTER TABLE ehr_lookups.procedures DROP COLUMN "procedure";
ALTER TABLE ehr_lookups.procedures ADD COLUMN name varchar(200);

CREATE TABLE ehr_lookups.disallowed_medications (
  rowid serial,
  code1 varchar(100),
  code2 varchar(100),

  CONSTRAINT PK_disallowed_medications PRIMARY KEY (rowid)
);

INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85365', 'E-YY535');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85361', 'E-YY535');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85361', 'E-77720');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85361', 'E-YYY40');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85365', 'E-YYY40');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85365', 'E-77720');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85365', 'E-779X0');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85361', 'E-779X0');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-YY973', 'E-71900');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85361', 'E-85361');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-85365', 'E-85365');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-YY973', 'E-YY973');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-779X0', 'E-YY535');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-779X0', 'E-779X0');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-779X0', 'E-77720');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-779X0', 'E-YYY40');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-YYY30', 'E-YY973');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-72500', 'E-YY973');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-77720', 'E-YY535');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-YYY40', 'E-YY535');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-721X0', 'E-YY270');
INSERT INTO ehr_lookups.disallowed_medications (code1, code2) VALUEs ('E-721X0', 'E-72170');

/* EHR_Lookups-12.301-12.302.sql */

ALTER TABLE ehr_lookups.procedure_default_charges drop Column quantity;
ALTER TABLE ehr_lookups.procedure_default_charges ADD quantity double precision;

ALTER TABLE ehr_lookups.cage_type add cageslots integer default 1;
ALTER TABLE ehr_lookups.cage_type add CageCapacity integer;
ALTER TABLE ehr_lookups.cage_type add MaxAnimalWeight double precision;

CREATE TABLE ehr_lookups.locations (
  location varchar(100),
  area varchar(100),
  buildingId int,
  locationtype int,
  housingcategory int,
  size double precision,
  active boolean,

  createdby userid,
  created timestamp,
  modifiedby userid,
  modified timestamp,

  CONSTRAINT pk_locations PRIMARY KEY (location)
);

/* EHR_Lookups-12.302-12.303.sql */

CREATE TABLE ehr_lookups.billingTypes (
  rowid serial,
  name varchar(100),

  CONSTRAINT PK_billingTypes PRIMARY KEY (rowid)
);

INSERT INTO ehr_lookups.billingTypes (name) VALUES ('Surgery');
INSERT INTO ehr_lookups.billingTypes (name) VALUES ('Clinical');
INSERT INTO ehr_lookups.billingTypes (name) VALUES ('Non-Center Staff');

ALTER TABLE ehr_lookups.species ADD blood_vol_multiplier double precision;
UPDATE ehr_lookups.species set blood_vol_multiplier = 0.1;

/* EHR_Lookups-12.305-12.306.sql */

ALTER TABLE ehr_lookups.species DROP COLUMN blood_vol_multiplier;
ALTER TABLE ehr_lookups.species ADD blood_per_kg double precision;
ALTER TABLE ehr_lookups.species ADD max_draw_pct double precision;
ALTER TABLE ehr_lookups.species ADD blood_draw_interval double precision;

UPDATE ehr_lookups.species set blood_per_kg = 60;
UPDATE ehr_lookups.species set max_draw_pct = 0.2;
UPDATE ehr_lookups.species set blood_draw_interval = 30;

UPDATE ehr_lookups.species set max_draw_pct = 0.15 WHERE common = 'Marmoset';

DROP TABLE ehr_lookups.account_tiers;

/* EHR_Lookups-12.306-12.307.sql */

CREATE TABLE ehr_lookups.animal_condition (
  code integer,
  meaning varchar(100),

  created timestamp,
  createdby integer,
  modified timestamp,
  modifiedby integer,

  CONSTRAINT PK_animal_condition PRIMARY KEY (code)
);

CREATE TABLE ehr_lookups.rooms (
  room varchar(100),
  building varchar(100),
  area varchar(100),
  category varchar(100),
  maxCages integer,

  created timestamp,
  createdby integer,
  modified timestamp,
  modifiedby integer,

  CONSTRAINT PK_rooms PRIMARY KEY (room)
);

ALTER TABLE ehr_lookups.cage rename roomcage to location;

/* EHR_Lookups-12.307-12.308.sql */

ALTER TABLE ehr_lookups.rooms ADD housingType int;
ALTER TABLE ehr_lookups.rooms ADD housingCondition int;

DROP TABLE ehr_lookups.locations;

/* EHR_Lookups-12.308-12.309.sql */

alter table ehr_lookups.cage alter column room TYPE varchar(200);
alter table ehr_lookups.cage alter column cage TYPE varchar(200);

/* EHR_Lookups-12.309-12.310.sql */

insert into ehr_lookups.encounter_types (type) values ('Diagnosis');
insert into ehr_lookups.routes (route) values ('PO');

/* EHR_Lookups-12.310-12.311.sql */

alter table ehr_lookups.rooms add column dateDisabled timestamp;
alter table ehr_lookups.rooms drop column category;
alter table ehr_lookups.areas add column dateDisabled timestamp;

/* EHR_Lookups-12.311-12.312.sql */

ALTER TABLE ehr_lookups.cage add divider int;
ALTER TABLE ehr_lookups.cage add cage_type varchar(100);

CREATE TABLE ehr_lookups.divider_types (
  rowid serial,
  divider varchar(100),
  countAsSeparate boolean default true,

  CONSTRAINT PK_divider_types PRIMARY KEY (rowid)
);

CREATE TABLE ehr_lookups.lookup_sets (
  setname varchar(100),
  label varchar(500),
  description varchar(4000)
);

/* EHR_Lookups-12.312-12.313.sql */

ALTER TABLE ehr_lookups.lookup_sets ADD keyField varchar(100);
ALTER TABLE ehr_lookups.lookup_sets ADD titleColumn varchar(100);

ALTER TABLE ehr_lookups.lookups ADD title varchar(200);
ALTER TABLE ehr_lookups.lookups ADD description varchar(1000);
DROP table ehr_lookups.integers;
DROP table ehr_lookups.arearooms;
DROP TABLE ehr_lookups.mhc_institutions;

/* EHR_Lookups-12.313-12.314.sql */

--alopecia cause
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('alopecia_cause', 'Alopecia Cause', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'alopecia_cause';
INSERT INTO ehr_lookups.lookups (set_name, value)
SELECT
   'alopecia_cause' as set_name,
   cause as value
FROM ehr_lookups.alopecia_cause;

DROP TABLE ehr_lookups.alopecia_cause;


--alopecia_score
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('alopecia_score', 'Alopecia Score', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'alopecia_score';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'alopecia_score' as set_name,
   score as value,
   meaning as description
FROM ehr_lookups.alopecia_score;

DROP TABLE ehr_lookups.alopecia_score;


--hematology_score
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('hematology_score', 'Hematology Score', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'hematology_score';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'hematology_score' as set_name,
   score as value,
   null as description
FROM ehr_lookups.hematology_score;

DROP TABLE ehr_lookups.hematology_score;


--necropsy_perfusion_area
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('necropsy_perfusion_area', 'Necropsy Perfusion Area Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'necropsy_perfusion_area';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'necropsy_perfusion_area' as set_name,
   perfusion as value,
   null as description
FROM ehr_lookups.necropsy_perfusion_area;

DROP TABLE ehr_lookups.necropsy_perfusion_area;


--hematology_morphology
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('hematology_morphology', 'Hematology Morphology Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'hematology_morphology';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'hematology_morphology' as set_name,
   morphology as value,
   null as description
FROM ehr_lookups.hematology_morphology;

DROP TABLE ehr_lookups.hematology_morphology;


--stain_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('stain_types', 'Stain Type Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'stain_types';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'stain_types' as set_name,
   type as value,
   null as description
FROM ehr_lookups.stain_types;

DROP TABLE ehr_lookups.stain_types;


--sample_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('sample_types', 'Sample Type Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'sample_types';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'sample_types' as set_name,
   type as value,
   null as description
FROM ehr_lookups.sample_types;

DROP TABLE ehr_lookups.sample_types;


--pairtest_conclusion
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('pairtest_conclusion', 'Pairtest Conclusion Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'pairtest_conclusion';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'pairtest_conclusion' as set_name,
   value as value,
   null as description
FROM ehr_lookups.pairtest_conclusion;

DROP TABLE ehr_lookups.pairtest_conclusion;


--necropsy_perfusion
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('necropsy_perfusion', 'Necropsy Perfusion Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'necropsy_perfusion';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'necropsy_perfusion' as set_name,
   perfusion as value,
   null as description
FROM ehr_lookups.necropsy_perfusion;

DROP TABLE ehr_lookups.necropsy_perfusion;


--behavior_category
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('behavior_category', 'Behavior Category Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'behavior_category';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'behavior_category' as set_name,
   category as value,
   null as description
FROM ehr_lookups.behavior_category;

DROP TABLE ehr_lookups.behavior_category;


--bacteriology_sensitivity
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('bacteriology_sensitivity', 'Bacteriology Sensitivity Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'bacteriology_sensitivity';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'bacteriology_sensitivity' as set_name,
   code as value,
   meaning as description
FROM ehr_lookups.bacteriology_sensitivity;

DROP TABLE ehr_lookups.bacteriology_sensitivity;


--tb_result
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('tb_result', 'TB Result Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'tb_result';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'tb_result' as set_name,
   result as value,
   null as description
FROM ehr_lookups.tb_result;

DROP TABLE ehr_lookups.tb_result;


--obs_feces
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('obs_feces', 'Obs Feces Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_feces';
INSERT INTO ehr_lookups.lookups (set_name, value, title)
SELECT
   'obs_feces' as set_name,
   code as value,
   meaning as title
FROM ehr_lookups.obs_feces;

DROP TABLE ehr_lookups.obs_feces;


--dental_side
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_side', 'Dental Side Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_side';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'dental_side' as set_name,
   side as value,
   null as description
FROM ehr_lookups.dental_side;

DROP TABLE ehr_lookups.dental_side;


--birth_type
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('birth_type', 'Birth Type Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'birth_type';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'birth_type' as set_name,
   type as value,
   meaning as description
FROM ehr_lookups.birth_type;

DROP TABLE ehr_lookups.birth_type;


--dental_jaw
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_jaw', 'Dental Jaw Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_jaw';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'dental_jaw' as set_name,
   jaw as value,
   null as description
FROM ehr_lookups.dental_jaw;

DROP TABLE ehr_lookups.dental_jaw;


--necropsy_condition
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('necropsy_condition', 'Necropsy Condition Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'necropsy_condition';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'necropsy_condition' as set_name,
   score as value,
   null as description
FROM ehr_lookups.necropsy_condition;

DROP TABLE ehr_lookups.necropsy_condition;


--avail_codes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('avail_codes', 'Availability Code Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'avail_codes';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'avail_codes' as set_name,
   code as value,
   meaning as description
FROM ehr_lookups.avail_codes;

DROP TABLE ehr_lookups.avail_codes;


--status_codes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('status_codes', 'Status Code Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'status_codes';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'status_codes' as set_name,
   code as value,
   meaning as description
FROM ehr_lookups.status_codes;

DROP TABLE ehr_lookups.status_codes;


--problem_list_category
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('problem_list_category', 'Problem List Category Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'problem_list_category';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'problem_list_category' as set_name,
   category as value,
   null as description
FROM ehr_lookups.problem_list_category;

DROP TABLE ehr_lookups.problem_list_category;


--housing_reason
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('housing_reason', 'Housing Reason Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'housing_reason';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'housing_reason' as set_name,
   reason as value,
   null as description
FROM ehr_lookups.housing_reason;

DROP TABLE ehr_lookups.housing_reason;


--histology_stain
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('histology_stain', 'Histology Stain Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'histology_stain';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'histology_stain' as set_name,
   stain as value,
   null as description
FROM ehr_lookups.histology_stain;

DROP TABLE ehr_lookups.histology_stain;


--tissue_recipients
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('tissue_recipients', 'Tissue Recipients Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'tissue_recipients';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'tissue_recipients' as set_name,
   recipient as value,
   null as description
FROM ehr_lookups.tissue_recipients;

DROP TABLE ehr_lookups.tissue_recipients;


--clinpath_sampletype
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('clinpath_sampletype', 'Clinpath Sample Type Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'clinpath_sampletype';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'clinpath_sampletype' as set_name,
   sampletype as value,
   null as description
FROM ehr_lookups.clinpath_sampletype;

DROP TABLE ehr_lookups.clinpath_sampletype;


--clinpath_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('clinpath_types', 'Clinpath Type Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'clinpath_types';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'clinpath_types' as set_name,
   type as value,
   null as description
FROM ehr_lookups.clinpath_types;

DROP TABLE ehr_lookups.clinpath_types;


--urinalysis_qualitative_results
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('urinalysis_qualitative_results', 'Urinalysis Qualitative Result Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'urinalysis_qualitative_results';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'urinalysis_qualitative_results' as set_name,
   result as value,
   null as description
FROM ehr_lookups.urinalysis_qualitative_results;

DROP TABLE ehr_lookups.urinalysis_qualitative_results;


--tattoo_status
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('tattoo_status', 'Tattoo Status Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'tattoo_status';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'tattoo_status' as set_name,
   status as value,
   null as description
FROM ehr_lookups.tattoo_status;

DROP TABLE ehr_lookups.tattoo_status;


--pe_remarks
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('pe_remarks', 'PE Remarks Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'pe_remarks';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'pe_remarks' as set_name,
   remark as value,
   null as description
FROM ehr_lookups.pe_remarks;

DROP TABLE ehr_lookups.pe_remarks;


--blood_code_prefixes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('blood_code_prefixes', 'Blood Code Prefix Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'blood_code_prefixes';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'blood_code_prefixes' as set_name,
   prefix as value,
   null as description
FROM ehr_lookups.blood_code_prefixes;

DROP TABLE ehr_lookups.blood_code_prefixes;


--snomed_qualifiers
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('snomed_qualifiers', 'SNOMED Qualifiers Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'snomed_qualifiers';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'snomed_qualifiers' as set_name,
   qualifier as value,
   null as description
FROM ehr_lookups.snomed_qualifiers;

DROP TABLE ehr_lookups.snomed_qualifiers;


--preservation_solutions
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('preservation_solutions', 'Preservation Solution Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'preservation_solutions';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'preservation_solutions' as set_name,
   solution as value,
   null as description
FROM ehr_lookups.preservation_solutions;

DROP TABLE ehr_lookups.preservation_solutions;


--chemistry_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('chemistry_method', 'Chemistry Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'chemistry_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'chemistry_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.chemistry_method;

DROP TABLE ehr_lookups.chemistry_method;


--immunology_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('immunology_method', 'Immunology Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'immunology_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'immunology_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.immunology_method;

DROP TABLE ehr_lookups.immunology_method;


--virology_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('virology_method', 'Virology Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'virology_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'virology_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.virology_method;

DROP TABLE ehr_lookups.virology_method;


--hematology_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('hematology_method', 'Hematology Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'hematology_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'hematology_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.hematology_method;

DROP TABLE ehr_lookups.hematology_method;


--biopsy_type
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('biopsy_type', 'Biopsy Type Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'biopsy_type';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'biopsy_type' as set_name,
   type as value,
   null as description
FROM ehr_lookups.biopsy_type;

DROP TABLE ehr_lookups.biopsy_type;


--microchip_comments
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('microchip_comments', 'Microchip Comments Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'microchip_comments';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'microchip_comments' as set_name,
   comment as value,
   null as description
FROM ehr_lookups.microchip_comments;

DROP TABLE ehr_lookups.microchip_comments;


--restraint_duration
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('restraint_duration', 'Restraint Duration Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'restraint_duration';
INSERT INTO ehr_lookups.lookups (set_name, value, description, sort_order)
SELECT
   'restraint_duration' as set_name,
   duration as value,
   null as description,
   sort_order as sort_order
FROM ehr_lookups.restraint_duration;

DROP TABLE ehr_lookups.restraint_duration;


--drug_categories
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('drug_categories', 'Drug Category Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'drug_categories';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'drug_categories' as set_name,
   category as value,
   null as description
FROM ehr_lookups.drug_categories;

DROP TABLE ehr_lookups.drug_categories;


--chow_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('chow_types', 'Chow Types Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'chow_types';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'chow_types' as set_name,
   type as value,
   null as description
FROM ehr_lookups.chow_types;

DROP TABLE ehr_lookups.chow_types;


--tissue_distribution
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('tissue_distribution', 'Tissue Distribution Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'tissue_distribution';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'tissue_distribution' as set_name,
   location as value,
   null as description
FROM ehr_lookups.tissue_distribution;

DROP TABLE ehr_lookups.tissue_distribution;


--container_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('container_types', 'Container Types Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'container_types';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'container_types' as set_name,
   type as value,
   null as description
FROM ehr_lookups.container_types;

DROP TABLE ehr_lookups.container_types;

DROP TABLE ehr_lookups.error_types;

DROP TABLE ehr_lookups.charge_flags;


--birth_condition
INSERT INTO ehr_lookups.lookup_sets (setname, label)
VALUES ('birth_condition', 'Birth Condition Field Values');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'birth_condition';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'birth_condition' as set_name,
   meaning as value,
   null as description
FROM ehr_lookups.birth_condition;

DROP TABLE ehr_lookups.birth_condition;

--bacteriology_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('bacteriology_method', 'Bacteriology Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'bacteriology_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'bacteriology_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.bacteriology_method;

DROP TABLE ehr_lookups.bacteriology_method;


--clinpath_collection_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('clinpath_collection_method', 'Clinpath Collection Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'clinpath_collection_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'clinpath_collection_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.clinpath_collection_method;

DROP TABLE ehr_lookups.clinpath_collection_method;


--parasitology_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('parasitology_method', 'Parasitology Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'parasitology_method';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'parasitology_method' as set_name,
   method as value,
   null as description
FROM ehr_lookups.parasitology_method;

DROP TABLE ehr_lookups.parasitology_method;


--blood_billed_by
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('blood_billed_by', 'Blood Billed By Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'blood_billed_by';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'blood_billed_by' as set_name,
   code as value,
   title as description
FROM ehr_lookups.blood_billed_by;

DROP TABLE ehr_lookups.blood_billed_by;


--pairtest_bhav
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('pairtest_bhav', 'Pairtest Behavior Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'pairtest_bhav';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'pairtest_bhav' as set_name,
   value as value,
   null as description
FROM ehr_lookups.pairtest_bhav;

DROP TABLE ehr_lookups.pairtest_bhav;


--dental_tartar
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_tartar', 'Dental Tartar Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_tartar';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'dental_tartar' as set_name,
   result as value,
   null as description
FROM ehr_lookups.dental_tartar;

DROP TABLE ehr_lookups.dental_tartar;


--dental_status
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_status', 'Dental Status Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_status';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'dental_status' as set_name,
   status as value,
   null as description
FROM ehr_lookups.dental_status;

DROP TABLE ehr_lookups.dental_status;


--viral_status
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('viral_status', 'Viral Status Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'viral_status';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'viral_status' as set_name,
   viral_status as value,
   null as description
FROM ehr_lookups.viral_status;

DROP TABLE ehr_lookups.viral_status;


--clinremarks_category
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('clinremarks_category', 'Clinremarks Category Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'clinremarks_category';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'clinremarks_category' as set_name,
   category as value,
   null as description
FROM ehr_lookups.clinremarks_category;

DROP TABLE ehr_lookups.clinremarks_category;


--observations_anesthesia_recovery
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('observations_anesthesia_recovery', 'Observations Anesthesia Recovery Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'observations_anesthesia_recovery';
INSERT INTO ehr_lookups.lookups (set_name, value, description, sort_order)
SELECT
   'observations_anesthesia_recovery' as set_name,
   value as value,
   null as description,
   sort_order
FROM ehr_lookups.observations_anesthesia_recovery;

DROP TABLE ehr_lookups.observations_anesthesia_recovery;


--obs_mens
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('obs_mens', 'Obs Mens Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_mens';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description)
SELECT
   'obs_mens' as set_name,
   code as value,
   meaning as title,
   null as description
FROM ehr_lookups.obs_mens;

DROP TABLE ehr_lookups.obs_mens;


--dental_gingivitis
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_gingivitis', 'Dental Gingivitis Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_gingivitis';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'dental_gingivitis' as set_name,
   result as value,
   null as title,
   null as description,
   sort_order
FROM ehr_lookups.dental_gingivitis;

DROP TABLE ehr_lookups.dental_gingivitis;


--hold_codes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('hold_codes', 'Hold Codes Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'hold_codes';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'hold_codes' as set_name,
   code as value,
   meaning as title,
   null as description,
   null as sort_order
FROM ehr_lookups.hold_codes;

DROP TABLE ehr_lookups.hold_codes;


--death_codes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('death_codes', 'Death Codes Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'death_codes';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'death_codes' as set_name,
   code as value,
   meaning as title,
   null as description,
   null as sort_order
FROM ehr_lookups.death_codes;

DROP TABLE ehr_lookups.death_codes;


--death_cause
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('death_cause', 'Death Cause Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'death_cause';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'death_cause' as set_name,
   cause as value,
   null as title,
   null as description,
   null as sort_order
FROM ehr_lookups.death_cause;

DROP TABLE ehr_lookups.death_cause;


--death_manner
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('death_manner', 'Manner of Death Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'death_manner';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'death_manner' as set_name,
   manner as value,
   null as title,
   null as description,
   null as sort_order
FROM ehr_lookups.death_manner;

DROP TABLE ehr_lookups.death_manner;


--encounter_types
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('encounter_types', 'Encounter Types Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'encounter_types';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'encounter_types' as set_name,
   type as value,
   null as title,
   null as description,
   null as sort_order
FROM ehr_lookups.encounter_types;

DROP TABLE ehr_lookups.encounter_types;


--urinalysis_method
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('urinalysis_method', 'Urinalysis Method Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'urinalysis_method';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'urinalysis_method' as set_name,
   method as value,
   null as title,
   null as description,
   null as sort_order
FROM ehr_lookups.urinalysis_method;

DROP TABLE ehr_lookups.urinalysis_method;


--virology_source
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('virology_source', 'Virology Source Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'virology_source';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description, sort_order)
SELECT
   'virology_source' as set_name,
   source as value,
   null as title,
   null as description,
   null as sort_order
FROM ehr_lookups.virology_source;

DROP TABLE ehr_lookups.virology_source;


--obs_behavior
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('obs_behavior', 'Obs Behavior Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_behavior';
INSERT INTO ehr_lookups.lookups (set_name, value, title)
SELECT
   'obs_behavior' as set_name,
   code as value,
   meaning as title
FROM ehr_lookups.obs_behavior;

DROP TABLE ehr_lookups.obs_behavior;


--obs_breeding
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('obs_breeding', 'Obs Breeding Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_breeding';
INSERT INTO ehr_lookups.lookups (set_name, value, title)
SELECT
   'obs_breeding' as set_name,
   code as value,
   meaning as title
FROM ehr_lookups.obs_breeding;

DROP TABLE ehr_lookups.obs_breeding;


--obs_other
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('obs_other', 'Obs Other Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_other';
INSERT INTO ehr_lookups.lookups (set_name, value, title)
SELECT
   'obs_other' as set_name,
   code as value,
   meaning as title
FROM ehr_lookups.obs_other;

DROP TABLE ehr_lookups.obs_other;


--dental_teeth
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_teeth', 'Dental Teeth Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_teeth';
INSERT INTO ehr_lookups.lookups (set_name, value, description, sort_order)
SELECT
   'dental_teeth' as set_name,
   teeth as value,
   null as description,
   seq_order as sort_order
FROM ehr_lookups.dental_teeth;

DROP TABLE ehr_lookups.dental_teeth;


--dental_priority
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('dental_priority', 'Dental Priority Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'dental_priority';
INSERT INTO ehr_lookups.lookups (set_name, value, description, sort_order)
SELECT
   'dental_priority' as set_name,
   priority as value,
   criteria as description,
   sort_order
FROM ehr_lookups.dental_priority;

DROP TABLE ehr_lookups.dental_priority;


--pe_region
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('pe_region', 'PE Region Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'pe_region';
INSERT INTO ehr_lookups.lookups (set_name, value, description, sort_order)
SELECT
   'pe_region' as set_name,
   region as value,
   null as description,
   null as sort_order
FROM ehr_lookups.pe_region;

DROP TABLE ehr_lookups.pe_region;


--obs_tlocation
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('obs_tlocation', 'Obs Trauma Location Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_tlocation';
INSERT INTO ehr_lookups.lookups (set_name, value, sort_order)
SELECT
   'obs_tlocation' as set_name,
   location as value,
   sort_order
FROM ehr_lookups.obs_tlocation;

DROP TABLE ehr_lookups.obs_tlocation;


--bcs_score
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('bcs_score', 'BCS Store Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'bcs_score';
INSERT INTO ehr_lookups.lookups (set_name, value, title, description)
SELECT
   'bcs_score' as set_name,
   score as value,
   meaning as title,
   description
FROM ehr_lookups.bcs_score;

DROP TABLE ehr_lookups.bcs_score;


--obs_remarks
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField)
VALUES ('obs_remarks', 'Obs Remarks Field Values', 'value');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'obs_remarks';
INSERT INTO ehr_lookups.lookups (set_name, value, description)
SELECT
   'obs_remarks' as set_name,
   title as value,
   remark as description
FROM ehr_lookups.obs_remarks;

DROP TABLE ehr_lookups.obs_remarks;


--condition_codes
INSERT INTO ehr_lookups.lookup_sets (setname, label, keyField, titleColumn)
VALUES ('housing_condition_codes', 'Housing Condition Code Field Values', 'value', 'title');

DELETE FROM ehr_lookups.lookups WHERE set_name = 'housing_condition_codes';
INSERT INTO ehr_lookups.lookups (set_name, value, title)
SELECT
   'housing_condition_codes' as set_name,
   code as value,
   meaning as title
FROM ehr_lookups.condition_codes;

DROP TABLE ehr_lookups.condition_codes;

/* EHR_Lookups-12.314-12.315.sql */

ALTER TABLE ehr_lookups.divider_types ADD countAsPaired boolean default false;

/* EHR_Lookups-12.318-12.319.sql */

INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Antibiotic Sensitivity');
INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Biochemistry');
INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Cerebral Spinal Fluid');
INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Microbiology');
INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Occult Blood');
INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'Serology');

/* EHR_Lookups-12.319-12.320.sql */

CREATE TABLE ehr_lookups.parentageTypes (
  label varchar(200),
  priority int,
  abbreviation varchar(100)
);

INSERT INTO ehr_lookups.parentageTypes (label, priority, abbreviation) VALUES ('Genetic', 1, 'g');
INSERT INTO ehr_lookups.parentageTypes (label, priority, abbreviation) VALUES ('Observed', 2, 'o');
INSERT INTO ehr_lookups.parentageTypes (label, priority, abbreviation) VALUES ('Foster', 3, 'f');

CREATE TABLE ehr_lookups.relationshipTypes (
  label varchar(200),
  gender varchar(100)
);

/* EHR_Lookups-12.320-12.321.sql */

ALTER TABLE ehr_lookups.ageclass add label varchar(100);

/* EHR_Lookups-12.323-12.324.sql */

ALTER TABLE ehr_lookups.cage_type DROP COLUMN MaxAnimalWeight;

/* EHR_Lookups-12.326-12.327.sql */

CREATE TABLE ehr_lookups.labwork_types (
  type varchar(100) NOT NULL,
  tableName varchar(100),

  CONSTRAINT PK_labwork_types PRIMARY KEY (type)
);

CREATE TABLE ehr_lookups.lab_tests (
  rowid serial,
  type varchar(100),
  testid varchar(100) NOT NULL,
  name varchar(100),
  units varchar(100),
  aliases varchar(1000),
  alertOnAbnormal boolean,
  alertOnAny boolean,
  includeInPanel boolean,
  sort_order int,

  CONSTRAINT PK_lab_tests PRIMARY KEY (rowid)
);

--biochemistry
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Biochemistry', 'chemistry_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, name, units, aliases, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Biochemistry', testid, name, units, aliases, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.chemistry_tests;

DROP TABLE ehr_lookups.chemistry_tests;

--hematology
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Hematology', 'hematology_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Hematology', testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.hematology_tests;

DROP TABLE ehr_lookups.hematology_tests;

--cytology
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Cytology', 'cytology_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Cytology', testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.cytology_tests;

DROP TABLE ehr_lookups.cytology_tests;

--immunology
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Immunology', 'immunology_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Immunology', testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.immunology_tests;

DROP TABLE ehr_lookups.immunology_tests;

--urinalysis
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Urinalysis', 'urinalysis_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Urinalysis', testid, name, units, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.urinalysis_tests;

DROP TABLE ehr_lookups.urinalysis_tests;

--virology
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Virology', 'virology_tests');
INSERT INTO ehr_lookups.lab_tests (type, testid, alertOnAbnormal, alertOnAny, includeInPanel, sort_order)
SELECT 'Virology', testid, alertOnAbnormal, alertOnAny, includeInPanel, sort_order
FROM ehr_lookups.virology_tests;

DROP TABLE ehr_lookups.virology_tests;

--istat
INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('iStat', 'istat_tests');

INSERT INTO ehr_lookups.lookups (set_name, value) VALUES ('clinpath_types', 'iSTAT');

/* EHR_Lookups-12.328-12.329.sql */

CREATE TABLE ehr_lookups.cage_positions (
  cage varchar(100) NOT NULL,
  row varchar(100),
  columnIdx int,

  CONSTRAINT PK_cage_positions PRIMARY KEY (cage)
);

INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A1', 'A', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A2', 'A', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A3', 'A', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A4', 'A', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A5', 'A', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A6', 'A', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A7', 'A', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A8', 'A', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A9', 'A', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A10', 'A', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A11', 'A', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A12', 'A', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A13', 'A', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A14', 'A', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A15', 'A', 15);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A16', 'A', 16);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A17', 'A', 17);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('A18', 'A', 18);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B1', 'B', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B2', 'B', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B3', 'B', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B4', 'B', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B5', 'B', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B6', 'B', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B7', 'B', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B8', 'B', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B9', 'B', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B10', 'B', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B11', 'B', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B12', 'B', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B13', 'B', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B14', 'B', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B15', 'B', 15);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('B16', 'B', 16);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C1', 'C', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C2', 'C', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C3', 'C', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C4', 'C', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C5', 'C', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C6', 'C', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C7', 'C', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C8', 'C', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C9', 'C', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C10', 'C', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C11', 'C', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C12', 'C', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C13', 'C', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C14', 'C', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C15', 'C', 15);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C16', 'C', 16);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C17', 'C', 17);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('C18', 'C', 18);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D1', 'D', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D2', 'D', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D3', 'D', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D4', 'D', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D5', 'D', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D6', 'D', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D7', 'D', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D8', 'D', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D9', 'D', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D10', 'D', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D11', 'D', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D12', 'D', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D13', 'D', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D14', 'D', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D15', 'D', 15);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('D16', 'D', 16);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E1', 'E', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E2', 'E', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E3', 'E', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E4', 'E', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E5', 'E', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E6', 'E', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E7', 'E', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E8', 'E', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E9', 'E', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E10', 'E', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E11', 'E', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E12', 'E', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E13', 'E', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('E14', 'E', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F1', 'F', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F2', 'F', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F3', 'F', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F4', 'F', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F5', 'F', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F6', 'F', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F7', 'F', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F8', 'F', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F9', 'F', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F10', 'F', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F11', 'F', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F12', 'F', 12);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F13', 'F', 13);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('F14', 'F', 14);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G1', 'G', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G2', 'G', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G3', 'G', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G4', 'G', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G5', 'G', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G6', 'G', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G7', 'G', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G8', 'G', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G9', 'G', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G10', 'G', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('G11', 'G', 11);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H1', 'H', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H2', 'H', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H3', 'H', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H4', 'H', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H5', 'H', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H6', 'H', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H7', 'H', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H8', 'H', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H9', 'H', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('H10', 'H', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I1', 'I', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I2', 'I', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I3', 'I', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I4', 'I', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I5', 'I', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I6', 'I', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I7', 'I', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I8', 'I', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I9', 'I', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('I10', 'I', 10);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M1', 'M', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M2', 'M', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M3', 'M', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M4', 'M', 4);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M5', 'M', 5);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M6', 'M', 6);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M7', 'M', 7);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M8', 'M', 8);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('M9', 'M', 9);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('S1', 'S', 1);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('S2', 'S', 2);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('S3', 'S', 3);
INSERT INTO ehr_lookups.cage_positions (cage, row, columnIdx) VALUES ('S4', 'S', 4);

/* EHR_Lookups-12.333-12.334.sql */

ALTER TABLE ehr_lookups.ageclass ADD gender varchar(100);

ALTER TABLE ehr_lookups.cage_positions ADD sort_order int;
ALTER TABLE ehr_lookups.rooms ADD sort_order int;

UPDATE ehr_lookups.cage_positions SET sort_order=1 WHERE cage='A1';
UPDATE ehr_lookups.cage_positions SET sort_order=2 WHERE cage='A2';
UPDATE ehr_lookups.cage_positions SET sort_order=3 WHERE cage='A3';
UPDATE ehr_lookups.cage_positions SET sort_order=4 WHERE cage='A4';
UPDATE ehr_lookups.cage_positions SET sort_order=5 WHERE cage='A5';
UPDATE ehr_lookups.cage_positions SET sort_order=6 WHERE cage='A6';
UPDATE ehr_lookups.cage_positions SET sort_order=7 WHERE cage='A7';
UPDATE ehr_lookups.cage_positions SET sort_order=8 WHERE cage='A8';
UPDATE ehr_lookups.cage_positions SET sort_order=9 WHERE cage='A9';
UPDATE ehr_lookups.cage_positions SET sort_order=10 WHERE cage='A10';
UPDATE ehr_lookups.cage_positions SET sort_order=11 WHERE cage='A11';
UPDATE ehr_lookups.cage_positions SET sort_order=12 WHERE cage='A12';
UPDATE ehr_lookups.cage_positions SET sort_order=13 WHERE cage='A13';
UPDATE ehr_lookups.cage_positions SET sort_order=14 WHERE cage='A14';
UPDATE ehr_lookups.cage_positions SET sort_order=15 WHERE cage='A15';
UPDATE ehr_lookups.cage_positions SET sort_order=16 WHERE cage='A16';
UPDATE ehr_lookups.cage_positions SET sort_order=17 WHERE cage='A17';
UPDATE ehr_lookups.cage_positions SET sort_order=18 WHERE cage='A18';
UPDATE ehr_lookups.cage_positions SET sort_order=19 WHERE cage='B1';
UPDATE ehr_lookups.cage_positions SET sort_order=20 WHERE cage='B2';
UPDATE ehr_lookups.cage_positions SET sort_order=21 WHERE cage='B3';
UPDATE ehr_lookups.cage_positions SET sort_order=22 WHERE cage='B4';
UPDATE ehr_lookups.cage_positions SET sort_order=23 WHERE cage='B5';
UPDATE ehr_lookups.cage_positions SET sort_order=24 WHERE cage='B6';
UPDATE ehr_lookups.cage_positions SET sort_order=25 WHERE cage='B7';
UPDATE ehr_lookups.cage_positions SET sort_order=26 WHERE cage='B8';
UPDATE ehr_lookups.cage_positions SET sort_order=27 WHERE cage='B9';
UPDATE ehr_lookups.cage_positions SET sort_order=28 WHERE cage='B10';
UPDATE ehr_lookups.cage_positions SET sort_order=29 WHERE cage='B11';
UPDATE ehr_lookups.cage_positions SET sort_order=30 WHERE cage='B12';
UPDATE ehr_lookups.cage_positions SET sort_order=31 WHERE cage='B13';
UPDATE ehr_lookups.cage_positions SET sort_order=32 WHERE cage='B14';
UPDATE ehr_lookups.cage_positions SET sort_order=33 WHERE cage='B15';
UPDATE ehr_lookups.cage_positions SET sort_order=34 WHERE cage='B16';
UPDATE ehr_lookups.cage_positions SET sort_order=35 WHERE cage='C1';
UPDATE ehr_lookups.cage_positions SET sort_order=36 WHERE cage='C2';
UPDATE ehr_lookups.cage_positions SET sort_order=37 WHERE cage='C3';
UPDATE ehr_lookups.cage_positions SET sort_order=38 WHERE cage='C4';
UPDATE ehr_lookups.cage_positions SET sort_order=39 WHERE cage='C5';
UPDATE ehr_lookups.cage_positions SET sort_order=40 WHERE cage='C6';
UPDATE ehr_lookups.cage_positions SET sort_order=41 WHERE cage='C7';
UPDATE ehr_lookups.cage_positions SET sort_order=42 WHERE cage='C8';
UPDATE ehr_lookups.cage_positions SET sort_order=43 WHERE cage='C9';
UPDATE ehr_lookups.cage_positions SET sort_order=44 WHERE cage='C10';
UPDATE ehr_lookups.cage_positions SET sort_order=45 WHERE cage='C11';
UPDATE ehr_lookups.cage_positions SET sort_order=46 WHERE cage='C12';
UPDATE ehr_lookups.cage_positions SET sort_order=47 WHERE cage='C13';
UPDATE ehr_lookups.cage_positions SET sort_order=48 WHERE cage='C14';
UPDATE ehr_lookups.cage_positions SET sort_order=49 WHERE cage='C15';
UPDATE ehr_lookups.cage_positions SET sort_order=50 WHERE cage='C16';
UPDATE ehr_lookups.cage_positions SET sort_order=51 WHERE cage='C17';
UPDATE ehr_lookups.cage_positions SET sort_order=52 WHERE cage='C18';
UPDATE ehr_lookups.cage_positions SET sort_order=53 WHERE cage='D1';
UPDATE ehr_lookups.cage_positions SET sort_order=54 WHERE cage='D2';
UPDATE ehr_lookups.cage_positions SET sort_order=55 WHERE cage='D3';
UPDATE ehr_lookups.cage_positions SET sort_order=56 WHERE cage='D4';
UPDATE ehr_lookups.cage_positions SET sort_order=57 WHERE cage='D5';
UPDATE ehr_lookups.cage_positions SET sort_order=58 WHERE cage='D6';
UPDATE ehr_lookups.cage_positions SET sort_order=59 WHERE cage='D7';
UPDATE ehr_lookups.cage_positions SET sort_order=60 WHERE cage='D8';
UPDATE ehr_lookups.cage_positions SET sort_order=61 WHERE cage='D9';
UPDATE ehr_lookups.cage_positions SET sort_order=62 WHERE cage='D10';
UPDATE ehr_lookups.cage_positions SET sort_order=63 WHERE cage='D11';
UPDATE ehr_lookups.cage_positions SET sort_order=64 WHERE cage='D12';
UPDATE ehr_lookups.cage_positions SET sort_order=65 WHERE cage='D13';
UPDATE ehr_lookups.cage_positions SET sort_order=66 WHERE cage='D14';
UPDATE ehr_lookups.cage_positions SET sort_order=67 WHERE cage='D15';
UPDATE ehr_lookups.cage_positions SET sort_order=68 WHERE cage='D16';
UPDATE ehr_lookups.cage_positions SET sort_order=69 WHERE cage='E1';
UPDATE ehr_lookups.cage_positions SET sort_order=70 WHERE cage='E2';
UPDATE ehr_lookups.cage_positions SET sort_order=71 WHERE cage='E3';
UPDATE ehr_lookups.cage_positions SET sort_order=72 WHERE cage='E4';
UPDATE ehr_lookups.cage_positions SET sort_order=73 WHERE cage='E5';
UPDATE ehr_lookups.cage_positions SET sort_order=74 WHERE cage='E6';
UPDATE ehr_lookups.cage_positions SET sort_order=75 WHERE cage='E7';
UPDATE ehr_lookups.cage_positions SET sort_order=76 WHERE cage='E8';
UPDATE ehr_lookups.cage_positions SET sort_order=77 WHERE cage='E9';
UPDATE ehr_lookups.cage_positions SET sort_order=78 WHERE cage='E10';
UPDATE ehr_lookups.cage_positions SET sort_order=79 WHERE cage='E11';
UPDATE ehr_lookups.cage_positions SET sort_order=80 WHERE cage='E12';
UPDATE ehr_lookups.cage_positions SET sort_order=81 WHERE cage='E13';
UPDATE ehr_lookups.cage_positions SET sort_order=82 WHERE cage='E14';
UPDATE ehr_lookups.cage_positions SET sort_order=83 WHERE cage='F1';
UPDATE ehr_lookups.cage_positions SET sort_order=84 WHERE cage='F2';
UPDATE ehr_lookups.cage_positions SET sort_order=85 WHERE cage='F3';
UPDATE ehr_lookups.cage_positions SET sort_order=86 WHERE cage='F4';
UPDATE ehr_lookups.cage_positions SET sort_order=87 WHERE cage='F5';
UPDATE ehr_lookups.cage_positions SET sort_order=88 WHERE cage='F6';
UPDATE ehr_lookups.cage_positions SET sort_order=89 WHERE cage='F7';
UPDATE ehr_lookups.cage_positions SET sort_order=90 WHERE cage='F8';
UPDATE ehr_lookups.cage_positions SET sort_order=91 WHERE cage='F9';
UPDATE ehr_lookups.cage_positions SET sort_order=92 WHERE cage='F10';
UPDATE ehr_lookups.cage_positions SET sort_order=93 WHERE cage='F11';
UPDATE ehr_lookups.cage_positions SET sort_order=94 WHERE cage='F12';
UPDATE ehr_lookups.cage_positions SET sort_order=95 WHERE cage='F13';
UPDATE ehr_lookups.cage_positions SET sort_order=96 WHERE cage='F14';
UPDATE ehr_lookups.cage_positions SET sort_order=97 WHERE cage='G1';
UPDATE ehr_lookups.cage_positions SET sort_order=98 WHERE cage='G2';
UPDATE ehr_lookups.cage_positions SET sort_order=99 WHERE cage='G3';
UPDATE ehr_lookups.cage_positions SET sort_order=100 WHERE cage='G4';
UPDATE ehr_lookups.cage_positions SET sort_order=101 WHERE cage='G5';
UPDATE ehr_lookups.cage_positions SET sort_order=102 WHERE cage='G6';
UPDATE ehr_lookups.cage_positions SET sort_order=103 WHERE cage='G7';
UPDATE ehr_lookups.cage_positions SET sort_order=104 WHERE cage='G8';
UPDATE ehr_lookups.cage_positions SET sort_order=105 WHERE cage='G9';
UPDATE ehr_lookups.cage_positions SET sort_order=106 WHERE cage='G10';
UPDATE ehr_lookups.cage_positions SET sort_order=107 WHERE cage='G11';
UPDATE ehr_lookups.cage_positions SET sort_order=108 WHERE cage='H1';
UPDATE ehr_lookups.cage_positions SET sort_order=109 WHERE cage='H2';
UPDATE ehr_lookups.cage_positions SET sort_order=110 WHERE cage='H3';
UPDATE ehr_lookups.cage_positions SET sort_order=111 WHERE cage='H4';
UPDATE ehr_lookups.cage_positions SET sort_order=112 WHERE cage='H5';
UPDATE ehr_lookups.cage_positions SET sort_order=113 WHERE cage='H6';
UPDATE ehr_lookups.cage_positions SET sort_order=114 WHERE cage='H7';
UPDATE ehr_lookups.cage_positions SET sort_order=115 WHERE cage='H8';
UPDATE ehr_lookups.cage_positions SET sort_order=116 WHERE cage='H9';
UPDATE ehr_lookups.cage_positions SET sort_order=117 WHERE cage='H10';
UPDATE ehr_lookups.cage_positions SET sort_order=118 WHERE cage='I1';
UPDATE ehr_lookups.cage_positions SET sort_order=119 WHERE cage='I2';
UPDATE ehr_lookups.cage_positions SET sort_order=120 WHERE cage='I3';
UPDATE ehr_lookups.cage_positions SET sort_order=121 WHERE cage='I4';
UPDATE ehr_lookups.cage_positions SET sort_order=122 WHERE cage='I5';
UPDATE ehr_lookups.cage_positions SET sort_order=123 WHERE cage='I6';
UPDATE ehr_lookups.cage_positions SET sort_order=124 WHERE cage='I7';
UPDATE ehr_lookups.cage_positions SET sort_order=125 WHERE cage='I8';
UPDATE ehr_lookups.cage_positions SET sort_order=126 WHERE cage='I9';
UPDATE ehr_lookups.cage_positions SET sort_order=127 WHERE cage='I10';
UPDATE ehr_lookups.cage_positions SET sort_order=128 WHERE cage='M1';
UPDATE ehr_lookups.cage_positions SET sort_order=129 WHERE cage='M2';
UPDATE ehr_lookups.cage_positions SET sort_order=130 WHERE cage='M3';
UPDATE ehr_lookups.cage_positions SET sort_order=131 WHERE cage='M4';
UPDATE ehr_lookups.cage_positions SET sort_order=132 WHERE cage='M5';
UPDATE ehr_lookups.cage_positions SET sort_order=133 WHERE cage='M6';
UPDATE ehr_lookups.cage_positions SET sort_order=134 WHERE cage='M7';
UPDATE ehr_lookups.cage_positions SET sort_order=135 WHERE cage='M8';
UPDATE ehr_lookups.cage_positions SET sort_order=136 WHERE cage='M9';
UPDATE ehr_lookups.cage_positions SET sort_order=137 WHERE cage='S1';
UPDATE ehr_lookups.cage_positions SET sort_order=138 WHERE cage='S2';
UPDATE ehr_lookups.cage_positions SET sort_order=139 WHERE cage='S3';
UPDATE ehr_lookups.cage_positions SET sort_order=140 WHERE cage='S4';

/* EHR_Lookups-12.336-12.337.sql */

CREATE TABLE ehr_lookups.flag_categories (
  category varchar(100),
  description varchar(4000),
  enforceUnique boolean,

  CONSTRAINT pk_flag_categories PRIMARY KEY (category)
);

INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('ABG', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('Alert', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('ATG', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('BSU', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('Candidate', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('Condition', true);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('Flag', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('PTG', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('SPF', true);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('TB', false);
INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('TMB', false);

/* EHR_Lookups-12.337-12.338.sql */

--implemented based on SQLServer database engine tuning monitor
CREATE INDEX cage_cagetype_room_cage ON ehr_lookups.cage (cage_type, room, cage);
CREATE INDEX cage_cagetype_room_cage_divider_type ON ehr_lookups.cage (room, cage, divider, cage_type);

/* EHR_Lookups-12.338-12.339.sql */

--implemented based on SQLServer database engine tuning monitor
CREATE INDEX rooms_room_area ON ehr_lookups.rooms (room, area);

/* EHR_Lookups-12.339-12.340.sql */

ALTER TABLE ehr_lookups.divider_types ADD displaychar varchar(10);

/* EHR_Lookups-12.340-12.341.sql */

ALTER TABLE ehr_lookups.divider_types ADD bgcolor varchar(100);
ALTER TABLE ehr_lookups.divider_types ADD border_style varchar(100);
ALTER TABLE ehr_lookups.divider_types ADD short_description varchar(100);

--UPDATE ehr_lookups.divider_types SET bgcolor = '' WHERE divider = 'Solid Divider';
UPDATE ehr_lookups.divider_types SET border_style = 'solid' WHERE divider = 'Solid Divider';
UPDATE ehr_lookups.divider_types SET short_description = '' WHERE divider = 'Solid Divider';
UPDATE ehr_lookups.divider_types SET displaychar = '|' WHERE divider = 'Solid Divider';

UPDATE ehr_lookups.divider_types SET bgcolor = 'yellow' WHERE divider = 'Grooming Divider';
UPDATE ehr_lookups.divider_types SET border_style = 'dashed' WHERE divider = 'Grooming Divider';
UPDATE ehr_lookups.divider_types SET short_description = 'GROOM' WHERE divider = 'Grooming Divider';
UPDATE ehr_lookups.divider_types SET displaychar = '=' WHERE divider = 'Grooming Divider';

UPDATE ehr_lookups.divider_types SET bgcolor = 'grey' WHERE divider = 'Mesh Divider';
UPDATE ehr_lookups.divider_types SET border_style = 'dotted' WHERE divider = 'Mesh Divider';
UPDATE ehr_lookups.divider_types SET short_description = 'MESH' WHERE divider = 'Mesh Divider';
UPDATE ehr_lookups.divider_types SET displaychar = '#' WHERE divider = 'Mesh Divider';

--UPDATE ehr_lookups.divider_types SET bgcolor = '' WHERE divider = 'Pairing Divider (No Divider)';
UPDATE ehr_lookups.divider_types SET border_style = 'none' WHERE divider = 'Pairing Divider (No Divider)';
UPDATE ehr_lookups.divider_types SET short_description = '' WHERE divider = 'Pairing Divider (No Divider)';
--UPDATE ehr_lookups.divider_types SET displaychar = '' WHERE divider = 'Pairing Divider (No Divider)';

UPDATE ehr_lookups.divider_types SET bgcolor = 'grey' WHERE divider = 'Pairing Mesh Divider';
UPDATE ehr_lookups.divider_types SET border_style = 'solid' WHERE divider = 'Pairing Mesh Divider';
UPDATE ehr_lookups.divider_types SET short_description = 'MESH' WHERE divider = 'Pairing Mesh Divider';
UPDATE ehr_lookups.divider_types SET displaychar = '#' WHERE divider = 'Pairing Mesh Divider';

/* EHR_Lookups-12.342-12.343.sql */

CREATE INDEX rooms_sort_order_room ON ehr_lookups.rooms (sort_order, room);

--NOTE: this is different than the SQLServer version
CREATE INDEX cage_location ON ehr_lookups.cage (location);

/* EHR_Lookups-12.343-12.344.sql */

--NOTE: this is a placeholder b/c an index is created for SQLServer on snomed that isnt supported in PG
;

/* EHR_Lookups-12.347-12.348.sql */

ALTER TABLE ehr_lookups.species add dateDisabled timestamp;

/* EHR_Lookups-12.348-12.349.sql */

DELETE FROM ehr_lookups.snomed_subsets WHERE subset = 'Diet';
INSERT INTO ehr_lookups.snomed_subsets (subset) VALUES ('Diet');

/* EHR_Lookups-12.349-12.350.sql */

ALTER TABLE ehr_lookups.flag_categories ADD omitFromOverview bool default false;
ALTER TABLE ehr_lookups.flag_categories ADD doHighlight bool default false;

INSERT INTO ehr_lookups.flag_categories (category, enforceUnique, omitFromOverview) values ('Genetics', false, true);
UPDATE ehr_lookups.flag_categories set doHighlight = false;
UPDATE ehr_lookups.flag_categories set doHighlight = true WHERE category = 'Alert';

/* EHR_Lookups-12.351-12.352.sql */

ALTER TABLE ehr_lookups.procedures ADD genericName varchar(200);
ALTER TABLE ehr_lookups.procedures ADD incision bool default false;
ALTER TABLE ehr_lookups.procedures ADD recoveryDays integer;
ALTER TABLE ehr_lookups.procedures ADD followupDays integer;

ALTER TABLE ehr_lookups.procedures ADD analgesiaRx integer;
ALTER TABLE ehr_lookups.procedures ADD antibioticRx integer;

/* EHR_Lookups-12.352-12.353.sql */

ALTER TABLE ehr_lookups.cage_type ADD verticalSlots integer;
UPDATE ehr_lookups.cage_type SET verticalSlots = 1;
UPDATE ehr_lookups.cage_type SET verticalSlots = 2 WHERE cagetype LIKE 'Tunnel - %';

/* EHR_Lookups-12.353-12.354.sql */

ALTER TABLE ehr_lookups.cage_type ADD supportsTunnel bool;
UPDATE ehr_lookups.cage_type SET supportsTunnel = false;
UPDATE ehr_lookups.cage_type SET supportsTunnel = true WHERE cagetype LIKE 'Tunnel - %';
ALTER TABLE ehr_lookups.cage_type DROP COLUMN CageCapacity;

ALTER TABLE ehr_lookups.cage ADD hasTunnel bool;

/* EHR_Lookups-12.354-12.355.sql */

ALTER TABLE ehr_lookups.blood_draw_tube_type ADD color varchar(100);

UPDATE ehr_lookups.blood_draw_tube_type SET color = 'Purple' WHERE type = 'EDTA';
UPDATE ehr_lookups.blood_draw_tube_type SET color = 'Green' WHERE type = 'Heparin';
UPDATE ehr_lookups.blood_draw_tube_type SET color = 'Red' WHERE type = 'No Additive';
UPDATE ehr_lookups.blood_draw_tube_type SET color = 'Striped' WHERE type = 'SST';

/* EHR_Lookups-12.355-12.356.sql */

ALTER TABLE ehr_lookups.blood_draw_services ADD requiredtubetype varchar(100);
ALTER TABLE ehr_lookups.blood_draw_services ADD minvolume double precision;

UPDATE ehr_lookups.blood_draw_services SET requiredtubetype = 'EDTA' WHERE service = 'CBC';
UPDATE ehr_lookups.blood_draw_services SET requiredtubetype = 'SST' WHERE service = 'Vet-19';

/* EHR_Lookups-12.357-12.358.sql */

CREATE TABLE ehr_lookups.labwork_services (
  servicename varchar(200),
  dataset varchar(200),
  chargetype varchar(200),
  sampletype varchar(500),
  collectionmethod varchar(500),
  alertOnComplete bool,

  CONSTRAINT PK_labwork_services PRIMARY KEY (servicename)
);

INSERT INTO ehr_lookups.labwork_services (servicename, dataset, alertOnComplete)
SELECT testname, dataset, alertOnComplete FROM ehr_lookups.clinpath_tests;

CREATE TABLE ehr_lookups.labwork_panels (
  rowid serial,
  servicename varchar(200),
  testname varchar(200),
  sortorder int,

  CONSTRAINT PK_labwork_panels PRIMARY KEY (rowid)
);

INSERT INTO ehr_lookups.request_priority (priority) VALUES ('ASAP');
ALTER TABLE ehr_lookups.request_priority ADD immediatenotification bool;

UPDATE ehr_lookups.request_priority SET immediatenotification = false;
UPDATE ehr_lookups.request_priority SET immediatenotification = true WHERE priority = 'ASAP';

/* EHR_Lookups-12.360-12.361.sql */

ALTER TABLE ehr_lookups.labwork_panels ADD method varchar(200);
ALTER TABLE ehr_lookups.labwork_panels ADD testfieldname varchar(200);

/* EHR_Lookups-12.362-12.363.sql */

ALTER TABLE ehr_lookups.procedure_default_treatments rename column concentration_units to conc_units;

ALTER TABLE ehr_lookups.procedure_default_treatments rename column volume_units to vol_units;

UPDATE ehr_lookups.procedure_default_treatments set amount = dosage;
UPDATE ehr_lookups.procedure_default_treatments set dosage = null;

UPDATE ehr_lookups.procedure_default_treatments set amount_units = dosage_units;
UPDATE ehr_lookups.procedure_default_treatments set dosage_units = null;

/* EHR_Lookups-12.365-12.366.sql */

ALTER TABLE ehr_lookups.snomed_subsets ADD container entityid;
ALTER TABLE ehr_lookups.snomed_subsets ADD rowid serial;

SELECT core.fn_dropifexists('snomed_subsets', 'ehr_lookups', 'CONSTRAINT', 'PK_snomed_subsets');
ALTER TABLE ehr_lookups.snomed_subsets ADD CONSTRAINT pk_snomed_subsets PRIMARY KEY (rowid);

--upgrade path for WNPRC
UPDATE ehr_lookups.snomed_subsets SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');
DELETE FROM ehr_lookups.snomed_subsets WHERE container IS NULL;

INSERT INTO ehr_lookups.labwork_types (type, tablename) VALUES ('Misc Tests', 'misc_tests');

/* EHR_Lookups-12.366-12.367.sql */

INSERT INTO ehr_lookups.flag_categories (category, enforceUnique) VALUES ('Cage Exemptions', true);

/* EHR_Lookups-12.367-12.368.sql */

ALTER TABLE ehr_lookups.labwork_services DROP column sampletype;
ALTER TABLE ehr_lookups.labwork_services ADD tissue varchar(100);

ALTER TABLE ehr_lookups.cageclass ADD requirementset varchar(200);

UPDATE ehr_lookups.cageclass SET requirementset = 'The Guide';

/* EHR_Lookups-12.368-12.369.sql */

ALTER TABLE ehr_lookups.labwork_services ADD outsidelab bool default false;

/* EHR_Lookups-12.369-12.370.sql */

ALTER TABLE ehr_lookups.snomed ADD container ENTITYID;

--upgrade path for WNPRC
UPDATE ehr_lookups.snomed SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');

/* EHR_Lookups-12.370-12.371.sql */

SELECT core.fn_dropifexists('snomed', 'ehr_lookups', 'CONSTRAINT', 'PK_snomed');
ALTER TABLE ehr_lookups.snomed ADD rowid SERIAL;

ALTER TABLE ehr_lookups.snomed ADD CONSTRAINT pk_snomed PRIMARY KEY (rowid);

/* EHR_Lookups-12.374-12.375.sql */

CREATE INDEX snomed_code_container ON ehr_lookups.snomed (code, container);
CREATE INDEX snomed_subset_codes_container_code ON ehr_lookups.snomed_subset_codes (container, code);
CREATE INDEX snomed_subset_codes_container_primarycategory ON ehr_lookups.snomed_subset_codes (container, primarycategory);

/* EHR_Lookups-12.375-12.376.sql */

INSERT INTO ehr_lookups.flag_categories (category, enforceUnique, doHighlight) VALUES ('Assign Alias', true, true);

/* EHR_Lookups-12.377-12.378.sql */

ALTER TABLE ehr_lookups.procedures ADD remark varchar(8000);

ALTER TABLE ehr_lookups.species ADD cites_code varchar(200);

/* EHR_Lookups-12.380-12.381.sql */

ALTER TABLE ehr_lookups.drug_defaults ADD route varchar(100);
ALTER TABLE ehr_lookups.drug_defaults ADD frequency int;
ALTER TABLE ehr_lookups.drug_defaults ADD volume double precision;
ALTER TABLE ehr_lookups.drug_defaults ADD vol_units varchar(100);
ALTER TABLE ehr_lookups.drug_defaults ADD amount double precision;
ALTER TABLE ehr_lookups.drug_defaults ADD amount_units varchar(100);

ALTER TABLE ehr_lookups.drug_defaults ADD duration double precision;
ALTER TABLE ehr_lookups.drug_defaults ADD "offset" double precision;

/* EHR_Lookups-12.382-12.383.sql */

ALTER TABLE ehr_lookups.drug_defaults add rowid serial;
ALTER TABLE ehr_lookups.drug_defaults add ageclass varchar(100);

ALTER TABLE ehr_lookups.drug_defaults DROP CONSTRAINT PK_drug_defaults;
ALTER TABLE ehr_lookups.drug_defaults ADD CONSTRAINT PK_drug_defaults PRIMARY KEY (rowid);

/* EHR_Lookups-12.383-12.384.sql */

ALTER TABLE ehr_lookups.blood_draw_services add formtype varchar(100);
ALTER TABLE ehr_lookups.blood_draw_services add labwork_service varchar(100);

UPDATE ehr_lookups.blood_draw_services SET formtype = 'Clinpath Request';
UPDATE ehr_lookups.blood_draw_services SET labwork_service = service;

/* EHR_Lookups-12.389-12.390.sql */

ALTER TABLE ehr_lookups.drug_defaults ADD category varchar(100);
ALTER TABLE ehr_lookups.drug_defaults ADD volume_rounding double precision;
ALTER TABLE ehr_lookups.drug_defaults ADD amount_rounding double precision;
ALTER TABLE ehr_lookups.drug_defaults ADD amount_max double precision;

/* EHR_Lookups-12.390-12.391.sql */

ALTER TABLE ehr_lookups.procedures DROP COLUMN analgesiaRx;
ALTER TABLE ehr_lookups.procedures DROP COLUMN antibioticRx;

ALTER TABLE ehr_lookups.procedures ADD analgesiaRx varchar(200);
ALTER TABLE ehr_lookups.procedures ADD antibioticRx varchar(200);

/* EHR_Lookups-12.391-12.392.sql */

ALTER TABLE ehr_lookups.treatment_frequency ADD shortname varchar(200);
ALTER TABLE ehr_lookups.treatment_frequency ADD legacyname varchar(200);

/* EHR_Lookups-12.392-12.393.sql */

ALTER TABLE ehr_lookups.treatment_frequency ADD active bool default true;
ALTER TABLE ehr_lookups.treatment_frequency DROP COLUMN legacyname;

/* EHR_Lookups-12.396-12.397.sql */

ALTER TABLE ehr_lookups.procedures add timeOfMeds varchar(200);

/* EHR_Lookups-12.398-12.399.sql */

ALTER TABLE ehr_lookups.lookups add category varchar(200);

/* EHR_Lookups-12.399-12.400.sql */

ALTER TABLE ehr_lookups.cage ADD status VARCHAR(200);

/* EHR_Lookups-12.401-12.402.sql */

CREATE TABLE ehr_lookups.flag_values (
    rowid serial,
    category varchar(100),
    flag_value varchar(1000),
    int_value integer,

    container entityid,
    created timestamp,
    createdby int,
    modified timestamp,
    modifiedby int
);

ALTER TABLE ehr_lookups.procedures DROP COLUMN timeofmeds;

/* EHR_Lookups-12.405-12.406.sql */

DROP TABLE ehr_lookups.flag_values;

CREATE TABLE ehr_lookups.flag_values (
    rowid serial not null,
    category varchar(100),
    value varchar(1000),
    code integer,
    description varchar(2000),

    datedisabled timestamp,

    container entityid NOT NULL,
    createdby int NOT NULL,
    created timestamp NOT NULL,
    modifiedby int NOT NULL,
    modified timestamp NOT NULL,

    CONSTRAINT PK_flag_values PRIMARY KEY (rowid)
);

/* EHR_Lookups-12.406-12.407.sql */

UPDATE ehr_lookups.lookup_sets SET keyField = 'value' WHERE setname = 'birth_condition';

/* EHR_Lookups-12.407-12.408.sql */

delete from ehr_lookups.cage_positions where row = 'N';
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N1', 'N', 1, 137);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N2', 'N', 2, 138);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N3', 'N', 3, 139);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N4', 'N', 4, 140);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N5', 'N', 5, 141);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N6', 'N', 6, 142);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N7', 'N', 7, 143);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N8', 'N', 8, 144);
delete from ehr_lookups.cage_positions where row = 'S';
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('N9', 'N', 9, 145);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('S1', 'S', 1, 146);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('S2', 'S', 1, 147);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('S3', 'S', 1, 148);
insert into ehr_lookups.cage_positions (cage, row, columnIdx, sort_order) values ('S4', 'S', 1, 149);

/* EHR_Lookups-12.408-12.409.sql */

alter table ehr_lookups.divider_types add datedisabled timestamp;
alter table ehr_lookups.divider_types add isMoveable boolean default true;

update ehr_lookups.divider_types set divider = 'No Divider' WHERE divider =  'Pairing Divider (No Divider)';
update ehr_lookups.divider_types set datedisabled = now() where divider = 'Pairing Mesh Divider';

alter table ehr_lookups.cage_type add abbreviation varchar(100);

update ehr_lookups.cage_type  set abbreviation = 'TU' WHERE cagetype like '%Tunnel%';
update ehr_lookups.cage_type  set abbreviation = 'T' WHERE cagetype like '%T';

insert into ehr_lookups.divider_types (divider, countAsSeparate, countAsPaired, displaychar, bgcolor, border_style, short_description, isMoveable)
select 'Cage Well (Solid)', countAsSeparate, countAsPaired, displaychar, bgcolor, border_style, short_description, false from ehr_lookups.divider_types where divider = 'Solid Divider';

/* EHR_Lookups-12.409-12.410.sql */

CREATE INDEX IDX_snomed_container_code_rowid ON ehr_lookups.snomed (container, code, rowid);

/* EHR_Lookups-12.410-12.411.sql */

ALTER TABLE ehr_lookups.labwork_services ADD datedisabled timestamp;

UPDATE ehr_lookups.divider_types SET divider = 'Cage Wall (Solid)' WHERE divider = 'Cage Well (Solid)';

insert into ehr_lookups.divider_types (divider, countAsSeparate, countAsPaired, displaychar, bgcolor, border_style, short_description, isMoveable)
select 'Feeder Slide', countAsSeparate, countAsPaired, displaychar, bgcolor, border_style, short_description, true from ehr_lookups.divider_types where divider = 'Solid Divider';

/* EHR_Lookups-12.411-12.412.sql */

DROP TABLE ehr_lookups.flag_values;

CREATE TABLE ehr_lookups.flag_values (
    rowid serial not null,
    category varchar(100),
    value varchar(1000),
    code integer,
    description varchar(2000),

    datedisabled timestamp,

    objectid entityid NOT NULL,
    container entityid NOT NULL,
    createdby int NOT NULL,
    created timestamp NOT NULL,
    modifiedby int NOT NULL,
    modified timestamp NOT NULL,

    CONSTRAINT PK_flag_values PRIMARY KEY (objectid)
);

/* EHR_Lookups-12.412-12.413.sql */

DROP TABLE ehr_lookups.animal_condition;

/* EHR_Lookups-12.413-12.414.sql */

ALTER TABLE ehr_lookups.labwork_services ADD method varchar(100);

/* EHR_Lookups-12.414-12.415.sql */

UPDATE ehr_lookups.lookups SET set_name = 'housingDefinition' WHERE set_name = 'LocationDefinition';
UPDATE ehr_lookups.lookups SET set_name = 'housingTypes' WHERE set_name = 'LocationType';

/* EHR_Lookups-12.417-12.418.sql */

DROP INDEX ehr_lookups.rooms_sort_order_room;

CREATE INDEX ehr_lookups_set_name_value ON ehr_lookups.lookups (set_name, value);

/* EHR_Lookups-12.420-12.421.sql */

CREATE INDEX IDX_rooms_area_room ON ehr_lookups.rooms (area, room);

/* EHR_Lookups-12.422-12.423.sql */

ALTER TABLE ehr_lookups.snomed_subsets ADD description VARCHAR(4000);

/* EHR_Lookups-12.423-12.424.sql */

ALTER TABLE ehr_lookups.lookup_sets ADD rowid serial;
ALTER TABLE ehr_lookups.lookup_sets ADD container entityid;
ALTER TABLE ehr_lookups.lookups ADD container entityid;

ALTER TABLE ehr_lookups.lookup_sets ADD CONSTRAINT PK_lookup_sets PRIMARY KEY (rowid);

--upgrade path for WNPRC
UPDATE ehr_lookups.lookup_sets SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');
UPDATE ehr_lookups.lookups SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');

--this will upgrade ONPRC, since the query above will leave all records NULL
UPDATE ehr_lookups.lookup_sets SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'ONPRC') WHERE container IS NULL;
UPDATE ehr_lookups.lookups SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'ONPRC') WHERE container IS NULL;

--this will delete any other pre-existing records lacking a container.  the result should be to give WNPRC an upgrade, but truncate any team city agents
DELETE FROM ehr_lookups.lookup_sets WHERE container IS NULL;
DELETE FROM ehr_lookups.lookups WHERE container IS NULL;

/* EHR_Lookups-12.424-12.425.sql */

CREATE FUNCTION ehr.handleUpgrade() RETURNS VOID AS $$
DECLARE
    BEGIN
      IF NOT EXISTS (
        SELECT column_name
        FROM information_schema.columns
        WHERE table_name='lookup_sets' and table_schema='ehr_lookups' and column_name='rowid'
      )
      THEN
        -- Run variants of scripts from the trunk

        ALTER TABLE ehr_lookups.lookup_sets ADD rowid serial;
        ALTER TABLE ehr_lookups.lookup_sets ADD container entityid;
        ALTER TABLE ehr_lookups.lookups ADD container entityid;

        ALTER TABLE ehr_lookups.lookup_sets ADD CONSTRAINT PK_lookup_sets PRIMARY KEY (rowid);

        --upgrade path for WNPRC
        UPDATE ehr_lookups.lookup_sets SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');
        UPDATE ehr_lookups.lookups SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'WNPRC');

        --this will upgrade ONPRC, since the query above will leave all records NULL
        UPDATE ehr_lookups.lookup_sets SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'ONPRC') WHERE container IS NULL;
        UPDATE ehr_lookups.lookups SET container = (SELECT c.entityid from core.containers c LEFT JOIN core.Containers c2 on (c.Parent = c2.EntityId) WHERE c.name = 'EHR' and c2.name = 'ONPRC') WHERE container IS NULL;

        --this will delete any other pre-existing records lacking a container.  the result should be to give WNPRC an upgrade, but truncate any team city agents
        DELETE FROM ehr_lookups.lookup_sets WHERE container IS NULL;
        DELETE FROM ehr_lookups.lookups WHERE container IS NULL;
      END IF;
    END;
$$ LANGUAGE plpgsql;

SELECT ehr.handleUpgrade();

DROP FUNCTION ehr.handleUpgrade();