buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url "${artifactory_contextUrl}/plugins-release-no-proxy"
        }
        if (gradlePluginsVersion.contains("SNAPSHOT"))
        {
            maven {
                url "${artifactory_contextUrl}/plugins-snapshot-local"
            }

        }
    }
    dependencies {
        classpath "org.labkey.build:gradlePlugins:${gradlePluginsVersion}"
    }
    configurations.all {
        // Check for updates every build for SNAPSHOT dependencies
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}
import org.labkey.gradle.util.BuildUtils

sourceSets {
    api {
        java { srcDirs = ['api-src'] }
        output.resourcesDir = project.layout.buildDirectory.file("api-classes")
    }
    main {
        java { srcDirs = ["src"] }
    }
}

configurations {
    apiExternal
    apiImplementation.extendsFrom(apiExternal)
    external
    implementation.extendsFrom(external)
}

//TODO: Check where are warning in the ApiKey, DeviceProxy and DbUtils 
//      the following lines are commented temporary to allow compiling in TeamCity 
//tasks.compileApiJava {
//    options.compilerArgs << '-Werror'
//}
//tasks.compileJava {
//    options.compilerArgs << "-Werror"
//}

dependencies {
    apiImplementation 'org.jetbrains:annotations:15.0'
    apiImplementation project(BuildUtils.getApiProjectPath(project.gradle))
    apiImplementation project(":server:modules:wnprc-modules:java2ts")

    implementation 'org.jetbrains:annotations:15.0'
    implementation "junit:junit:${junitVersion}"
    implementation project(BuildUtils.getApiProjectPath(project.gradle))
    implementation project(":server:modules:LabDevKitModules:LDK")
    implementation project(":server:modules:wnprc-modules:java2ts")

    BuildUtils.addLabKeyDependency(project: project, config: "modules", depProjectPath: ":server:modules:ldap", depProjectConfig: 'published', depExtension: 'module')
}

project.evaluationDependsOn(BuildUtils.getApiProjectPath(project.gradle))

tasks.named('jar').configure {
    manifest {
        attributes 'Sealed': 'true'
    }
}
